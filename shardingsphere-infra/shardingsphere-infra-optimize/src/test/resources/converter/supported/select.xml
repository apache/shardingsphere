<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sql-cases>
    <sql-case id="select_with_join_table_subquery" value="SELECT t_order_federate.order_id, t_order_federate.user_id, u.user_id FROM t_order_federate, (SELECT * FROM t_user_info) as u WHERE t_order_federate.user_id = u.user_id" db-types="MySQL" />
    <sql-case id="select_with_projection_subquery" value="SELECT t_order_federate.order_id, t_order_federate.user_id, (SELECT COUNT(*) FROM t_user_info) FROM t_order_federate" db-types="MySQL" />
    <sql-case id="select_with_in_subquery_condition" value="SELECT t_order_federate.order_id, t_order_federate.user_id FROM t_order_federate WHERE user_id IN (SELECT * FROM t_user_info)" db-types="MySQL" />
    <sql-case id="select_with_between_and_subquery_condition" value="SELECT t_order_federate.order_id, t_order_federate.user_id FROM t_order_federate WHERE user_id BETWEEN (SELECT user_id FROM t_user_info WHERE information = 'before') AND (SELECT user_id FROM t_user_info WHERE information = 'after')" db-types="MySQL" />
    <sql-case id="select_with_exist_subquery_condition" value="SELECT t_order_federate.order_id, t_order_federate.user_id FROM t_order_federate WHERE EXISTS (SELECT * FROM t_user_info WHERE t_order_federate.user_id = t_user_info.user_id)" db-types="MySQL" />
    <sql-case id="select_with_not_exist_subquery_condition" value="SELECT t_order_federate.order_id, t_order_federate.user_id FROM t_order_federate WHERE NOT EXISTS (SELECT * FROM t_user_info WHERE t_order_federate.user_id = t_user_info.user_id)" db-types="MySQL" />
    <sql-case id="select_with_simple_table" value="SELECT order_id, user_id FROM t_order" db-types="MySQL" />
    <sql-case id="select_with_limit_offset_and_row_count" value="SELECT order_id, user_id FROM t_order LIMIT 1, 2" db-types="MySQL" />
    <sql-case id="select_with_limit_row_count" value="SELECT order_id, user_id FROM t_order LIMIT 2" db-types="MySQL" />
    <sql-case id="select_with_where_condition" value="SELECT order_id, user_id FROM t_order WHERE order_id = 10" db-types="MySQL" />
    <sql-case id="select_with_where_condition_and_group_by" value="SELECT order_id, user_id FROM t_order WHERE order_id = 10 GROUP BY order_id" db-types="MySQL" />
    <sql-case id="select_with_where_condition_and_order_by" value="SELECT order_id, user_id FROM t_order WHERE user_id = 10 ORDER BY order_id DESC" db-types="MySQL" />
    <sql-case id="select_with_inner_join_and_order_by" value="SELECT 10 + 30, o1.order_id + 10, o1.order_id, o1.user_id, o2.status FROM t_order o1 JOIN t_order_item o2 ON o1.order_id = o2.order_id WHERE o1.status='FINISHED' AND o2.order_item_id > 1024 AND 1=1 ORDER BY o1.order_id DESC" db-types="MySQL" />
    <sql-case id="select_with_left_outer_join_and_order_by" value="SELECT 10 + 30, o1.order_id + 10, o1.order_id, o1.user_id, o2.status FROM t_order o1 LEFT OUTER JOIN t_order_item o2 ON o1.order_id = o2.order_id WHERE o1.status='FINISHED' AND o2.order_item_id > 1024 AND 1=1 ORDER BY o1.order_id DESC" db-types="MySQL" />
</sql-cases>
