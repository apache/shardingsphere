#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring.shardingsphere.schema.name=foo_db

spring.shardingsphere.datasource.names=ds${0..1}

spring.shardingsphere.datasource.ds0.type=org.apache.shardingsphere.test.mock.MockedDataSource
spring.shardingsphere.datasource.ds1.type=org.apache.shardingsphere.test.mock.MockedDataSource

spring.shardingsphere.rules.readwrite-splitting.load-balancers.random.type=RANDOM

spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.type=Static
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.props.write-data-source-name=write_ds
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.props.read-data-source-names=read_ds_0,read_ds_1
spring.shardingsphere.rules.readwrite-splitting.data-sources.readwrite_ds.load-balancer-name=random

spring.shardingsphere.rules.sharding.sharding-algorithms.databaseShardingAlgorithm.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.databaseShardingAlgorithm.props.algorithm-expression=ds$->{user_id % 2}

spring.shardingsphere.rules.sharding.sharding-algorithms.orderTableShardingAlgorithm.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.orderTableShardingAlgorithm.props.algorithm-expression=t_order_$->{order_id % 2}

spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}

spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=databaseShardingAlgorithm
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=orderTableShardingAlgorithm

spring.shardingsphere.rules.sharding.default-sharding-column=user_id

spring.shardingsphere.rules.encrypt.encryptors.aesEncryptor.type=AES
spring.shardingsphere.rules.encrypt.encryptors.aesEncryptor.props.aes-key-value=123456

spring.shardingsphere.rules.encrypt.tables.t_order.columns.pwd.cipher-column=pwd_cipher
spring.shardingsphere.rules.encrypt.tables.t_order.columns.pwd.assisted-query-column=pwd_assisted_query_cipher
spring.shardingsphere.rules.encrypt.tables.t_order.columns.pwd.plain-column=pwd_plain
spring.shardingsphere.rules.encrypt.tables.t_order.columns.pwd.encryptor-name=aesEncryptor

spring.shardingsphere.rules.shadow.data-sources.shadow-data-source.source-data-source-name=ds
spring.shardingsphere.rules.shadow.data-sources.shadow-data-source.shadow-data-source-name=ds-shadow

spring.shardingsphere.rules.shadow.tables.t_order.data-source-names=shadow-data-source
spring.shardingsphere.rules.shadow.tables.t_order.shadow-algorithm-names=user-id-match-algorithm,order-id-match-algorithm,simple-hint-algorithm
spring.shardingsphere.rules.shadow.tables.t_user.data-source-names=shadow-data-source
spring.shardingsphere.rules.shadow.tables.t_user.shadow-algorithm-names=simple-hint-algorithm

spring.shardingsphere.rules.shadow.shadow-algorithms.user-id-match-algorithm.type=REGEX_MATCH
spring.shardingsphere.rules.shadow.shadow-algorithms.user-id-match-algorithm.props.operation=insert
spring.shardingsphere.rules.shadow.shadow-algorithms.user-id-match-algorithm.props.column=user_id
spring.shardingsphere.rules.shadow.shadow-algorithms.user-id-match-algorithm.props.regex=[1]

spring.shardingsphere.rules.shadow.shadow-algorithms.order-id-match-algorithm.type=REGEX_MATCH
spring.shardingsphere.rules.shadow.shadow-algorithms.order-id-match-algorithm.props.operation=update
spring.shardingsphere.rules.shadow.shadow-algorithms.order-id-match-algorithm.props.column=user_id
spring.shardingsphere.rules.shadow.shadow-algorithms.order-id-match-algorithm.props.regex=[1]

spring.shardingsphere.rules.shadow.shadow-algorithms.simple-hint-algorithm.type=SIMPLE_HINT
spring.shardingsphere.rules.shadow.shadow-algorithms.simple-hint-algorithm.props.shadow=true
spring.shardingsphere.rules.shadow.shadow-algorithms.simple-hint-algorithm.props.foo=bar

spring.shardingsphere.props.sql-show=true
spring.shardingsphere.props.kernel-executor-size=10

spring.shardingsphere.rules.sql-parser.sql-comment-parse-enabled=true

spring.shardingsphere.rules.sql-parser.sql-statement-cache.maximum-size=1024
spring.shardingsphere.rules.sql-parser.sql-statement-cache.initial-capacity=1024
spring.shardingsphere.rules.sql-parser.sql-statement-cache.concurrency-level=4

spring.shardingsphere.rules.sql-parser.parse-tree-cache.maximum-size=1024
spring.shardingsphere.rules.sql-parser.parse-tree-cache.initial-capacity=1024
spring.shardingsphere.rules.sql-parser.parse-tree-cache.concurrency-level=4
