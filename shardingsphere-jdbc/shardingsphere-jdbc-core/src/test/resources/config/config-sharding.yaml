#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

rules:
- !SHARDING
  tables:
    t_order:
      actualDataNodes: jdbc_${0..1}.t_order_${0..1}
    t_order_item:
      actualDataNodes: jdbc_${0..1}.t_order_item_${0..1}
      keyGenerateStrategy:
        column: item_id
        keyGeneratorName: increment
    t_config:
      actualDataNodes: jdbc_${0..1}.t_config
    t_user:
      actualDataNodes: jdbc_0.t_user_${0..1}
      tableStrategy:
        standard:
          shardingColumn: id
          shardingAlgorithmName: table_inline
      keyGenerateStrategy:
        column: id
        keyGeneratorName: reset_increment
  autoTables:
    t_order_auto:
      actualDataSources: jdbc_0, jdbc_1
      shardingStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: mod
    t_order_item_auto:
      shardingStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: mod
  bindingTables:
    - t_order,t_order_item
  broadcastTables:
    - t_config
  defaultTableStrategy:
    standard:
      shardingColumn: order_id
      shardingAlgorithmName: standard_test
  defaultDatabaseStrategy:
    standard:
      shardingColumn: user_id
      shardingAlgorithmName: standard_test
  
  shardingAlgorithms:
    standard_test:
        type: STANDARD_TEST
    table_inline:
      type: INLINE
      props:
        algorithm-expression: t_user_${id % 2}
    mod:
      type: MOD
      props:
        sharding-count: 2
  
  keyGenerators:
    increment:
      type: INCREMENT
    reset_increment:
      type: RESET_INCREMENT
