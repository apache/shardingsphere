parameter: |
  dataSources:
    ds_0:
      dataSourceClassName: org.apache.shardingsphere.test.mock.MockedDataSource
      jdbcUrl: jdbc:h2:mem:test_ds_0;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
    ds_1:
      dataSourceClassName: org.apache.shardingsphere.test.mock.MockedDataSource
      jdbcUrl: jdbc:h2:mem:test_ds_1;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
    ds_2:
      dataSourceClassName: org.apache.shardingsphere.test.mock.MockedDataSource
      jdbcUrl: jdbc:h2:mem:test_ds_2;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
    ds_3:
      dataSourceClassName: org.apache.shardingsphere.test.mock.MockedDataSource
      jdbcUrl: jdbc:h2:mem:test_ds_3;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
    ds_4:
      dataSourceClassName: org.apache.shardingsphere.test.mock.MockedDataSource
      jdbcUrl: jdbc:h2:mem:test_ds_4;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
  rules:
  - !SHARDING
    autoTables:
      t_order:
        actualDataSources: ds_2,ds_3,ds_4
        keyGenerateStrategy:
          column: order_id
          keyGeneratorName: t_order_snowflake
        logicTable: t_order
        shardingStrategy:
          standard:
            shardingAlgorithmName: t_order_hash_mod
            shardingColumn: order_id
    defaultDatabaseStrategy:
      standard:
        shardingAlgorithmName: database_inline
        shardingColumn: user_id
    defaultTableStrategy:
      none: ''
    keyGenerators:
      snowflake:
        type: SNOWFLAKE
      t_order_snowflake:
        type: snowflake
    scaling:
      default_scaling:
        completionDetector:
          props:
            incremental-task-idle-minute-threshold: 30
          type: IDLE
        dataConsistencyChecker:
          props:
            chunk-size: 1000
          type: DATA_MATCH
        input:
          batchSize: 1000
          workerThread: 40
        output:
          batchSize: 1000
          workerThread: 40
        streamChannel:
          props:
            block-queue-size: 10000
          type: MEMORY
    scalingName: default_scaling
    shardingAlgorithms:
      database_inline:
        props:
          algorithm-expression: ds_${user_id % 2}
        type: INLINE
      t_order_inline:
        props:
          algorithm-expression: t_order_${order_id % 2}
        type: INLINE
      t_order_hash_mod:
        props:
          sharding-count: '6'
        type: hash_mod
  schemaName: sharding_db
type: ShardingSphereJDBC
