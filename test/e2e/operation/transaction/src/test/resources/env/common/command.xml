<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<command>
    <create-order-table-rule>
        CREATE SHARDING TABLE RULE t_order (
        DATANODES("ds_${0..1}.t_order_${0..1}"),
        DATABASE_STRATEGY(TYPE='STANDARD',SHARDING_COLUMN=`user_id`,SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))),
        TABLE_STRATEGY(TYPE='STANDARD',SHARDING_COLUMN=`order_id`,SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))),
        KEY_GENERATE_STRATEGY(COLUMN=`order_id`,TYPE(NAME='snowflake'))
        )
    </create-order-table-rule>

    <create-order-item-table-rule>
        CREATE SHARDING TABLE RULE t_order_item (
        DATANODES("ds_${0..1}.t_order_item_${0..1}"),
        DATABASE_STRATEGY(TYPE='STANDARD',SHARDING_COLUMN=`user_id`,SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))),
        TABLE_STRATEGY(TYPE='STANDARD',SHARDING_COLUMN=`order_id`,SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))),
        KEY_GENERATE_STRATEGY(COLUMN=`order_id`,TYPE(NAME='snowflake'))
        )
    </create-order-item-table-rule>

    <create-account-table-rule>
        CREATE SHARDING TABLE RULE account (
        DATANODES("ds_${0..1}.account_${0..1}"),
        DATABASE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="ds_${id % 2}"))),
        TABLE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE',PROPERTIES("algorithm-expression"="account_${Math.floorMod(Math.floorDiv(id.longValue(), 2L), 2L)}"))),
        KEY_GENERATE_STRATEGY(COLUMN=`id`,TYPE(NAME='snowflake'))
        )
    </create-account-table-rule>

    <create-one-data-source-account-table-rule>
        CREATE SHARDING TABLE RULE account (
        DATANODES("ds_0.account_${0..1}"),
        DATABASE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE', PROPERTIES("algorithm-expression"="ds_${id % 1}")))),
        TABLE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE', PROPERTIES("algorithm-expression"="account_${Math.floorMod(Math.floorDiv(id.longValue(), 1L), 2L)}"))))
        )
    </create-one-data-source-account-table-rule>

    <create-three-data-source-account-table-rule>
        CREATE SHARDING TABLE RULE account (
        DATANODES("ds_${0..2}.account_${0..1}"),
        DATABASE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE', PROPERTIES("algorithm-expression"="ds_${id % 3}")))),
        TABLE_STRATEGY(TYPE='STANDARD', SHARDING_COLUMN=`id`, SHARDING_ALGORITHM(TYPE(NAME='INLINE', PROPERTIES("algorithm-expression"="account_${Math.floorMod(Math.floorDiv(id.longValue(), 3L), 2L)}"))))
        )
    </create-three-data-source-account-table-rule>

    <create-address-broadcast-table-rule>
        CREATE BROADCAST TABLE RULE t_address;
    </create-address-broadcast-table-rule>
    
    <alter-local-transaction-rule>
        ALTER TRANSACTION RULE (DEFAULT='LOCAL')
    </alter-local-transaction-rule>

    <alter-xa-transaction-rule>
        ALTER TRANSACTION RULE
        (
        DEFAULT='XA',
        TYPE(NAME='${providerType}')
        )
    </alter-xa-transaction-rule>

    <source-add-resource-template>
        REGISTER STORAGE UNIT ds_0 (
        URL="${ds0}",
        USER="${user}",
        PASSWORD="${password}"
        ), ds_1 (
        URL="${ds1}",
        USER="${user}",
        PASSWORD="${password}"
        )
    </source-add-resource-template>

    <source-add-new-resource-template>
        REGISTER STORAGE UNIT ds_2 (
            URL="${ds2}",
            USER="${user}",
            PASSWORD="${password}"
        )
    </source-add-new-resource-template>
    
    <create-account-table>
        CREATE TABLE account
        (
        id BIGINT, balance FLOAT,
        transaction_id INT
        )
    </create-account-table>

    <create-order-table>
        CREATE TABLE t_order
        (
        order_id INT NOT NULL,
        user_id INT NOT NULL,
        status VARCHAR(45) NULL,
        PRIMARY KEY (order_id)
        )
    </create-order-table>

    <create-order-item-table>
        CREATE TABLE t_order_item
        (
        item_id bigint NOT NULL,
        order_id int NOT NULL,
        user_id int NOT NULL,
        status varchar(50) DEFAULT NULL,
        PRIMARY KEY (item_id)
        )
    </create-order-item-table>
    
    <create-address-table>
        CREATE TABLE t_address 
        (
        id BIGINT NOT NULL,
        code VARCHAR(36) DEFAULT NULL,
        address VARCHAR(36) DEFAULT NULL,
        PRIMARY KEY (id)
        )
    </create-address-table>
</command>
