<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<command>
    <alter-migration-rule>
        ALTER MIGRATION RULE (
        READ(
        WORKER_THREAD=20,
        BATCH_SIZE=1000,
        SHARDING_SIZE=10000000,
        RATE_LIMITER (TYPE(NAME='QPS',PROPERTIES('qps'='500')))
        ),
        WRITE(
        WORKER_THREAD=20,
        BATCH_SIZE=1000,
        RATE_LIMITER (TYPE(NAME='TPS',PROPERTIES('tps'='2000')))
        ),
        STREAM_CHANNEL (TYPE(NAME='MEMORY',PROPERTIES('block-queue-size'='2000')))
        );
    </alter-migration-rule>
    
    <register-migration-source-storage-unit-template>
        REGISTER MIGRATION SOURCE STORAGE UNIT ds_0 (
        URL="${ds0}",
        USER="${user}",
        PASSWORD="${password}"
        );
    </register-migration-source-storage-unit-template>
    
    <register-migration-target-storage-unit-template>
        REGISTER STORAGE UNIT ds_2 (
        URL="${ds2}",
        USER="${user}",
        PASSWORD="${password}"
        ),ds_3 (
        URL="${ds3}",
        USER="${user}",
        PASSWORD="${password}"
        ),ds_4 (
        URL="${ds4}",
        USER="${user}",
        PASSWORD="${password}"
        )
    </register-migration-target-storage-unit-template>
    
    <create-target-order-table-encrypt-rule>
        CREATE ENCRYPT RULE t_order (
        COLUMNS((NAME=status, CIPHER=status,ENCRYPT_ALGORITHM(TYPE(NAME='AES',PROPERTIES('aes-key-value'='123456abc'))))))
    </create-target-order-table-encrypt-rule>
    
    <create-target-order-table-rule>
        CREATE SHARDING TABLE RULE t_order(
        STORAGE_UNITS(ds_2,ds_3,ds_4),
        SHARDING_COLUMN=user_id,
        TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="6")),
        AUDIT_STRATEGY (TYPE(NAME="DML_SHARDING_CONDITIONS"),ALLOW_HINT_DISABLE=true)
        );
    </create-target-order-table-rule>
    
    <create-target-order-item-table-rule>
        CREATE SHARDING TABLE RULE t_order_item(
        DATANODES('ds_${2..4}.t_order_item_${0..1}'),
        DATABASE_STRATEGY(TYPE='standard',SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME='inline',PROPERTIES('algorithm-expression'='ds_${user_id % 3 + 2}')))),
        TABLE_STRATEGY(TYPE='standard',SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME='inline',PROPERTIES('algorithm-expression'='t_order_item_${order_id % 2}'))))
        );
    </create-target-order-item-table-rule>
    
    <migration-single-table>
        MIGRATE TABLE ds_0.%s INTO sharding_DB.%s;
    </migration-single-table>
    
    <migration-single-table-with-schema>
        MIGRATE TABLE ds_0.test.%s INTO sharding_DB.%s;
    </migration-single-table-with-schema>
</command>
