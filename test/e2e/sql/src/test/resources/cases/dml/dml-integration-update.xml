<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<integration-test-cases>
    <test-case sql="UPDATE t_order SET status = ? WHERE order_id = ? AND user_id = ?" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order AS o SET o.status = ? WHERE o.order_id = ? AND o.user_id = ?" db-types="H2,MySQL,SQLServer,Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order o SET o.status = 'finished'" db-types="H2,MySQL,SQLServer,Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update_without_condition.xml" />
    </test-case>
    
    <test-case sql="UPDATE /*+ index(field1) */ ONLY t_order SET status=? WHERE order_id = ? AND user_id = ? RETURN * LOG ERRORS INTO TABLE_LOG" db-types="Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = 'update' WHERE order_id = 1000 AND user_id = 10" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = 'update' WHERE (order_id = ? OR order_id = ?) AND user_id = ?" db-types="H2,MySQL,SQLServer,Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1000:int, 0:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = status where user_id = user_id AND order_id = 1000" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update_with_column_equal_column.xml" />
    </test-case>
    
    <!-- TODO FIXED ME PostgreSQL return 0 -->
    <test-case sql="UPDATE t_broadcast_table b SET b.status = 'finished'" db-types="H2,MySQL,SQLServer,Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting">
        <assertion expected-data-file="update_broadcast_table.xml" />
    </test-case>
    
    <!--fixme! issue #9769-->
    <!--    <test-case sql="UPDATE t_single_table s SET s.status = 'finished'" db-types="MySQL,SQLServer,PostgreSQL,Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,encrypt,dbtbl_with_readwrite_splitting_and_encrypt">-->
    <!--        <assertion expected-data-file="update_single_table.xml" />-->
    <!--    </test-case>-->
    
    <test-case sql="UPDATE t_user u SET u.password = ? WHERE u.user_id = ?" db-types="H2,MySQL,openGauss,SQLServer,Oracle" scenario-types="encrypt">
        <assertion parameters="222222:String, 10:int" expected-data-file="update_user_table.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_user u SET u.telephone = ? WHERE u.password = ?" db-types="H2,MySQL,openGauss,SQLServer,Oracle" scenario-types="encrypt">
        <assertion parameters="12345678901:String, 111111:String" expected-data-file="update_user_table_by_pwd.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_user SET password = ? WHERE user_id = ?" db-types="H2,MySQL,PostgreSQL,openGauss,SQLServer,Oracle" scenario-types="encrypt">
        <assertion parameters="222222:String, 10:int" expected-data-file="update_user_table.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_user SET telephone = ? WHERE password = ?" db-types="H2,MySQL,PostgreSQL,openGauss,SQLServer,Oracle" scenario-types="encrypt">
        <assertion parameters="12345678901:String, 111111:String" expected-data-file="update_user_table_by_pwd.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_shadow SET order_name = ?, type_char = ?, type_boolean = ?, type_smallint = ?, type_enum = ?, type_decimal = ?, type_date = ?, type_time = ?, type_timestamp = ?
                    WHERE user_id = ? and order_id in (?, ?)" db-types="MySQL" scenario-types="shadow,sharding_encrypt_shadow,encrypt_shadow,readwrite_splitting_and_shadow,sharding_and_shadow">
        <assertion parameters="pro_order_update:String, F:char, false:boolean, 60:smallint, spring:enum#season, 120.00:decimal, 2021-01-02:Date, 13:30:30:time, 2021-01-02 13:30:30.0:timestamp, 1:int, 1:int, 2:int"
                   expected-data-file="pro_update_order_by_user_id.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_shadow SET order_name = ?, type_char = ?, type_boolean = ?, type_smallint = ?, type_enum = ?, type_decimal = ?, type_date = ?, type_time = ?, type_timestamp = ?
                    WHERE user_id = ? and order_id in (?, ?)" db-types="MySQL" scenario-types="shadow,sharding_encrypt_shadow,encrypt_shadow,readwrite_splitting_and_shadow,sharding_and_shadow">
        <assertion parameters="shadow_order_update:String, F:char, false:boolean, 60:smallint, spring:enum#season, 120.00:decimal, 2021-01-02:Date, 13:30:30:time, 2021-01-02 13:30:30.0:timestamp, 0:int, 1:int, 2:int"
                   expected-data-file="shadow_update_order_by_user_id.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_shadow SET order_name = ?, type_char = ?, type_boolean = ?, type_smallint = ?, type_decimal = ?, type_enum = CAST(? AS season)
                    WHERE user_id = ? and order_id in (?, ?)" db-types="PostgreSQL" scenario-types="shadow,sharding_encrypt_shadow,readwrite_splitting_and_shadow,sharding_and_shadow">
        <assertion parameters="pro_order_update:String, F:char, false:boolean, 60:smallint, 120.00:decimal, spring:enum#season, 1:int, 1:int, 2:int"
                   expected-data-file="pro_update_order_by_user_id.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_shadow SET order_name = ?, type_char = ?, type_boolean = ?, type_smallint = ?, type_decimal = ?, type_enum = CAST(? AS season)
                    WHERE user_id = ? and order_id in (?, ?)" db-types="PostgreSQL" scenario-types="shadow,sharding_encrypt_shadow,readwrite_splitting_and_shadow,sharding_and_shadow">
        <assertion parameters="shadow_order_update:String, F:char, false:boolean, 60:smallint, 120.00:decimal, spring:enum#season, 0:int, 1:int, 2:int"
                   expected-data-file="shadow_update_order_by_user_id.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_data_type_money SET val = val + ?::money WHERE id = ?" db-types="PostgreSQL,openGauss" scenario-types="passthrough">
        <assertion parameters="12345.6789:String, 1001:int" expected-data-file="update_money_add_value.xml"/>
    </test-case>
    
    <test-case sql="UPDATE t_data_type_money SET val = val + ?::money WHERE id = ?" db-types="PostgreSQL,openGauss" scenario-types="passthrough">
        <assertion parameters="-12345.6789:String, 1002:int" expected-data-file="update_money_subtract_value.xml"/>
    </test-case>
</integration-test-cases>
