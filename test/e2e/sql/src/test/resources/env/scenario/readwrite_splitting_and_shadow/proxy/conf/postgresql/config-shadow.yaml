#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

databaseName: readwrite_splitting_and_shadow

dataSources:
  write_db:
    url: jdbc:postgresql://postgresql.readwrite_splitting_and_shadow.host:5432/write_db
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  write_db_shadow:
    url: jdbc:postgresql://postgresql.readwrite_splitting_and_shadow.host:5432/write_db_shadow
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  read_0:
    url: jdbc:postgresql://postgresql.readwrite_splitting_and_shadow.host:5432/read_0
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  read_1:
    url: jdbc:postgresql://postgresql.readwrite_splitting_and_shadow.host:5432/read_1
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2

rules:
- !SINGLE
  tables:
    - "*.*.*"
- !READWRITE_SPLITTING
  dataSources:
    write-read-ds:
      writeDataSourceName: shadowDataSource
      readDataSourceNames:
        - read_0
        - read_1

- !SHADOW
  dataSources:
    shadowDataSource:
      productionDataSourceName: write_db
      shadowDataSourceName: write_db_shadow
  tables:
    t_shadow:
      dataSourceNames:
        - shadowDataSource
      shadowAlgorithmNames:
        - user-id-insert-match-algorithm
        - user-id-update-match-algorithm
        - user-id-delete-match-algorithm
        - user-id-select-match-algorithm
        - sql-hint-algorithm
    t_merchant:
      dataSourceNames:
        - shadowDataSource
      shadowAlgorithmNames:
        - merchant-id-insert-match-algorithm
        - merchant-id-update-match-algorithm
        - merchant-id-delete-match-algorithm
        - merchant-id-select-match-algorithm
        - sql-hint-algorithm
  shadowAlgorithms:
    user-id-insert-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: insert
        column: user_id
        value: 0
    user-id-update-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: update
        column: user_id
        value: 0
    user-id-delete-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: delete
        column: user_id
        value: 0
    user-id-select-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: select
        column: user_id
        value: 0
    sql-hint-algorithm:
      type: SQL_HINT
      props:
        foo: bar
    merchant-id-insert-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: insert
        column: merchant_id
        value: 0
    merchant-id-update-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: update
        column: merchant_id
        value: 0
    merchant-id-delete-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: delete
        column: merchant_id
        value: 0
    merchant-id-select-match-algorithm:
      type: VALUE_MATCH
      props:
        operation: select
        column: merchant_id
        value: 0
