#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

databaseName: db

dataSources:
  ds_0:
    url: jdbc:opengauss://opengauss.db.host:5432/db_0
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_1:
    url: jdbc:opengauss://opengauss.db.host:5432/db_1
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_2:
    url: jdbc:opengauss://opengauss.db.host:5432/db_2
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_3:
    url: jdbc:opengauss://opengauss.db.host:5432/db_3
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_4:
    url: jdbc:opengauss://opengauss.db.host:5432/db_4
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_5:
    url: jdbc:opengauss://opengauss.db.host:5432/db_5
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_6:
    url: jdbc:opengauss://opengauss.db.host:5432/db_6
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_7:
    url: jdbc:opengauss://opengauss.db.host:5432/db_7
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_8:
    url: jdbc:opengauss://opengauss.db.host:5432/db_8
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2
  ds_9:
    url: jdbc:opengauss://opengauss.db.host:5432/db_9
    username: test_user
    password: Test@123
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 2
    minPoolSize: 2

rules:
- !SHARDING
  tables:
    t_order:
      actualDataNodes: ds_${0..9}.t_order
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: it_standard_fixture
    t_order_item:
      actualDataNodes: ds_${0..9}.t_order_item
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: it_standard_fixture
      keyGenerateStrategy:
        column: item_id
        keyGeneratorName: constant
      auditStrategy:
        auditorNames:
          - auditor_constant
        allowHintDisable: true
    t_order_details:
      actualDataNodes: ds_${0..9}.t_order_details
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: it_standard_fixture
    t_order_federate_sharding:
      actualDataNodes: ds_${0..1}.t_order_federate_sharding
      databaseStrategy:
        standard:
          shardingColumn: order_id_sharding
          shardingAlgorithmName: db_inline_order_id
    t_order_item_federate_sharding:
      actualDataNodes: ds_${0..1}.t_order_item_federate_sharding
      databaseStrategy:
        standard:
          shardingColumn: item_id
          shardingAlgorithmName: db_inline_item_id
  bindingTables:
    - t_order,t_order_item,t_order_details
  broadcastTables:
    - t_broadcast_table
    - t_broadcast_table_for_ddl
    - t_product_category
    - t_country
  shardingAlgorithms:
    it_standard_fixture:
      type: IT.STANDARD.FIXTURE
    db_inline_order_id:
      type: INLINE
      props:
        algorithm-expression: ds_${order_id_sharding % 2}
    db_inline_item_id:
      type: INLINE
      props:
        algorithm-expression: ds_${db_inline_item_id % 2}

  keyGenerators:
      constant:
        type: IT.FIXTURE

  auditors:
    auditor_constant:
      type: IT.AUDITOR.FIXTURE
