<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sql-parser-test-cases>
    <select sql-case-id="select_group_concat">
        <from>
            <simple-table name="t_order" start-index="33" stop-index="39" />
        </from>
        <projections start-index="7" stop-index="26">
            <aggregation-projection type="GROUP_CONCAT" expression="GROUP_CONCAT(status)" text="GROUP_CONCAT(status)" start-index="7" stop-index="26">
                <expr>
                    <function function-name="GROUP_CONCAT" start-index="7" stop-index="26" text="GROUP_CONCAT(status)">
                        <parameter>
                            <column name="status" start-index="20" stop-index="25" />
                        </parameter>
                    </function>
                </expr>
            </aggregation-projection>
        </projections>
    </select>
    <select sql-case-id="select_window_function">
        <from>
            <simple-table name="t_order" start-index="42" stop-index="48" />
        </from>
        <projections start-index="7" stop-index="35">
            <column-projection name="order_id" start-index="7" stop-index="14" />
            <expression-projection text="ROW_NUMBER() OVER()" start-index="17" stop-index="35">
                <expr>
                    <function function-name="OVER" start-index="17" stop-index="35" text="ROW_NUMBER() OVER()" >
                        <parameter>
                            <function function-name="ROW_NUMBER" start-index="17" stop-index="26" text="ROW_NUMBER()" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_cast_function">
        <projections start-index="7" stop-index="27">
            <expression-projection text="CAST('1' AS UNSIGNED)" start-index="7" stop-index="27">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="27" text="CAST('1' AS UNSIGNED)">
                        <parameter>
                            <literal-expression value="1" start-index="12" stop-index="14" />
                        </parameter>
                        <parameter>
                            <data-type value="UNSIGNED" start-index="19" stop-index="26" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_cast">
        <projections start-index="7" stop-index="44">
            <expression-projection text="CAST(c AT TIME ZONE 'UTC' AS DATETIME)" start-index="7" stop-index="44">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="44" text="CAST(c AT TIME ZONE 'UTC' AS DATETIME)">
                        <parameter>
                            <column name="c" start-index="12" stop-index="12" />
                        </parameter>
                        <parameter>
                            <literal-expression value="UTC" start-index="27" stop-index="31" />
                        </parameter>
                        <parameter>
                            <data-type value="DATETIME" start-index="36" stop-index="43" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_cast_multiset">
        <projections start-index="7" stop-index="119">
            <expression-projection text="CAST(MULTISET(SELECT cust_address FROM customers c WHERE c.customer_id = cd.customer_id) as cust_address_tab_typ)" start-index="7" stop-index="119">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="119" text="CAST(MULTISET(SELECT cust_address FROM customers c WHERE c.customer_id = cd.customer_id) as cust_address_tab_typ)">
                        <parameter>
                            <subquery start-index="20" stop-index="94">
                                <select>
                                    <from start-index="46" stop-index="54">
                                        <simple-table name="customers" alias="c" start-index="46" stop-index="56"/>
                                    </from>
                                    <projections start-index="28" stop-index="39">
                                        <column-projection name="cust_address" start-index="28" stop-index="39"/>
                                    </projections>
                                    <where start-index="58" stop-index="93">
                                        <expr>
                                            <binary-operation-expression start-index="64" stop-index="93">
                                                <left>
                                                    <column name="customer_id" start-index="64" stop-index="76">
                                                        <owner start-index="64" stop-index="64" name="c" />
                                                    </column>
                                                </left>
                                                <operator>=</operator>
                                                <right>
                                                    <column name="customer_id" start-index="80" stop-index="93">
                                                        <owner start-index="80" stop-index="81" name="cd" />
                                                    </column>
                                                </right>
                                            </binary-operation-expression>
                                        </expr>
                                    </where>
                                </select>
                            </subquery>
                        </parameter>
                        <parameter>
                            <data-type value="cust_address_tab_typ" start-index="99" stop-index="118" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="customer" start-index="126" stop-index="133" />
        </from>
    </select>
    <select sql-case-id="select_convert_function">
        <projections start-index="7" stop-index="33">
            <expression-projection text="CONVERT('2020-10-01', DATE)" start-index="7" stop-index="33">
                <expr>
                    <function function-name="CONVERT" start-index="7" stop-index="33" text="CONVERT('2020-10-01', DATE)" />
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_position">
        <projections start-index="7" stop-index="36">
            <expression-projection text="POSITION('bar' IN 'foobarbar')" start-index="7" stop-index="36">
                <expr>
                    <function function-name="POSITION" start-index="7" stop-index="36" text="POSITION('bar' IN 'foobarbar')" >
                        <parameter>
                            <literal-expression value="bar" start-index="16" stop-index="20" />
                        </parameter>
                        <parameter>
                            <literal-expression value="foobarbar" start-index="25" stop-index="35" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_substring">
        <projections start-index="7" stop-index="35">
            <expression-projection text="SUBSTRING('foobarbar' from 4)" start-index="7" stop-index="35">
                <expr>
                    <function function-name="SUBSTRING" start-index="7" stop-index="35" text="SUBSTRING('foobarbar' from 4)" >
                        <parameter>
                            <literal-expression value="foobarbar" start-index="17" stop-index="27" />
                        </parameter>
                        <parameter>
                            <literal-expression value="4" start-index="34" stop-index="34" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_extract">
        <projections start-index="7" stop-index="37">
            <expression-projection text="EXTRACT(YEAR FROM '2019-07-02')" start-index="7" stop-index="37">
                <expr>
                    <function function-name="EXTRACT" start-index="7" stop-index="37" text="EXTRACT(YEAR FROM '2019-07-02')" >
                        <parameter>
                            <literal-expression value="YEAR" start-index="15" stop-index="18" />
                        </parameter>
                        <parameter>
                            <literal-expression value="2019-07-02" start-index="25"  stop-index="36" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_extract_from_column">
        <projections start-index="7" stop-index="40">
            <expression-projection text="EXTRACT(YEAR FROM o.creation_date)" start-index="7" stop-index="40">
                <expr>
                    <function function-name="EXTRACT" start-index="7" stop-index="40" text="EXTRACT(YEAR FROM o.creation_date)" >
                        <parameter>
                            <literal-expression value="YEAR" start-index="15" stop-index="18" />
                        </parameter>
                        <parameter>
                            <column name="creation_date" start-index="25" stop-index="39">
                                <owner name="o" start-index="25" stop-index="25" />
                            </column>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-index="47" stop-index="55" alias="o" />
        </from>
    </select>
    <select sql-case-id="select_char">
        <projections start-index="7" stop-index="29">
            <expression-projection text="CHAR(77,121,83,81,'76')" start-index="7" stop-index="29">
                <expr>
                    <function function-name="CHAR" start-index="7" stop-index="29" text="CHAR(77,121,83,81,'76')" >
                        <parameter>
                            <literal-expression value="77" start-index="12" stop-index="13" />
                        </parameter>
                        <parameter>
                            <literal-expression value="121" start-index="15" stop-index="17" />
                        </parameter>
                        <parameter>
                            <literal-expression value="83" start-index="19" stop-index="20" />
                        </parameter>
                        <parameter>
                            <literal-expression value="81" start-index="22" stop-index="23" />
                        </parameter>
                        <parameter>
                            <literal-expression value="76" start-index="25" stop-index="28" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_chr_using_nchar_cs">
        <from>
            <simple-table name="DUAL" start-index="37" stop-index="40" />
        </from>
        <projections start-index="7" stop-index="30">
            <expression-projection text="CHR (196 USING NCHAR_CS)" start-index="7" stop-index="30">
                <expr>
                    <function function-name="CHR" start-index="7" stop-index="30" text="CHR (196 USING NCHAR_CS)" >
                        <parameter>
                            <literal-expression value="196" start-index="12" stop-index="14" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_trim">
        <projections start-index="7" stop-index="22">
            <expression-projection text="TRIM('  bar   ')" start-index="7" stop-index="22">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="22" text="TRIM('  bar   ')">
                        <parameter>
                            <literal-expression value="  bar   " start-index="12" stop-index="21" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_trim_with_both">
        <projections start-index="7" stop-index="33">
            <expression-projection text="TRIM(BOTH ' ' from ' bar ')" start-index="7" stop-index="33">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="33" text="TRIM(BOTH ' ' from ' bar ')" >
                        <parameter>
                            <literal-expression value="BOTH" start-index="12" stop-index="15" />
                        </parameter>
                        <parameter>
                            <literal-expression value=" " start-index="17" stop-index="19" />
                        </parameter>
                        <parameter>
                            <literal-expression value=" bar " start-index="26" stop-index="32" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_with_trim_expr">
        <projections start-index="7" stop-index="27">
            <expression-projection text="TRIM('#' FROM `name`)" start-index="7" stop-index="27">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="27" text="TRIM('#' FROM `name`)" >
                        <parameter>
                            <literal-expression value="#" start-index="12" stop-index="14" />
                        </parameter>
                        <parameter>
                            <column name="name" start-delimiter="`" end-delimiter="`" start-index="21" stop-index="26" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-index="34" stop-index="40" />
        </from>
    </select>
    <select sql-case-id="select_with_trim_expr_and_both">
        <projections start-index="7" stop-index="32">
            <expression-projection text="TRIM(BOTH '#' FROM `name`)" start-index="7" stop-index="32">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="32" text="TRIM(BOTH '#' FROM `name`)" >
                        <parameter>
                            <literal-expression value="BOTH" start-index="12" stop-index="15" />
                        </parameter>
                        <parameter>
                            <literal-expression value="#" start-index="17" stop-index="19" />
                        </parameter>
                        <parameter>
                            <column name="name" start-delimiter="`" end-delimiter="`" start-index="26" stop-index="31" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-delimiter="`" end-delimiter="`" start-index="39" stop-index="47" />
        </from>
    </select>
    <select sql-case-id="select_with_trim_expr_from_expr">
        <projections start-index="7" stop-index="33">
            <expression-projection text="TRIM(remove_name FROM name)" start-index="7" stop-index="33">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="33" text="TRIM(remove_name FROM name)" >
                        <parameter>
                            <column name="remove_name" start-index="12" stop-index="22" />
                        </parameter>
                        <parameter>
                            <column name="name" start-index="29" stop-index="32" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-index="40" stop-index="46" />
        </from>
    </select>
    <select sql-case-id="select_with_trim_expr_from_expr_and_both">
        <projections start-index="7" stop-index="42">
            <expression-projection text="TRIM(BOTH `remove_name` FROM `name`)" start-index="7" stop-index="42">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="42" text="TRIM(BOTH `remove_name` FROM `name`)" >
                        <parameter>
                            <literal-expression value="BOTH" start-index="12" stop-index="15" />
                        </parameter>
                        <parameter>
                            <column name="remove_name" start-delimiter="`" end-delimiter="`" start-index="17" stop-index="29" />
                        </parameter>
                        <parameter>
                            <column name="name" start-delimiter="`" end-delimiter="`" start-index="36" stop-index="41" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-delimiter="`" end-delimiter="`" start-index="49" stop-index="57" />
        </from>
    </select>
    <select sql-case-id="select_weight_string">
        <projections start-index="7" stop-index="26">
            <expression-projection text="WEIGHT_STRING('bar')" start-index="7" stop-index="26">
                <expr>
                    <function function-name="WEIGHT_STRING" start-index="7" stop-index="26" text="WEIGHT_STRING('bar')" >
                        <parameter>
                            <literal-expression value="bar" start-index="21" stop-index="25" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_values">
        <from>
            <simple-table name="t_order" start-index="29" stop-index="35" />
        </from>
        <projections start-index="7" stop-index="22">
            <expression-projection text="VALUES(order_id)" start-index="7" stop-index="22">
                <expr>
                    <function function-name="VALUES" start-index="7" stop-index="22" text="VALUES(order_id)">
                        <parameter>
                            <column name="order_id" start-index="14" stop-index="21" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    <select sql-case-id="select_current_user_brackets">
        <projections start-index="7" stop-index="20">
            <expression-projection text="CURRENT_USER()" start-index="7" stop-index="20">
                <expr>
                    <function function-name="CURRENT_USER" start-index="7" stop-index="20" text="CURRENT_USER()" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_extract_function">
        <projections start-index="7" stop-index="56">
            <expression-projection text="EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')" start-index="7" stop-index="56">
                <expr>
                    <function function-name="EXTRACT" start-index="7" stop-index="56" text="EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')">
                        <parameter>
                            <extract-arg start-index="15" stop-index="18" text="YEAR" />
                        </parameter>
                        <parameter>
                            <type-cast-expression>
                                <expression>
                                    <literal-expression value="2001-02-16 20:38:40" start-index="35" stop-index="55" />
                                </expression>
                                <data-type>TIMESTAMP</data-type>
                            </type-cast-expression>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_extract_function_for_oracle">
        <projections start-index="7" stop-index="56" literal-start-index="7" literal-stop-index="56">
            <expression-projection text="EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')" start-index="7" stop-index="56" literal-start-index="7" literal-stop-index="56">
                <literalText>EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')</literalText>
                <expr>
                    <function function-name="EXTRACT" text="EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')" start-index="7" stop-index="56" literal-start-index="7" literal-stop-index="56">
                        <parameter>
                            <common-expression text="TIMESTAMP '2001-02-16 20:38:40'" start-index="25" stop-index="55" literal-start-index="25" literal-stop-index="55" />
                        </parameter>
                        <literalText>EXTRACT(YEAR FROM TIMESTAMP '2001-02-16 20:38:40')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="DUAL" start-index="63" stop-index="66" literal-start-index="63" literal-stop-index="66" />
        </from>
    </select>

    <select sql-case-id="select_mod_function">
        <projections start-index="7" stop-index="22">
            <expression-projection text="MOD(order_id, 1)" start-index="7" stop-index="22">
                <expr>
                    <function function-name="MOD" start-index="7" stop-index="22" text="MOD(order_id, 1)">
                        <parameter>
                            <column name="order_id" start-index="11" stop-index="18" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="21" stop-index="21" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-index="29" stop-index="35" />
        </from>
    </select>
    
    <select sql-case-id="select_with_lead_and_lag_function">
        <projections start-index="7" stop-index="123" literal-start-index="7" literal-stop-index="123">
            <column-projection name="hire_date" start-index="7" stop-index="15" literal-start-index="7" literal-stop-index="15" />
            <expression-projection text="LAG(hire_date, 1) OVER (ORDER BY hire_date)" alias="LAG1" start-index="18" stop-index="68" literal-start-index="18" literal-stop-index="68">
                <literalText>LAG(hire_date, 1) OVER (ORDER BY hire_date)</literalText>
                <expr>
                    <function function-name="LAG" text="LAG(hire_date, 1) OVER (ORDER BY hire_date)" start-index="18" stop-index="60" literal-start-index="18" literal-stop-index="60">
                        <parameter>
                            <column name="hire_date" start-index="22" stop-index="30" literal-start-index="22" literal-stop-index="30" />
                        </parameter>
                        <literalText>LAG(hire_date, 1) OVER (ORDER BY hire_date)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="LEAD(hire_date, 1) OVER (ORDER BY hire_date)" alias="LEAD1" start-index="71" stop-index="123" literal-start-index="71" literal-stop-index="123">
                <literalText>LEAD(hire_date, 1) OVER (ORDER BY hire_date)</literalText>
                <expr>
                    <function function-name="LEAD" text="LEAD(hire_date, 1) OVER (ORDER BY hire_date)" start-index="71" stop-index="114" literal-start-index="71" literal-stop-index="114">
                        <parameter>
                            <column name="hire_date" start-index="76" stop-index="84" literal-start-index="76" literal-stop-index="84" />
                        </parameter>
                        <literalText>LEAD(hire_date, 1) OVER (ORDER BY hire_date)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="130" stop-index="138" literal-start-index="130" literal-stop-index="138" />
        </from>
        <where start-index="140" stop-index="163" literal-start-index="140" literal-stop-index="163">
            <expr>
                <binary-operation-expression start-index="146" stop-index="163" literal-start-index="146" literal-stop-index="163">
                    <left>
                        <column name="department_id" start-index="146" stop-index="158" literal-start-index="146" literal-stop-index="158" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="30" start-index="162" stop-index="163" literal-start-index="162" literal-stop-index="163" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="hire_date" order-direction="ASC" start-index="174" stop-index="182" literal-start-index="174" literal-stop-index="182" />
        </order-by>
    </select>

    <select sql-case-id="select_sys_xml_agg">
        <projections start-index="7" stop-index="46">
            <expression-projection text="SYS_XMLAGG(SYS_XMLGEN(last_name))" alias="XMLAGG" start-index="7" stop-index="46">
                <expr>
                    <function function-name="SYS_XMLAGG" start-index="7" stop-index="39" text="SYS_XMLAGG(SYS_XMLGEN(last_name))">
                        <parameter>
                            <function function-name="SYS_XMLGEN" start-index="18" stop-index="38" text="SYS_XMLGEN(last_name)">
                                <parameter>
                                    <column name="last_name" start-index="29" stop-index="37"/>
                                </parameter>
                            </function>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="53" stop-index="61" />
        </from>
        <where start-index="63" stop-index="87">
            <expr>
                <binary-operation-expression start-index="69" stop-index="87" >
                    <left>
                        <column name="last_name" start-index="69" stop-index="77"/>
                    </left>
                    <operator>LIKE</operator>
                    <right>
                        <list-expression start-index="84" stop-index="87">
                            <items>
                                <literal-expression value="R%" start-index="84" stop-index="87" />
                            </items>
                        </list-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="xmlagg" order-direction="ASC" start-index="98" stop-index="103"/>
        </order-by>
    </select>

    <select sql-case-id="select_set_function">
        <projections start-index="7" stop-index="49">
            <column-projection name="customer_id" start-index="7" stop-index="17" />
            <expression-projection text="SET(cust_address_ntab)" alias="address" start-index="20" stop-index="49">
                <expr>
                    <function function-name="SET" start-index="20" stop-index="41" text="SET(cust_address_ntab)">
                        <parameter>
                            <column name="cust_address_ntab" start-index="24" stop-index="40" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="customers_demo" start-index="56" stop-index="69" />
        </from>
        <order-by>
            <column-item name="customer_id" order-direction="ASC" start-index="80" stop-index="90" literal-start-index="80" literal-stop-index="90" />
        </order-by>
    </select>
    
    <select sql-case-id="select_pivot">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7"/>
        </projections>
        <from>
            <subquery-table>
                <subquery>
                    <select>
                        <projections start-index="22" stop-index="22">
                            <shorthand-projection start-index="22" stop-index="22"/>
                        </projections>
                        <from start-index="29" stop-index="33">
                            <simple-table name="sales" start-index="29" stop-index="33"/>
                        </from>
                    </select>
                </subquery>
            </subquery-table>
        </from>
    </select>
</sql-parser-test-cases>
