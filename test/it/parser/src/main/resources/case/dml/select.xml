<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sql-parser-test-cases>
    <select sql-case-id="select_with_comment">
        <projections start-index="70" stop-index="70">
            <shorthand-projection start-index="70" stop-index="70" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="77" stop-index="83" />
        </from>
        <comment start-index="0" stop-index="19" text="/*FORCE_IMCI_NODES*/" />
        <comment start-index="28" stop-index="68" text="/*+ SET_VAR(cost_threshold_for_imci=0) */" />
    </select>
    
    <select sql-case-id="select_position_function">
        <projections start-index="7" stop-index="97">
            <expression-projection text="position(&quot;0&quot; in &quot;baaa&quot; in (1))" start-index="7" stop-index="36">
                <expr>
                    <function start-index="7" stop-index="36" text="position(&quot;0&quot; in &quot;baaa&quot; in (1))" function-name="position">
                        <parameter>
                            <literal-expression start-index="16" stop-index="18" value="0" />
                        </parameter>
                        <parameter>
                            <in-expression start-index="23" stop-index="35">
                                <left>
                                    <literal-expression start-index="23" stop-index="28" value="baaa" />
                                </left>
                                <right>
                                    <list-expression start-index="33" stop-index="35">
                                        <items>
                                            <literal-expression start-index="34" stop-index="34" value="1" />
                                        </items>
                                    </list-expression>
                                </right>
                            </in-expression>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="position(&quot;0&quot; in &quot;1&quot; in (1,2,3))" start-index="38" stop-index="68">
                <expr>
                    <function start-index="38" stop-index="68" text="position(&quot;0&quot; in &quot;1&quot; in (1,2,3))" function-name="position">
                        <parameter>
                            <literal-expression start-index="47" stop-index="49" value="0" />
                        </parameter>
                        <parameter>
                            <in-expression start-index="54" stop-index="67">
                                <left>
                                    <literal-expression start-index="54" stop-index="56" value="1" />
                                </left>
                                <right>
                                    <list-expression start-index="61" stop-index="67">
                                        <items>
                                            <literal-expression start-index="62" stop-index="62" value="1" />
                                        </items>
                                        <items>
                                            <literal-expression start-index="64" stop-index="64" value="2" />
                                        </items>
                                        <items>
                                            <literal-expression start-index="66" stop-index="66" value="3" />
                                        </items>
                                    </list-expression>
                                </right>
                            </in-expression>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="position(&quot;sql&quot; in (&quot;mysql&quot;))" start-index="70" stop-index="97">
                <expr>
                    <function start-index="70" stop-index="97" text="position(&quot;sql&quot; in (&quot;mysql&quot;))" function-name="position">
                        <parameter>
                            <literal-expression start-index="79" stop-index="83" value="sql" />
                        </parameter>
                        <parameter>
                            <literal-expression start-index="89" stop-index="95" value="mysql" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_extract_function_with_day_hour">
        <projections start-index="7" stop-index="50">
            <expression-projection text="extract(DAY_HOUR FROM &quot;1999-01-02 10:11:12&quot;)" start-index="7" stop-index="50">
                <expr>
                    <function start-index="7" stop-index="50" text="extract(DAY_HOUR FROM &quot;1999-01-02 10:11:12&quot;)" function-name="extract">
                        <parameter>
                            <literal-expression start-index="15" stop-index="22" value="DAY_HOUR" />
                        </parameter>
                        <parameter>
                            <literal-expression start-index="29" stop-index="49" value="1999-01-02 10:11:12" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_latin1">
        <projections start-index="7" stop-index="62">
            <expression-projection text="_latin1'B' collate latin1_bin in (_latin1'a',_latin1'b')" start-index="7" stop-index="62">
                <expr>
                    <in-expression start-index="7" stop-index="62">
                        <left>
                            <collate-expression start-index="7" stop-index="35">
                                <collate-name>
                                    <literal-expression start-index="18" stop-index="35" value="latin1_bin" />
                                </collate-name>
                            </collate-expression>
                        </left>
                        <right>
                            <list-expression start-index="40" stop-index="62">
                                <items>
                                    <literal-expression start-index="41" stop-index="50" value="latin1'a" />
                                </items>
                                <items>
                                    <literal-expression start-index="52" stop-index="61" value="latin1'b" />
                                </items>
                            </list-expression>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_default_str">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="t1" start-index="14" stop-index="15" />
        </from>
        <where start-index="17" stop-index="41">
            <expr>
                <binary-operation-expression text="str &lt;&gt; default(str)" start-index="23" stop-index="41">
                    <left>
                        <column name="str" start-index="23" stop-index="25" />
                    </left>
                    <right>
                        <function start-index="30" stop-index="41" text="default(str)" function-name="default">
                            <parameter>
                                <column name="str" start-index="38" stop-index="40" />
                            </parameter>
                        </function>
                    </right>
                    <operator>&lt;&gt;</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_subquery_excpet">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <subquery-table alias="a" start-index="14" stop-index="69">
                <subquery start-index="14" stop-index="67">
                    <select>
                        <projections start-index="22" stop-index="22">
                            <shorthand-projection start-index="22" stop-index="22" />
                        </projections>
                        <from>
                            <simple-table name="t1" start-index="29" stop-index="30" />
                        </from>
                        <combine combine-type="EXCEPT" start-index="32" stop-index="58">
                            <left>
                                <projections start-index="22" stop-index="22">
                                    <shorthand-projection start-index="22" stop-index="22" />
                                </projections>
                                <from>
                                    <simple-table name="t1" start-index="29" stop-index="30" />
                                </from>
                            </left>
                            <right>
                                <projections start-index="50" stop-index="50">
                                    <shorthand-projection start-index="50" stop-index="50" />
                                </projections>
                                <from>
                                    <simple-table name="t1" start-index="57" stop-index="58" />
                                </from>
                            </right>
                        </combine>
                        <limit start-index="60" stop-index="66">
                            <row-count value="2" start-index="66" stop-index="66" />
                        </limit>
                    </select>
                </subquery>
            </subquery-table>
        </from>
    </select>
    
    <select sql-case-id="select_point_function_with_in">
        <projections start-index="7" stop-index="38">
            <expression-projection alias="res" text="point(1,1) IN ('1',1,'1')" start-index="7" stop-index="38">
                <expr>
                    <in-expression start-index="7" stop-index="31">
                        <left>
                            <function start-index="7" stop-index="16" text="point(1,1)" function-name="point">
                                <parameter>
                                    <literal-expression start-index="13" stop-index="13" value="1" />
                                </parameter>
                                <parameter>
                                    <literal-expression start-index="15" stop-index="15" value="1" />
                                </parameter>
                            </function>
                        </left>
                        <right>
                            <list-expression start-index="21" stop-index="31">
                                <items>
                                    <literal-expression start-index="22" stop-index="24" value="1" />
                                </items>
                                <items>
                                    <literal-expression start-index="26" stop-index="26" value="1" />
                                </items>
                                <items>
                                    <literal-expression start-index="28" stop-index="30" value="1" />
                                </items>
                            </list-expression>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_in">
        <projections start-index="7" stop-index="48">
            <column-projection name="b" start-index="7" stop-index="7" />
            <expression-projection text="b IN ('20161213')" start-index="10" stop-index="26">
                <expr>
                    <in-expression start-index="10" stop-index="26">
                        <left>
                            <column name="b" start-index="10" stop-index="10" />
                        </left>
                        <right>
                            <list-expression start-index="15" stop-index="26">
                                <items>
                                    <literal-expression start-index="16" stop-index="25" value="20161213" />
                                </items>
                            </list-expression>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
            <expression-projection text="b in ('20161213', 0)" start-index="29" stop-index="48">
                <expr>
                    <in-expression start-index="29" stop-index="48">
                        <left>
                            <column name="b" start-index="29" stop-index="29" />
                        </left>
                        <right>
                            <list-expression start-index="34" stop-index="48">
                                <items>
                                    <literal-expression start-index="35" stop-index="44" value="20161213" />
                                </items>
                                <items>
                                    <literal-expression start-index="47" stop-index="47" value="0" />
                                </items>
                            </list-expression>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t2" start-index="55" stop-index="56" />
        </from>
    </select>
    
    <select sql-case-id="select_with_st_geom_from_text">
        <projections start-index="7" stop-index="67">
            <expression-projection alias="result" text="ST_GeomFromText('POINT(0 0)') IN (SELECT b FROM t1)" start-index="7" stop-index="67">
                <expr>
                    <in-expression start-index="7" stop-index="57">
                        <left>
                            <function start-index="7" stop-index="35" text="ST_GeomFromText('POINT(0 0)')" function-name="ST_GeomFromText">
                                <parameter>
                                    <literal-expression start-index="23" stop-index="34" value="POINT(0 0)" />
                                </parameter>
                            </function>
                        </left>
                        <right>
                            <subquery start-index="40" stop-index="57">
                                <select>
                                    <projections start-index="48" stop-index="48">
                                        <column-projection name="b" start-index="48" stop-index="48" />
                                    </projections>
                                    <from>
                                        <simple-table name="t1" start-index="55" stop-index="56" />
                                    </from>
                                </select>
                            </subquery>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_st_aswkb_st_geom_form_text">
        <projections start-index="7" stop-index="77">
            <expression-projection alias="result" text="ST_AsWKB(ST_GeomFromText('POINT(0 0)')) IN (SELECT b FROM t1)" start-index="7" stop-index="77">
                <expr>
                    <in-expression start-index="7" stop-index="67">
                        <left>
                            <function start-index="7" stop-index="45" text="ST_AsWKB(ST_GeomFromText('POINT(0 0)'))" function-name="ST_AsWKB">
                                <parameter>
                                    <function start-index="16" stop-index="44" text="ST_GeomFromText('POINT(0 0)')" function-name="ST_GeomFromText">
                                        <parameter>
                                            <literal-expression start-index="32" stop-index="43" value="POINT(0 0)" />
                                        </parameter>
                                    </function>
                                </parameter>
                            </function>
                        </left>
                        <right>
                            <subquery start-index="50" stop-index="67">
                                <select>
                                    <projections start-index="58" stop-index="58">
                                        <column-projection name="b" start-index="58" stop-index="58" />
                                    </projections>
                                    <from>
                                        <simple-table name="t1" start-index="65" stop-index="66" />
                                    </from>
                                </select>
                            </subquery>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_null_in_subquery">
        <projections start-index="7" stop-index="94">
            <expression-projection text="NULL IN(SELECT (f1 between 0 and 1) FROM (SELECT f1 FROM t WHERE (@b:=NULL) - f2) as dt)" start-index="7" stop-index="94">
                <expr>
                    <in-expression start-index="7" stop-index="94">
                        <left>
                            <literal-expression start-index="7" stop-index="10" value="null" />
                        </left>
                        <right>
                            <subquery start-index="14" stop-index="94">
                                <select>
                                    <projections start-index="22" stop-index="41">
                                        <expression-projection text="f1 between 0 and 1" start-index="22" stop-index="41">
                                            <expr>
                                                <between-expression start-index="23" stop-index="40">
                                                    <left>
                                                        <column name="f1" start-index="23" stop-index="24" />
                                                    </left>
                                                    <between-expr>
                                                        <literal-expression value="0" start-index="34" stop-index="34" />
                                                    </between-expr>
                                                    <and-expr>
                                                        <literal-expression value="1" start-index="40" stop-index="40" />
                                                    </and-expr>
                                                </between-expression>
                                            </expr>
                                        </expression-projection>
                                    </projections>
                                    <from>
                                        <subquery-table alias="dt" start-index="48" stop-index="93">
                                            <subquery>
                                                <select>
                                                    <projections start-index="56" stop-index="57">
                                                        <column-projection name="f1" start-index="56" stop-index="57" />
                                                    </projections>
                                                    <from>
                                                        <simple-table name="t" start-index="64" stop-index="64" />
                                                    </from>
                                                    <where start-index="66" stop-index="86">
                                                        <expr>
                                                            <binary-operation-expression text="(@b:=NULL) - f2" start-index="72" stop-index="86">
                                                                <left>
                                                                    <binary-operation-expression text="@b:=NULL" start-index="73" stop-index="80">
                                                                        <left>
                                                                            <variable-segment start-index="73" stop-index="74" variable="b" />
                                                                        </left>
                                                                        <operator>:=</operator>
                                                                        <right>
                                                                            <literal-expression value="null" start-index="77" stop-index="80" />
                                                                        </right>
                                                                    </binary-operation-expression>
                                                                </left>
                                                                <right>
                                                                    <column name="f2" start-index="85" stop-index="86" />
                                                                </right>
                                                                <operator>-</operator>
                                                            </binary-operation-expression>
                                                        </expr>
                                                    </where>
                                                </select>
                                            </subquery>
                                        </subquery-table>
                                    </from>
                                </select>
                            </subquery>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_collate">
        <projections start-index="7" stop-index="58">
            <expression-projection text="NAME_CONST('var', 'value') COLLATE latin1_general_cs" start-index="7" stop-index="58">
                <expr>
                    <collate-expression start-index="7" stop-index="58">
                        <collate-name>
                            <literal-expression start-index="34" stop-index="58" value="latin1_general_cs" />
                        </collate-name>
                    </collate-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_hex_function">
        <projections start-index="7" stop-index="50">
            <expression-projection text="HEX(_binary 0x0003 &lt;&lt; (_binary 0x38 | 0x38))" start-index="7" stop-index="50">
                <expr>
                    <function start-index="7" stop-index="50" text="HEX(_binary 0x0003 &lt;&lt; (_binary 0x38 | 0x38))" function-name="HEX">
                        <parameter>
                            <binary-operation-expression start-index="11" stop-index="49">
                                <left>
                                    <common-expression start-index="11" stop-index="24" text="_binary0x0003" />
                                </left>
                                <operator>&lt;&lt;</operator>
                                <right>
                                    <binary-operation-expression start-index="30" stop-index="48">
                                        <left>
                                            <common-expression start-index="30" stop-index="41" text="_binary0x38" />
                                        </left>
                                        <operator>|</operator>
                                        <right>
                                            <common-expression start-index="45" stop-index="48" text="0x38" />
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_distinct_with_grouping_function">
        <from>
            <simple-table name="t1" start-index="24" stop-index="25" />
        </from>
        <projections start-index="16" stop-index="17" distinct-row="true">
            <column-projection name="f1" start-index="16" stop-index="17" />
        </projections>
        <group-by>
            <column-item name="f1" order-direction="ASC" start-index="36" stop-index="37" />
        </group-by>
        <order-by>
            <column-item name="f1" order-direction="ASC" start-index="60" stop-index="61" />
            <expression-item start-index="64" stop-index="86" expression="ANY_VALUE(GROUPING(f1))">
                <expr>
                    <function start-index="64" stop-index="86" text="ANY_VALUE(GROUPING(f1))" function-name="ANY_VALUE">
                        <parameter>
                            <function start-index="74" stop-index="85" text="GROUPING(f1)" function-name="GROUPING(f1)" />
                        </parameter>
                    </function>
                </expr>
            </expression-item>
        </order-by>
    </select>

    <select sql-case-id="select_convert_function1">
        <projections start-index="7" stop-index="59">
            <expression-projection text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot; USING latin1)" start-index="7" stop-index="59">
                <expr>
                    <function start-index="7" stop-index="59" text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot; USING latin1)" function-name="CONVERT">
                        <parameter>
                            <common-expression start-index="15" stop-index="45" text="TIMESTAMP&quot;2004-01-22 21:45:33&quot;" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_convert_function2">
        <projections start-index="7" stop-index="57">
            <expression-projection text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, BINARY(4))" start-index="7" stop-index="57">
                <expr>
                    <function start-index="7" stop-index="57" text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, BINARY(4))" function-name="CONVERT" >
                        <parameter>
                            <common-expression start-index="15" stop-index="45" text="TIMESTAMP&quot;2004-01-22 21:45:33&quot;" function-name="GROUPING(f1)" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_convert_function3">
        <projections start-index="7" stop-index="55">
            <expression-projection text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, CHAR(4))" start-index="7" stop-index="55">
                <expr>
                    <function start-index="7" stop-index="55" text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, CHAR(4))" function-name="CONVERT">
                        <parameter>
                            <common-expression start-index="15" stop-index="45" text="TIMESTAMP&quot;2004-01-22 21:45:33&quot;" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_convert_function4">
        <projections start-index="7" stop-index="52">
            <expression-projection text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, CHAR)" start-index="7" stop-index="52">
                <expr>
                    <function start-index="7" stop-index="52" text="CONVERT(TIMESTAMP &quot;2004-01-22 21:45:33&quot;, CHAR)" function-name="CONVERT">
                        <parameter>
                            <common-expression start-index="15" stop-index="45" text="TIMESTAMP&quot;2004-01-22 21:45:33&quot;" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_function_aes_decrypt_and_aes_encrypt">
        <from>
            <simple-table name="t1" start-index="78" stop-index="79" />
        </from>
        <projections start-index="7" stop-index="71">
            <expression-projection text="AES_DECRYPT(AES_ENCRYPT(@ENCSTR, @keys, @Iv), @keys, @Iv)=@ENCSTR" start-index="7" stop-index="71">
                <expr>
                    <binary-operation-expression text="AES_DECRYPT(AES_ENCRYPT(@ENCSTR, @keys, @Iv), @keys, @Iv)=@ENCSTR" start-index="7" stop-index="71">
                        <left>
                            <function start-index="7" stop-index="63" text="AES_DECRYPT(AES_ENCRYPT(@ENCSTR, @keys, @Iv), @keys, @Iv)" function-name="AES_DECRYPT">
                                <parameter>
                                    <function start-index="19" stop-index="50" text="AES_ENCRYPT(@ENCSTR, @keys, @Iv)" function-name="AES_ENCRYPT">
                                        <parameter>
                                            <variable-segment start-index="31" stop-index="37" variable="ENCSTR" />
                                        </parameter>
                                        <parameter>
                                            <variable-segment start-index="40" stop-index="44" variable="keys" />
                                        </parameter>
                                        <parameter>
                                            <variable-segment start-index="47" stop-index="49" variable="Iv" />
                                        </parameter>
                                    </function>
                                </parameter>
                                <parameter>
                                    <variable-segment start-index="53" stop-index="57" variable="keys" />
                                </parameter>
                                <parameter>
                                    <variable-segment start-index="60" stop-index="62" variable="Iv" />
                                </parameter>
                            </function>
                        </left>
                        <operator>=</operator>
                        <right>
                            <variable-segment start-index="65" stop-index="71" variable="ENCSTR" />
                        </right>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_user_variable_before_after">
        <projections start-index="7" stop-index="20">
            <expression-projection text="@before=@after" start-index="7" stop-index="20">
                <expr>
                    <binary-operation-expression start-index="7" stop-index="20">
                        <left>
                            <variable-segment start-index="7" stop-index="13" variable="before" />
                        </left>
                        <operator>=</operator>
                        <right>
                            <variable-segment start-index="15" stop-index="20" variable="after" />
                        </right>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_global_default_key_buffer_size">
        <projections start-index="7" stop-index="40">
            <expression-projection text="@@global.default.`key_buffer_size`" start-index="7" stop-index="40">
                <expr>
                    <variable-segment start-index="7" stop-index="40" scope="global" variable="default.`key_buffer_size`" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_exist_in">
        <projections start-index="7" stop-index="93">
            <expression-projection text="+0 IN(0b111111111111111111111111111111111111111111111111111,rpad(1.0,2048,1),32767.1)" start-index="7" stop-index="93">
                <expr>
                    <in-expression start-index="8" stop-index="92">
                        <left start-index="8" stop-index="9">
                            <literal-expression start-index="8" stop-index="9" value="0" />
                        </left>
                        <right start-index="13" stop-index="92">
                            <list-expression start-index="13" stop-index="92">
                                <items>
                                    <common-expression start-index="14" stop-index="66" text="0b111111111111111111111111111111111111111111111111111" />
                                </items>
                                <items>
                                    <function start-index="68" stop-index="83" text="rpad(1.0,2048,1)" function-name="rpad">
                                        <parameter>
                                            <literal-expression start-index="73" stop-index="75" value="1.0" />
                                        </parameter>
                                        <parameter>
                                            <literal-expression start-index="77" stop-index="80" value="2048" />
                                        </parameter>
                                        <parameter>
                                            <literal-expression start-index="82" stop-index="82" value="1" />
                                        </parameter>
                                    </function>
                                </items>
                                <items>
                                    <literal-expression start-index="85" stop-index="91" value="32767.1" />
                                </items>
                            </list-expression>
                        </right>
                    </in-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_constant_without_table" >
        <projections start-index="7" stop-index="12">
            <expression-projection text="1" alias="a" start-index="7" stop-index="12">
                <expr>
                    <literal-expression value="1" start-index="7" stop-index="7" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_operator_ilike" >
        <projections start-index="7" stop-index="8">
            <column-projection name="id" start-index="7" stop-index="8" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="15" stop-index="21" />
        </from>
        <where start-index="23" stop-index="47">
            <expr>
                <binary-operation-expression start-index="29" stop-index="47">
                    <left>
                        <column name="name" start-index="29" stop-index="32" />
                    </left>
                    <right>
                        <list-expression start-index="37" stop-index="47">
                            <items>
                                <literal-expression value="^pg_toast" start-index="37" stop-index="47" />
                            </items>
                        </list-expression>
                    </right>
                    <operator>!~</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_binary_operation_of_aggregation_expr" >
        <projections start-index="7" stop-index="23">
            <expression-projection text="count(*)+1" alias="a" start-index="8" stop-index="23" />
        </projections>
    </select>

    <select sql-case-id="select_with_schema_func" >
        <projections start-index="7" stop-index="26">
            <expression-projection text="schema()" start-index="7" stop-index="14">
                <expr>
                    <function function-name="schema" start-index="7" stop-index="14" text="schema()" />
                </expr>
            </expression-projection>
            <expression-projection text="database()" start-index="17" stop-index="26">
                <expr>
                    <function function-name="database" start-index="17" stop-index="26" text="database()" />
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_system_variables" >
        <projections start-index="7" stop-index="121">
            <expression-projection text="@@session.auto_increment_increment" alias="auto_increment_increment" start-index="7" stop-index="65">
                <expr>
                    <variable-segment text="@@session.auto_increment_increment" start-index="7" stop-index="40" scope="session" variable="auto_increment_increment" />
                </expr>
            </expression-projection>
            <expression-projection text="@@global.max_connections" alias="max_connections" start-index="68" stop-index="107">
                <expr>
                    <variable-segment text="@@global.max_connections" start-index="68" stop-index="91" scope="global" variable="max_connections" />
                </expr>
            </expression-projection>
            <expression-projection text="@@autocommit" start-index="110" stop-index="121">
                <expr>
                    <variable-segment text="@@autocommit" start-index="110" stop-index="121" variable="autocommit" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_sqlmode_ansi_quotes" >
        <projections start-index="7" stop-index="10">
            <expression-projection text="id" start-index="7" stop-index="10" />
        </projections>
        <from>
            <simple-table name="t_order" start-delimiter='"' end-delimiter='"' start-index="17" stop-index="25" />
        </from>
        <where start-index="27" stop-index="49">
            <expr>
                <binary-operation-expression start-index="33" stop-index="49">
                    <left>
                        <column name="id" start-delimiter='"' end-delimiter='"' start-index="33" stop-index="46">
                            <owner name="t_order" start-delimiter='"' end-delimiter='"' start-index="33" stop-index="41" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="10" start-index="48" stop-index="49" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_function_name" >
        <projections start-index="7" stop-index="23">
            <expression-projection text="current_timestamp" start-index="7" stop-index="23">
                <expr>
                    <function function-name="current_timestamp" start-index="7" stop-index="23" text="current_timestamp" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_same_table_name_and_alias" parameters="1, 1">
        <from>
            <simple-table name="t_order" alias="t_order" start-index="22" stop-index="36" />
        </from>
        <projections start-index="7" stop-index="15">
            <shorthand-projection start-index="7" stop-index="15">
                <owner name="t_order" start-index="7" stop-index="13" />
            </shorthand-projection>
        </projections>
        <where start-index="38" stop-index="71">
            <expr>
                <binary-operation-expression start-index="44" stop-index="71">
                    <left>
                        <binary-operation-expression start-index="44" stop-index="54">
                            <left>
                                <column name="user_id" start-index="44" stop-index="50" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="54" stop-index="54" />
                                <parameter-marker-expression parameter-index="0" start-index="54" stop-index="54" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="60" stop-index="71">
                            <left>
                                <column name="order_id" start-index="60" stop-index="67" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="71" stop-index="71" />
                                <parameter-marker-expression parameter-index="1" start-index="71" stop-index="71" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_same_table_name_and_alias_column_with_owner" parameters="1, 1">
        <from>
            <simple-table name="t_order" alias="t_order" start-index="52" stop-index="66" />
        </from>
        <projections start-index="7" stop-index="45">
            <column-projection name="order_id" start-index="7" stop-index="22">
                <owner name="t_order" start-index="7" stop-index="13" />
            </column-projection>
            <column-projection name="user_id" start-index="24" stop-index="38">
                <owner name="t_order" start-index="24" stop-index="30" />
            </column-projection>
            <column-projection name="status" start-index="40" stop-index="45" />
        </projections>
        <where start-index="68" stop-index="109">
            <expr>
                <binary-operation-expression start-index="74" stop-index="109">
                    <left>
                        <binary-operation-expression start-index="74" stop-index="92">
                            <left>
                                <column name="user_id" start-index="74" stop-index="88">
                                    <owner name="t_order" start-index="74" stop-index="80" />
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="92" stop-index="92" />
                                <parameter-marker-expression parameter-index="0" start-index="92" stop-index="92" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="98" stop-index="109">
                            <left>
                                <column name="order_id" start-index="98" stop-index="105" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="109" stop-index="109" />
                                <parameter-marker-expression parameter-index="1" start-index="109" stop-index="109" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_not_equal_with_single_table" parameters="1">
        <from>
            <simple-table name="t_order_item" start-index="14" stop-index="25" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="27" stop-index="44">
            <expr>
                <binary-operation-expression start-index="33" stop-index="44">
                    <left>
                        <column name="item_id" start-index="33" stop-index="39" />
                    </left>
                    <operator>&lt;&gt;</operator>
                    <right>
                        <literal-expression value="1" start-index="44" stop-index="44" />
                        <parameter-marker-expression parameter-index="0" start-index="44" stop-index="44" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="55" stop-index="61" />
        </order-by>
    </select>

    <select sql-case-id="select_exclamation_equal_with_single_table" parameters="1">
        <from>
            <simple-table name="t_order_item" start-index="14" stop-index="25" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="27" stop-index="44">
            <expr>
                <binary-operation-expression start-index="33" stop-index="44">
                    <left>
                        <column name="item_id" start-index="33" stop-index="39" />
                    </left>
                    <operator>!=</operator>
                    <right>
                        <literal-expression value="1" start-index="44" stop-index="44" />
                        <parameter-marker-expression parameter-index="0" start-index="44" stop-index="44" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="55" stop-index="61" />
        </order-by>
    </select>

    <select sql-case-id="select_not_in_with_single_table" parameters="100000, 100001">
        <from>
            <simple-table name="t_order_item" start-index="14" stop-index="25" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="27" stop-index="77" literal-stop-index="87">
            <expr>
                <binary-operation-expression start-index="33" stop-index="77" literal-stop-index="87">
                    <left>
                        <binary-operation-expression start-index="33" stop-index="51">
                            <left>
                                <column name="item_id" start-index="33" stop-index="39" />
                            </left>
                            <operator>IS</operator>
                            <right>
                                <literal-expression value="NOT NULL" start-index="44" stop-index="51" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <in-expression start-index="57" stop-index="77" literal-stop-index="87">
                            <not>true</not>
                            <left>
                                <column name="item_id" start-index="57" stop-index="63" />
                            </left>
                            <right>
                                <list-expression start-index="72" stop-index="77" literal-stop-index="87">
                                    <items>
                                        <literal-expression value="100000" start-index="73" stop-index="78" />
                                        <parameter-marker-expression parameter-index="0" start-index="73" stop-index="73" />
                                    </items>
                                    <items>
                                        <literal-expression value="100001" start-index="81" stop-index="86" />
                                        <parameter-marker-expression parameter-index="1" start-index="76" stop-index="76" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="88" stop-index="94" literal-start-index="98" literal-stop-index="104" />
        </order-by>
    </select>

    <select sql-case-id="select_not_between_with_single_table" parameters="100000, 100001">
        <from>
            <simple-table name="t_order_item" start-index="14" stop-index="25" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="27" stop-index="83" literal-stop-index="93">
            <expr>
                <binary-operation-expression start-index="33" stop-index="83" literal-stop-index="93">
                    <left>
                        <binary-operation-expression start-index="33" stop-index="51">
                            <left>
                                <column name="item_id" start-index="33" stop-index="39" />
                            </left>
                            <operator>IS</operator>
                            <right>
                                <!-- TODO: literal value should be 'NOT NULL' -->
                                <literal-expression value="NOT NULL" start-index="44" stop-index="51" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="57" stop-index="83" literal-stop-index="93">
                            <not>true</not>
                            <left>
                                <column name="item_id" start-index="57" stop-index="63" />
                            </left>
                            <between-expr>
                                <literal-expression value="100000" start-index="77" stop-index="82" />
                                <parameter-marker-expression parameter-index="0" start-index="77" stop-index="77" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="100001" start-index="88" stop-index="93" />
                                <parameter-marker-expression parameter-index="1" start-index="83" stop-index="83" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="94" stop-index="100" literal-start-index="104" literal-stop-index="110" />
        </order-by>
    </select>

    <select sql-case-id="select_equal_with_single_table" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="55">
            <expr>
                <binary-operation-expression start-index="28" stop-index="55">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="38">
                            <left>
                                <column name="user_id" start-index="28" stop-index="34" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="38" stop-index="38" />
                                <parameter-marker-expression parameter-index="0" start-index="38" stop-index="38" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="44" stop-index="55">
                            <left>
                                <column name="order_id" start-index="44" stop-index="51" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="55" stop-index="55" />
                                <parameter-marker-expression parameter-index="1" start-index="55" stop-index="55" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_equal_with_single_table_and_lowercase_keyword" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="55">
            <expr>
                <binary-operation-expression start-index="28" stop-index="55">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="38">
                            <left>
                                <column name="user_id" start-index="28" stop-index="34" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="38" stop-index="38" />
                                <parameter-marker-expression parameter-index="0" start-index="38" stop-index="38" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>and</operator>
                    <right>
                        <binary-operation-expression start-index="44" stop-index="55">
                            <left>
                                <column name="order_id" start-index="44" stop-index="51" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="55" stop-index="55" />
                                <parameter-marker-expression parameter-index="1" start-index="55" stop-index="55" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_equal_with_same_sharding_column" parameters="1, 2">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="56">
            <expr>
                <binary-operation-expression start-index="28" stop-index="56">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="39">
                            <left>
                                <column name="order_id" start-index="28" stop-index="35" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="39" stop-index="39" />
                                <parameter-marker-expression parameter-index="0" start-index="39" stop-index="39" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="45" stop-index="56">
                            <left>
                                <column name="order_id" start-index="45" stop-index="52" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="2" start-index="56" stop-index="56" />
                                <parameter-marker-expression parameter-index="1" start-index="56" stop-index="56" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_between_with_single_table" parameters="1, 10, 2, 5">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="79" literal-stop-index="80">
            <expr>
                <binary-operation-expression start-index="28" stop-index="79" literal-stop-index="80">
                    <left>
                        <between-expression start-index="28" stop-index="50" literal-stop-index="51">
                            <not>false</not>
                            <left>
                                <column name="user_id" start-index="28" stop-index="34" />
                            </left>
                            <between-expr>
                                <literal-expression value="1" start-index="44" stop-index="44" />
                                <parameter-marker-expression parameter-index="0" start-index="44" stop-index="44" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="10" start-index="50" stop-index="51" />
                                <parameter-marker-expression parameter-index="1" start-index="50" stop-index="50" />
                            </and-expr>
                        </between-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="56" stop-index="79" literal-start-index="57" literal-stop-index="80">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="56" stop-index="63" literal-start-index="57" literal-stop-index="64" />
                            </left>
                            <between-expr>
                                <literal-expression value="2" start-index="74" stop-index="74" />
                                <parameter-marker-expression parameter-index="2" start-index="73" stop-index="73" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="5" start-index="80" stop-index="80" />
                                <parameter-marker-expression parameter-index="3" start-index="79" stop-index="79" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="user_id" start-index="90" stop-index="96" literal-start-index="91" literal-stop-index="97" />
            <column-item name="order_id" start-index="99" stop-index="106" literal-start-index="100" literal-stop-index="107" />
        </order-by>
    </select>

    <select sql-case-id="select_comparison_symbol_with_single_table" parameters="1, 10, 2, 5">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="92" literal-stop-index="93">
            <expr>
                <binary-operation-expression start-index="28" stop-index="92" literal-stop-index="93">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="74" literal-stop-index="75">
                            <left>
                                <binary-operation-expression start-index="28" stop-index="56" literal-stop-index="57">
                                    <left>
                                        <binary-operation-expression start-index="28" stop-index="39">
                                            <left>
                                                <column name="user_id" start-index="28" stop-index="34" />
                                            </left>
                                            <operator>&gt;=</operator>
                                            <right>
                                                <literal-expression value="1" start-index="39" stop-index="39" />
                                                <parameter-marker-expression parameter-index="0" start-index="39" stop-index="39" />
                                            </right>
                                        </binary-operation-expression>
                                    </left>
                                    <operator>AND</operator>
                                    <right>
                                        <binary-operation-expression start-index="45" stop-index="56" literal-stop-index="57">
                                            <left>
                                                <column name="user_id" start-index="45" stop-index="51" />
                                            </left>
                                            <operator>&lt;=</operator>
                                            <right>
                                                <literal-expression value="10" start-index="56" stop-index="57" />
                                                <parameter-marker-expression parameter-index="1" start-index="56" stop-index="56" />
                                            </right>
                                        </binary-operation-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <binary-operation-expression start-index="62" stop-index="74" literal-start-index="63" literal-stop-index="75">
                                    <left>
                                        <column name="order_id" start-index="62" stop-index="69" literal-start-index="63" literal-stop-index="70" />
                                    </left>
                                    <operator>&gt;=</operator>
                                    <right>
                                        <literal-expression value="2" start-index="75" stop-index="75" />
                                        <parameter-marker-expression parameter-index="2" start-index="74" stop-index="74" />
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="80" stop-index="92" literal-start-index="81" literal-stop-index="93">
                            <left>
                                <column name="order_id" start-index="80" stop-index="87" literal-start-index="81" literal-stop-index="88" />
                            </left>
                            <operator>&lt;=</operator>
                            <right>
                                <literal-expression value="5" start-index="93" stop-index="93" />
                                <parameter-marker-expression parameter-index="3" start-index="92" stop-index="92" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="user_id" start-index="103" stop-index="109" literal-start-index="104" literal-stop-index="110" />
            <column-item name="order_id" start-index="112" stop-index="119" literal-start-index="113" literal-stop-index="120" />
        </order-by>
    </select>

    <select sql-case-id="select_in_with_single_table" parameters="1, 2, 3, 9, 10">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="70" literal-stop-index="71">
            <expr>
                <binary-operation-expression start-index="28" stop-index="70" literal-stop-index="71">
                    <left>
                        <in-expression start-index="28" stop-index="47">
                            <not>false</not>
                            <left>
                                <column name="user_id" start-index="28" stop-index="34" />
                            </left>
                            <right>
                                <list-expression start-index="39" stop-index="47">
                                    <items>
                                        <literal-expression value="1" start-index="40" stop-index="40" />
                                        <parameter-marker-expression parameter-index="0" start-index="40" stop-index="40" />
                                    </items>
                                    <items>
                                        <literal-expression value="2" start-index="43" stop-index="43" />
                                        <parameter-marker-expression parameter-index="1" start-index="43" stop-index="43" />
                                    </items>
                                    <items>
                                        <literal-expression value="3" start-index="46" stop-index="46" />
                                        <parameter-marker-expression parameter-index="2" start-index="46" stop-index="46" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <in-expression start-index="53" stop-index="70" literal-stop-index="71">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="53" stop-index="60" />
                            </left>
                            <right>
                                <list-expression start-index="65" stop-index="70" literal-stop-index="71">
                                    <items>
                                        <literal-expression value="9" start-index="66" stop-index="66" />
                                        <parameter-marker-expression parameter-index="3" start-index="66" stop-index="66" />
                                    </items>
                                    <items>
                                        <literal-expression value="10" start-index="69" stop-index="70" />
                                        <parameter-marker-expression parameter-index="4" start-index="69" stop-index="69" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="user_id" start-index="81" stop-index="87" literal-start-index="82" literal-stop-index="88" />
            <column-item name="order_id" start-index="90" stop-index="97" literal-start-index="91" literal-stop-index="98" />
        </order-by>
    </select>

    <select sql-case-id="select_in_with_same_sharding_column" parameters="1000, 1001, 1001, 1002">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="68" literal-stop-index="80">
            <expr>
                <binary-operation-expression start-index="28" stop-index="68" literal-stop-index="80">
                    <left>
                        <in-expression start-index="28" stop-index="45" literal-stop-index="51">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="28" stop-index="35" />
                            </left>
                            <right>
                                <list-expression start-index="40" stop-index="45" literal-stop-index="51">
                                    <items>
                                        <literal-expression value="1000" start-index="41" stop-index="44" />
                                        <parameter-marker-expression parameter-index="0" start-index="41" stop-index="41" />
                                    </items>
                                    <items>
                                        <literal-expression value="1001" start-index="47" stop-index="50" />
                                        <parameter-marker-expression parameter-index="1" start-index="44" stop-index="44" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <in-expression start-index="51" stop-index="68" literal-start-index="57" literal-stop-index="80">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="51" stop-index="58" literal-start-index="57" literal-stop-index="64" />
                            </left>
                            <right>
                                <list-expression start-index="63" stop-index="68" literal-start-index="69" literal-stop-index="80">
                                    <items>
                                        <literal-expression value="1001" start-index="70" stop-index="73" />
                                        <parameter-marker-expression parameter-index="2" start-index="64" stop-index="64" />
                                    </items>
                                    <items>
                                        <literal-expression value="1002" start-index="76" stop-index="79" />
                                        <parameter-marker-expression parameter-index="3" start-index="67" stop-index="67" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="order_id" start-index="79" stop-index="86" literal-start-index="91" literal-stop-index="98" />
        </order-by>
    </select>

    <select sql-case-id="select_with_N_string_in_expression">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="43">
            <expr>
                <binary-operation-expression start-index="28" stop-index="43">
                    <left>
                        <column name="is_deleted" start-index="28" stop-index="37" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="N" start-index="41" stop-index="43" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_count_like" parameters="1, 'init'">
        <from>
            <simple-table name="t_order" start-index="21" stop-index="27" />
        </from>
        <projections start-index="7" stop-index="14">
            <aggregation-projection type="COUNT" expression="COUNT(*)" start-index="7" stop-index="14" />
        </projections>
        <where start-index="29" stop-index="65" literal-stop-index="70">
            <expr>
                <binary-operation-expression start-index="36" stop-index="64" literal-stop-index="69">
                    <left>
                        <binary-operation-expression start-index="36" stop-index="46">
                            <left>
                                <column name="user_id" start-index="36" stop-index="42" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="46" stop-index="46" />
                                <parameter-marker-expression parameter-index="0" start-index="46" stop-index="46" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="52" stop-index="64" literal-stop-index="69">
                            <left>
                                <column name="status" start-index="52" stop-index="57" />
                            </left>
                            <operator>LIKE</operator>
                            <right>
                                <list-expression start-index="64" stop-index="64" literal-stop-index="69">
                                    <items>
                                        <literal-expression value="init" start-index="64" stop-index="69" />
                                        <parameter-marker-expression parameter-index="1" start-index="64" stop-index="64" />
                                    </items>
                                </list-expression>
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_count_like_escape" parameters="'a',1,0">
        <from>
            <simple-table name="t_order" start-index="21" stop-index="27" />
        </from>
        <projections start-index="7" stop-index="14">
            <aggregation-projection type="COUNT" expression="COUNT(*)" start-index="7" stop-index="14" />
        </projections>
        <where start-index="29" stop-index="58" literal-stop-index="60">
            <expr>
                <binary-operation-expression start-index="35" stop-index="58" literal-stop-index="60">
                    <left>
                        <column name="status" start-index="35" stop-index="40" />
                    </left>
                    <operator>LIKE</operator>
                    <right>
                        <list-expression start-index="47" stop-index="58" literal-stop-index="60">
                            <items>
                                <literal-expression value="a" start-index="47" stop-index="49" />
                                <parameter-marker-expression parameter-index="0" start-index="47" stop-index="47" />
                            </items>
                            <items>
                                <literal-expression value="!" start-index="56" stop-index="58" literal-start-index="58" literal-stop-index="60" />
                            </items>
                        </list-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <limit start-index="60" stop-index="75" literal-start-index="62" literal-stop-index="77">
            <row-count value="1" parameter-index="1" start-index="66" stop-index="66" literal-start-index="68" literal-stop-index="68" />
            <offset value="0" parameter-index="2" start-index="75" stop-index="75" literal-start-index="77" literal-stop-index="77" />
        </limit>
    </select>
    
    <select sql-case-id="select_count_like_concat" parameters="'init', 1, 2, 9, 10">
        <from>
            <simple-table name="t_order" alias="o" start-index="37" stop-index="45" />
        </from>
        <projections start-index="7" stop-index="30">
            <aggregation-projection type="COUNT" expression="count(0)" alias="orders_count" start-index="7" stop-index="14" />
        </projections>
        <where start-index="47" stop-index="142" literal-stop-index="148">
            <expr>
                <binary-operation-expression start-index="53" stop-index="142" literal-stop-index="148">
                    <left>
                        <binary-operation-expression start-index="53" stop-index="111" literal-stop-index="116">
                            <left>
                                <binary-operation-expression start-index="53" stop-index="87" literal-stop-index="92">
                                    <left>
                                        <column name="status" start-index="53" stop-index="60">
                                            <owner name="o" start-index="53" stop-index="53" />
                                        </column>
                                    </left>
                                    <operator>LIKE</operator>
                                    <right>
                                        <list-expression start-index="67" stop-index="87" literal-stop-index="92">
                                            <items>
                                                <function function-name="CONCAT" literal-text="CONCAT('%%', 'init', '%%')" start-index="67" stop-index="87" literal-stop-index="92" text="CONCAT('%%', ?, '%%')">
                                                    <parameter>
                                                        <literal-expression value="%%" start-index="74" stop-index="77" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="init" start-index="80" stop-index="80" literal-start-index="80" literal-stop-index="85" />
                                                        <parameter-marker-expression parameter-index="0" start-index="80" stop-index="80" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="%%" start-index="83" stop-index="86" literal-start-index="88" literal-stop-index="91" />
                                                    </parameter>
                                                </function>
                                                <expression-projection text="CONCAT('%%', ?, '%%')" literal-text="CONCAT('%%', 'init', '%%')" start-index="67" stop-index="87" literal-stop-index="92" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <in-expression start-index="93" stop-index="111" literal-start-index="98" literal-stop-index="116">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="93" stop-index="101" literal-start-index="98" literal-stop-index="106">
                                            <owner name="o" start-index="93" stop-index="93" literal-start-index="98" literal-stop-index="98" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="106" stop-index="111" literal-start-index="111" literal-stop-index="116">
                                            <items>
                                                <literal-expression value="1" start-index="112" stop-index="112" />
                                                <parameter-marker-expression parameter-index="1" start-index="107" stop-index="107" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="115" stop-index="115" />
                                                <parameter-marker-expression parameter-index="2" start-index="110" stop-index="110" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="117" stop-index="142" literal-start-index="122" literal-stop-index="148">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="117" stop-index="126" literal-start-index="122" literal-stop-index="131">
                                    <owner name="o" start-index="117" stop-index="117" literal-start-index="122" literal-stop-index="122" />
                                </column>
                            </left>
                            <between-expr>
                                <literal-expression value="9" start-index="141" stop-index="141" />
                                <parameter-marker-expression parameter-index="3" start-index="136" stop-index="136" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="10" start-index="147" stop-index="148" />
                                <parameter-marker-expression parameter-index="4" start-index="142" stop-index="142" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_count_like_concat_postgres" parameters="'init', 1, 2, 9, 10">
        <from>
            <simple-table name="t_order" alias="o" start-index="37" stop-index="45" />
        </from>
        <projections start-index="7" stop-index="30">
            <aggregation-projection type="COUNT" expression="count(0)" alias="orders_count" start-index="7" stop-index="14" />
        </projections>
        <where start-index="47" stop-index="142" literal-stop-index="148">
            <expr>
                <binary-operation-expression start-index="53" stop-index="142" literal-stop-index="148">
                    <left>
                        <binary-operation-expression start-index="53" stop-index="111" literal-stop-index="116">
                            <left>
                                <binary-operation-expression start-index="53" stop-index="87" literal-stop-index="92">
                                    <left>
                                        <column name="status" start-index="53" stop-index="60">
                                            <owner name="o" start-index="53" stop-index="53" />
                                        </column>
                                    </left>
                                    <operator>LIKE</operator>
                                    <right>
                                        <list-expression start-index="67" stop-index="87" literal-stop-index="92">
                                            <items>
                                                <function function-name="CONCAT" literal-text="CONCAT('%%', 'init', '%%')" start-index="67" stop-index="87" literal-stop-index="92" text="CONCAT('%%', ?, '%%')">
                                                    <parameter>
                                                        <literal-expression value="%%" literal-start-index="74" literal-stop-index="77" start-index="74" stop-index="77" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="init" literal-start-index="80" literal-stop-index="85" />
                                                        <parameter-marker-expression parameter-index="0" start-index="80" stop-index="80" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="%%" literal-start-index="88" literal-stop-index="91" start-index="83" stop-index="86" />
                                                    </parameter>
                                                </function>
                                            </items>
                                        </list-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <in-expression start-index="93" stop-index="111" literal-start-index="98" literal-stop-index="116">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="93" stop-index="101" literal-start-index="98" literal-stop-index="106">
                                            <owner name="o" start-index="93" stop-index="93" literal-start-index="98" literal-stop-index="98" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="106" stop-index="111" literal-start-index="111" literal-stop-index="116">
                                            <items>
                                                <literal-expression value="1" start-index="112" stop-index="112" />
                                                <parameter-marker-expression parameter-index="1" start-index="107" stop-index="107" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="115" stop-index="115" />
                                                <parameter-marker-expression parameter-index="2" start-index="110" stop-index="110" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="117" stop-index="142" literal-start-index="122" literal-stop-index="148">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="117" stop-index="126" literal-start-index="122" literal-stop-index="131">
                                    <owner name="o" start-index="117" stop-index="117" literal-start-index="122" literal-stop-index="122" />
                                </column>
                            </left>
                            <between-expr>
                                <literal-expression value="9" start-index="141" stop-index="141" />
                                <parameter-marker-expression parameter-index="3" start-index="136" stop-index="136" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="10" start-index="147" stop-index="148" />
                                <parameter-marker-expression parameter-index="4" start-index="142" stop-index="142" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_like_with_single_quotes" >
        <from>
            <simple-table name="admin" start-index="15" stop-index="19" />
        </from>
        <projections start-index="7" stop-index="8">
            <column-projection name="id" start-index="7" stop-index="8" />
        </projections>
        <where start-index="21" stop-index="44">
            <expr>
                <binary-operation-expression start-index="27" stop-index="44">
                    <left>
                        <column name="fullname" start-index="27" stop-index="34" />
                    </left>
                    <operator>LIKE</operator>
                    <right>
                        <list-expression start-index="41" stop-index="44">
                            <items>
                                <literal-expression value="a%" start-index="41" stop-index="44" />
                            </items>
                        </list-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_count_tilde_concat" parameters="'init', 1, 2, 9, 10">
        <from>
            <simple-table name="t_order" alias="o" start-index="37" stop-index="45" />
        </from>
        <projections start-index="7" stop-index="30">
            <aggregation-projection type="COUNT" expression="count(0)" alias="orders_count" start-index="7" stop-index="14" />
        </projections>
        <where start-index="47" stop-index="140" literal-stop-index="146">
            <expr>
                <binary-operation-expression start-index="53" stop-index="140" literal-stop-index="146">
                    <left>
                        <binary-operation-expression start-index="53" stop-index="109" literal-stop-index="114">
                            <left>
                                <binary-operation-expression start-index="53" stop-index="85" literal-stop-index="90">
                                    <left>
                                        <column name="status" start-index="53" stop-index="60">
                                            <owner name="o" start-index="53" stop-index="53" />
                                        </column>
                                    </left>
                                    <operator>~~</operator>
                                    <right>
                                        <list-expression start-index="65" stop-index="85" literal-stop-index="90">
                                            <items>
                                                <function function-name="CONCAT" text="CONCAT('%%', ?, '%%')" literal-text="CONCAT('%%', 'init', '%%')" start-index="65" stop-index="85" literal-stop-index="90">
                                                    <parameter>
                                                        <literal-expression value="%%" literal-start-index="72" literal-stop-index="75" start-index="72" stop-index="75" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="init" literal-start-index="78" literal-stop-index="83" />
                                                        <parameter-marker-expression parameter-index="0" start-index="78" stop-index="78" />
                                                    </parameter>
                                                    <parameter>
                                                        <literal-expression value="%%" literal-start-index="86" literal-stop-index="89" start-index="81" stop-index="84" />
                                                    </parameter>
                                                </function>
                                            </items>
                                        </list-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <in-expression start-index="91" stop-index="109" literal-stop-index="114" literal-start-index="96">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="91" stop-index="99" literal-start-index="96" literal-stop-index="104">
                                            <owner name="o" start-index="91" stop-index="91" literal-start-index="96" literal-stop-index="96" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="104" stop-index="109" literal-start-index="109" literal-stop-index="114">
                                            <items>
                                                <literal-expression value="1" start-index="110" stop-index="110" />
                                                <parameter-marker-expression parameter-index="1" start-index="105" stop-index="105" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="113" stop-index="113" />
                                                <parameter-marker-expression parameter-index="2" start-index="108" stop-index="108" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="115" stop-index="140" literal-start-index="120" literal-stop-index="146">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="115" stop-index="124" literal-start-index="120" literal-stop-index="129">
                                    <owner name="o" start-index="115" stop-index="115" literal-start-index="120" literal-stop-index="120" />
                                </column>
                            </left>
                            <between-expr>
                                <literal-expression value="9" start-index="139" stop-index="139" />
                                <parameter-marker-expression parameter-index="3" start-index="134" stop-index="134" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="10" start-index="145" stop-index="146" />
                                <parameter-marker-expression parameter-index="4" start-index="140" stop-index="140" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_sharding_route_with_binding_tables" parameters="1, 2, 9, 10">
        <from>
            <join-table join-type="INNER">
                <left>
                    <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                </left>
                <right>
                    <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="49" stop-index="97">
                        <left>
                            <binary-operation-expression start-index="49" stop-index="69">
                                <left>
                                    <column name="user_id" start-index="49" stop-index="57">
                                        <owner name="o" start-index="49" stop-index="49" />
                                    </column>
                                </left>
                                <operator>=</operator>
                                <right>
                                    <column name="user_id" start-index="61" stop-index="69">
                                        <owner name="i" start-index="61" stop-index="61" />
                                    </column>
                                </right>
                            </binary-operation-expression>
                        </left>
                        <operator>AND</operator>
                        <right>
                            <binary-operation-expression start-index="75" stop-index="97">
                                <left>
                                    <column name="order_id" start-index="75" stop-index="84">
                                        <owner name="o" start-index="75" stop-index="75" />
                                    </column>
                                </left>
                                <operator>=</operator>
                                <right>
                                    <column name="order_id" start-index="88" stop-index="97">
                                        <owner name="i" start-index="88" stop-index="88" />
                                    </column>
                                </right>
                            </binary-operation-expression>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="99" stop-index="154" literal-stop-index="155">
            <expr>
                <binary-operation-expression start-index="105" stop-index="154" literal-stop-index="155">
                    <left>
                        <in-expression start-index="105" stop-index="123">
                            <not>false</not>
                            <left>
                                <column name="user_id" start-index="105" stop-index="113">
                                    <owner name="o" start-index="105" stop-index="105" />
                                </column>
                            </left>
                            <right>
                                <list-expression start-index="118" stop-index="123">
                                    <items>
                                        <literal-expression value="1" start-index="119" stop-index="119" />
                                        <parameter-marker-expression parameter-index="0" start-index="119" stop-index="119" />
                                    </items>
                                    <items>
                                        <literal-expression value="2" start-index="122" stop-index="122" />
                                        <parameter-marker-expression parameter-index="1" start-index="122" stop-index="122" />
                                    </items>
                                </list-expression>
                            </right>
                        </in-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <between-expression start-index="129" stop-index="154" literal-stop-index="155">
                            <not>false</not>
                            <left>
                                <column name="order_id" start-index="129" stop-index="138">
                                    <owner name="o" start-index="129" stop-index="129" />
                                </column>
                            </left>
                            <between-expr>
                                <literal-expression value="9" start-index="148" stop-index="148" />
                                <parameter-marker-expression parameter-index="2" start-index="148" stop-index="148" />
                            </between-expr>
                            <and-expr>
                                <literal-expression value="10" start-index="154" stop-index="155" />
                                <parameter-marker-expression parameter-index="3" start-index="154" stop-index="154" />
                            </and-expr>
                        </between-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="165" stop-index="173" literal-start-index="166" literal-stop-index="174">
                <owner name="i" start-index="165" stop-index="165" literal-start-index="166" literal-stop-index="166" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_full_route_with_binding_tables">
        <from>
            <join-table join-type="INNER">
                <left>
                    <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                </left>
                <right>
                    <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="49" stop-index="97">
                        <left>
                            <binary-operation-expression start-index="49" stop-index="69">
                                <left>
                                    <column name="user_id" start-index="49" stop-index="57">
                                        <owner name="o" start-index="49" stop-index="49" />
                                    </column>
                                </left>
                                <operator>=</operator>
                                <right>
                                    <column name="user_id" start-index="61" stop-index="69">
                                        <owner name="i" start-index="61" stop-index="61" />
                                    </column>
                                </right>
                            </binary-operation-expression>
                        </left>
                        <operator>AND</operator>
                        <right>
                            <binary-operation-expression start-index="75" stop-index="97">
                                <left>
                                    <column name="order_id" start-index="75" stop-index="84">
                                        <owner name="o" start-index="75" stop-index="75" />
                                    </column>
                                </left>
                                <operator>=</operator>
                                <right>
                                    <column name="order_id" start-index="88" stop-index="97">
                                        <owner name="i" start-index="88" stop-index="88" />
                                    </column>
                                </right>
                            </binary-operation-expression>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <order-by>
            <column-item name="item_id" start-index="108" stop-index="116">
                <owner name="i" start-index="108" stop-index="108" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_sharding_route_with_broadcast_table" parameters="1, 2, 9, 10, 'init'">
        <from>
            <join-table join-type="INNER">
                <left>
                    <join-table join-type="INNER">
                        <left>
                            <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                        </left>
                        <right>
                            <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                        </right>
                        <on-condition>
                            <binary-operation-expression start-index="49" stop-index="97">
                                <left>
                                    <binary-operation-expression start-index="49" stop-index="69">
                                        <left>
                                            <column name="user_id" start-index="49" stop-index="57">
                                                <owner name="o" start-index="49" stop-index="49" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="user_id" start-index="61" stop-index="69">
                                                <owner name="i" start-index="61" stop-index="61" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </left>
                                <operator>AND</operator>
                                <right>
                                    <binary-operation-expression start-index="75" stop-index="97">
                                        <left>
                                            <column name="order_id" start-index="75" stop-index="84">
                                                <owner name="o" start-index="75" stop-index="75" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="order_id" start-index="88" stop-index="97">
                                                <owner name="i" start-index="88" stop-index="88" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </on-condition>
                    </join-table>
                </left>
                <right>
                    <simple-table name="t_broadcast_table" alias="c" start-index="104" stop-index="122" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="127" stop-index="145">
                        <left>
                            <column name="status" start-index="127" stop-index="134">
                                <owner name="o" start-index="127" stop-index="127" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="status" start-index="138" stop-index="145">
                                <owner name="c" start-index="138" stop-index="138" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="147" stop-index="219" literal-stop-index="225">
            <expr>
                <binary-operation-expression start-index="153" stop-index="219" literal-stop-index="225">
                    <left>
                        <binary-operation-expression start-index="153" stop-index="202" literal-stop-index="203">
                            <left>
                                <in-expression start-index="153" stop-index="171">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="153" stop-index="161">
                                            <owner name="o" start-index="153" stop-index="153" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="166" stop-index="171">
                                            <items>
                                                <literal-expression value="1" start-index="167" stop-index="167" />
                                                <parameter-marker-expression parameter-index="0" start-index="167" stop-index="167" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="170" stop-index="170" />
                                                <parameter-marker-expression parameter-index="1" start-index="170" stop-index="170" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <between-expression start-index="177" stop-index="202" literal-stop-index="203">
                                    <not>false</not>
                                    <left>
                                        <column name="order_id" start-index="177" stop-index="186">
                                            <owner name="o" start-index="177" stop-index="177" />
                                        </column>
                                    </left>
                                    <between-expr>
                                        <literal-expression value="9" start-index="196" stop-index="196" />
                                        <parameter-marker-expression parameter-index="2" start-index="196" stop-index="196" />
                                    </between-expr>
                                    <and-expr>
                                        <literal-expression value="10" start-index="202" stop-index="203" />
                                        <parameter-marker-expression parameter-index="3" start-index="202" stop-index="202" />
                                    </and-expr>
                                </between-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="208" stop-index="219" literal-start-index="209" literal-stop-index="225">
                            <left>
                                <column name="status" start-index="208" stop-index="215" literal-start-index="209" literal-stop-index="216">
                                    <owner name="o" start-index="208" stop-index="208" literal-start-index="209" literal-stop-index="209" />
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="init" start-index="220" stop-index="225" />
                                <parameter-marker-expression parameter-index="4" start-index="219" stop-index="219" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="230" stop-index="238" literal-start-index="236" literal-stop-index="244">
                <owner name="i" start-index="230" stop-index="230" literal-start-index="236" literal-stop-index="236" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_keyword_table_name_with_back_quotes" parameters="1, 2, 9, 10, 'init'">
        <from>
            <join-table join-type="INNER">
                <left>
                    <join-table join-type="INNER">
                        <left>
                            <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                        </left>
                        <right>
                            <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                        </right>
                        <on-condition>
                            <binary-operation-expression start-index="49" stop-index="97">
                                <left>
                                    <binary-operation-expression start-index="49" stop-index="69">
                                        <left>
                                            <column name="user_id" start-index="49" stop-index="57">
                                                <owner name="o" start-index="49" stop-index="49" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="user_id" start-index="61" stop-index="69">
                                                <owner name="i" start-index="61" stop-index="61" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </left>
                                <operator>AND</operator>
                                <right>
                                    <binary-operation-expression start-index="75" stop-index="97">
                                        <left>
                                            <column name="order_id" start-index="75" stop-index="84">
                                                <owner name="o" start-index="75" stop-index="75" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="order_id" start-index="88" stop-index="97">
                                                <owner name="i" start-index="88" stop-index="88" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </on-condition>
                    </join-table>
                </left>
                <right>
                    <simple-table name="select" alias="c" start-delimiter="`" end-delimiter="`" start-index="104" stop-index="113" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="118" stop-index="136">
                        <left>
                            <column name="status" start-index="118" stop-index="125">
                                <owner name="o" start-index="118" stop-index="118" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="status" start-index="129" stop-index="136">
                                <owner name="c" start-index="129" stop-index="129" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="138" stop-index="210" literal-stop-index="216">
            <expr>
                <binary-operation-expression start-index="144" stop-index="210" literal-stop-index="216">
                    <left>
                        <binary-operation-expression start-index="144" stop-index="193" literal-stop-index="194">
                            <left>
                                <in-expression start-index="144" stop-index="162">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="144" stop-index="152">
                                            <owner name="o" start-index="144" stop-index="144" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="157" stop-index="162">
                                            <items>
                                                <literal-expression value="1" start-index="158" stop-index="158" />
                                                <parameter-marker-expression parameter-index="0" start-index="158" stop-index="158" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="161" stop-index="161" />
                                                <parameter-marker-expression parameter-index="1" start-index="161" stop-index="161" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <between-expression start-index="168" stop-index="193" literal-stop-index="194">
                                    <not>false</not>
                                    <left>
                                        <column name="order_id" start-index="168" stop-index="177">
                                            <owner name="o" start-index="168" stop-index="168" />
                                        </column>
                                    </left>
                                    <between-expr>
                                        <literal-expression value="9" start-index="187" stop-index="187" />
                                        <parameter-marker-expression parameter-index="2" start-index="187" stop-index="187" />
                                    </between-expr>
                                    <and-expr>
                                        <literal-expression value="10" start-index="193" stop-index="194" />
                                        <parameter-marker-expression parameter-index="3" start-index="193" stop-index="193" />
                                    </and-expr>
                                </between-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="199" stop-index="210" literal-start-index="200" literal-stop-index="216">
                            <left>
                                <column name="status" start-index="199" stop-index="206" literal-start-index="200" literal-stop-index="207">
                                    <owner name="o" start-index="199" stop-index="199" literal-start-index="200" literal-stop-index="200" />
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="init" start-index="211" stop-index="216" />
                                <parameter-marker-expression parameter-index="4" start-index="210" stop-index="210" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="221" stop-index="229" literal-start-index="227" literal-stop-index="235">
                <owner name="i" start-index="221" stop-index="221" literal-start-index="227" literal-stop-index="227" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_keyword_table_name_with_double_quotes" parameters="1, 2, 9, 10, 'init'">
        <from>
            <join-table join-type="INNER">
                <left>
                    <join-table join-type="INNER">
                        <left>
                            <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                        </left>
                        <right>
                            <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                        </right>
                        <on-condition>
                            <binary-operation-expression start-index="49" stop-index="97">
                                <left>
                                    <binary-operation-expression start-index="49" stop-index="69">
                                        <left>
                                            <column name="user_id" start-index="49" stop-index="57">
                                                <owner name="o" start-index="49" stop-index="49" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="user_id" start-index="61" stop-index="69">
                                                <owner name="i" start-index="61" stop-index="61" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </left>
                                <operator>AND</operator>
                                <right>
                                    <binary-operation-expression start-index="75" stop-index="97">
                                        <left>
                                            <column name="order_id" start-index="75" stop-index="84">
                                                <owner name="o" start-index="75" stop-index="75" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="order_id" start-index="88" stop-index="97">
                                                <owner name="i" start-index="88" stop-index="88" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </on-condition>
                    </join-table>
                </left>
                <right>
                    <simple-table name="select" alias="c" start-delimiter="&quot;" end-delimiter="&quot;" start-index="104" stop-index="113" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="118" stop-index="136">
                        <left>
                            <column name="status" start-index="118" stop-index="125">
                                <owner name="o" start-index="118" stop-index="118" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="status" start-index="129" stop-index="136">
                                <owner name="c" start-index="129" stop-index="129" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9" >
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="138" stop-index="210" literal-stop-index="216">
            <expr>
                <binary-operation-expression start-index="144" stop-index="210" literal-stop-index="216">
                    <left>
                        <binary-operation-expression start-index="144" stop-index="193" literal-stop-index="194">
                            <left>
                                <in-expression start-index="144" stop-index="162">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="144" stop-index="152">
                                            <owner name="o" start-index="144" stop-index="144" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="157" stop-index="162">
                                            <items>
                                                <literal-expression value="1" start-index="158" stop-index="158" />
                                                <parameter-marker-expression parameter-index="0" start-index="158" stop-index="158" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="161" stop-index="161" />
                                                <parameter-marker-expression parameter-index="1" start-index="161" stop-index="161" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <between-expression start-index="168" stop-index="193" literal-stop-index="194">
                                    <not>false</not>
                                    <left>
                                        <column name="order_id" start-index="168" stop-index="177">
                                            <owner name="o" start-index="168" stop-index="168" />
                                        </column>
                                    </left>
                                    <between-expr>
                                        <literal-expression value="9" start-index="187" stop-index="187" />
                                        <parameter-marker-expression parameter-index="2" start-index="187" stop-index="187" />
                                    </between-expr>
                                    <and-expr>
                                        <literal-expression value="10" start-index="193" stop-index="194" />
                                        <parameter-marker-expression parameter-index="3" start-index="193" stop-index="193" />
                                    </and-expr>
                                </between-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="199" stop-index="210" literal-start-index="200" literal-stop-index="216">
                            <left>
                                <column name="status" start-index="199" stop-index="206" literal-start-index="200" literal-stop-index="207">
                                    <owner name="c" start-index="199" stop-index="199" literal-start-index="200" literal-stop-index="200" />
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="init" start-index="211" stop-index="216" />
                                <parameter-marker-expression parameter-index="4" start-index="210" stop-index="210" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="221" stop-index="229" literal-start-index="227" literal-stop-index="235">
                <owner name="i" start-index="221" stop-index="221" literal-start-index="227" literal-stop-index="227" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_keyword_table_name_with_square_brackets" parameters="1, 2, 9, 10, 'init'">
        <from>
            <join-table join-type="INNER">
                <left>
                    <join-table join-type="INNER">
                        <left>
                            <simple-table name="t_order" alias="o" start-index="16" stop-index="24" />
                        </left>
                        <right>
                            <simple-table name="t_order_item" alias="i" start-index="31" stop-index="44" />
                        </right>
                        <on-condition>
                            <binary-operation-expression start-index="49" stop-index="97">
                                <left>
                                    <binary-operation-expression start-index="49" stop-index="69">
                                        <left>
                                            <column name="user_id" start-index="49" stop-index="57">
                                                <owner name="o" start-index="49" stop-index="49" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="user_id" start-index="61" stop-index="69">
                                                <owner name="i" start-index="61" stop-index="61" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </left>
                                <operator>AND</operator>
                                <right>
                                    <binary-operation-expression start-index="75" stop-index="97">
                                        <left>
                                            <column name="order_id" start-index="75" stop-index="84">
                                                <owner name="o" start-index="75" stop-index="75" />
                                            </column>
                                        </left>
                                        <operator>=</operator>
                                        <right>
                                            <column name="order_id" start-index="88" stop-index="97">
                                                <owner name="i" start-index="88" stop-index="88" />
                                            </column>
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </on-condition>
                    </join-table>
                </left>
                <right>
                    <simple-table name="select" alias="c" start-delimiter="[" end-delimiter="]" start-index="104" stop-index="113" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="118" stop-index="136">
                        <left>
                            <column name="status" start-index="118" stop-index="125">
                                <owner name="o" start-index="118" stop-index="118" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="status" start-index="129" stop-index="136">
                                <owner name="c" start-index="129" stop-index="129" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="138" stop-index="210" literal-stop-index="216">
            <expr>
                <binary-operation-expression start-index="144" stop-index="210" literal-stop-index="216">
                    <left>
                        <binary-operation-expression start-index="144" stop-index="193" literal-stop-index="194">
                            <left>
                                <in-expression start-index="144" stop-index="162">
                                    <not>false</not>
                                    <left>
                                        <column name="user_id" start-index="144" stop-index="152">
                                            <owner name="o" start-index="144" stop-index="144" />
                                        </column>
                                    </left>
                                    <right>
                                        <list-expression start-index="157" stop-index="162">
                                            <items>
                                                <literal-expression value="1" start-index="158" stop-index="158" />
                                                <parameter-marker-expression parameter-index="0" start-index="158" stop-index="158" />
                                            </items>
                                            <items>
                                                <literal-expression value="2" start-index="161" stop-index="161" />
                                                <parameter-marker-expression parameter-index="1" start-index="161" stop-index="161" />
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <between-expression start-index="168" stop-index="193" literal-stop-index="194">
                                    <not>false</not>
                                    <left>
                                        <column name="order_id" start-index="168" stop-index="177">
                                            <owner name="o" start-index="168" stop-index="168" />
                                        </column>
                                    </left>
                                    <between-expr>
                                        <literal-expression value="9" start-index="187" stop-index="187" />
                                        <parameter-marker-expression parameter-index="2" start-index="187" stop-index="187" />
                                    </between-expr>
                                    <and-expr>
                                        <literal-expression value="10" start-index="193" stop-index="194" />
                                        <parameter-marker-expression parameter-index="3" start-index="193" stop-index="193" />
                                    </and-expr>
                                </between-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="199" stop-index="210" literal-start-index="200" literal-stop-index="216">
                            <left>
                                <column name="status" start-index="199" stop-index="206" literal-start-index="200" literal-stop-index="207">
                                    <owner name="c" start-index="199" stop-index="199" literal-start-index="200" literal-stop-index="200" />
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="init" start-index="211" stop-index="216" />
                                <parameter-marker-expression parameter-index="4" start-index="210" stop-index="210" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-index="221" stop-index="229" literal-start-index="227" literal-stop-index="235">
                <owner name="i" start-index="221" stop-index="221" literal-start-index="227" literal-stop-index="227" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_alias_as_keyword" parameters="1">
        <from>
            <simple-table name="t_order_item" alias="length" start-index="36" stop-index="54" />
        </from>
        <projections start-index="7" stop-index="29">
            <column-projection name="item_id" alias="password" start-index="7" stop-index="29">
                <owner name="length" start-index="7" stop-index="12" />
            </column-projection>>
        </projections>
        <where start-index="56" stop-index="79">
            <expr>
                <binary-operation-expression start-index="62" stop-index="79">
                    <left>
                        <column name="item_id" start-index="62" stop-index="75">
                            <owner name="length" start-index="62" stop-index="67" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="79" stop-index="79" />
                        <parameter-marker-expression parameter-index="0" start-index="79" stop-index="79" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_force_index_join" parameters="1000">
        <from>
            <join-table join-type="INNER">
                <left>
                    <simple-table name="t_order" alias="o" start-index="16" stop-index="24">
                        <index-hint origin-text="FORCE INDEX(order_index)" start-index="26" stop-index="49">
                            <hint-index-name name="order_index" start-index="38" stop-index="48"/>
                        </index-hint>
                    </simple-table>
                </left>
                <right>
                    <simple-table name="t_order_item" alias="i" start-index="56" stop-index="69" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="74" stop-index="94">
                        <left>
                            <column name="order_id" start-index="74" stop-index="83">
                                <owner name="o" start-index="74" stop-index="74" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="order_id" start-index="85" stop-index="94">
                                <owner name="i" start-index="85" stop-index="85" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="9">
            <shorthand-projection start-index="7" stop-index="9">
                <owner name="i" start-index="7" stop-index="7" />
            </shorthand-projection>
        </projections>
        <where start-index="96" stop-index="115" literal-stop-index="118">
            <expr>
                <binary-operation-expression start-index="102" stop-index="115" literal-stop-index="118">
                    <left>
                        <column name="order_id" start-index="102" stop-index="111">
                            <owner name="o" start-index="102" stop-index="102" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1000" start-index="115" stop-index="118" />
                        <parameter-marker-expression parameter-index="0" start-index="115" stop-index="115" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_equal_with_geography" parameters="'{&quot;rule2&quot;:&quot;null2&quot;}', 100, 200, 1, 2">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="148" literal-stop-index="170">
            <expr>
                <binary-operation-expression start-index="28" stop-index="148" literal-stop-index="170">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="131" literal-stop-index="153">
                            <left>
                                <binary-operation-expression start-index="28" stop-index="115" literal-stop-index="137">
                                    <left>
                                        <binary-operation-expression start-index="28" stop-index="42" literal-stop-index="60">
                                            <left>
                                                <column name="rule" start-index="28" stop-index="31" />
                                            </left>
                                            <operator>=</operator>
                                            <right>
                                                <type-cast-expression>
                                                    <expression>
                                                        <literal-expression value="{&quot;rule2&quot;:&quot;null2&quot;}" start-index="35" stop-index="53" />
                                                    </expression>
                                                    <data-type>jsonb</data-type>
                                                </type-cast-expression>
                                                <parameter-marker-expression parameter-index="0" start-index="35" stop-index="42" />
                                            </right>
                                        </binary-operation-expression>
                                    </left>
                                    <operator>AND</operator>
                                    <right>
                                        <binary-operation-expression start-index="48" stop-index="115" literal-start-index="66" literal-stop-index="137">
                                            <left>
                                                <column name="start_point" start-index="48" stop-index="58" literal-start-index="66" literal-stop-index="76" />
                                            </left>
                                            <operator>=</operator>
                                            <right>
                                                <function function-name="ST_GeographyFromText" text="ST_GeographyFromText('SRID=4326;POINT('||?||' '||?||')')" literal-text="ST_GeographyFromText('SRID=4326;POINT('||100||' '||200||')')" start-index="60" stop-index="115" literal-start-index="78" literal-stop-index="137">
                                                    <parameter>
                                                        <common-expression text="'SRID=4326;POINT('||?||' '||?||')'" literal-text="'SRID=4326;POINT('||100||' '||200||')'" literal-start-index="99" start-index="81" literal-stop-index="136" stop-index="114" />
                                                    </parameter>
                                                </function>
                                            </right>
                                        </binary-operation-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <binary-operation-expression start-index="121" stop-index="131" literal-start-index="143" literal-stop-index="153">
                                    <left>
                                        <column name="user_id" start-index="121" stop-index="127" literal-start-index="143" literal-stop-index="149" />
                                    </left>
                                    <operator>=</operator>
                                    <right>
                                        <literal-expression value="1" start-index="153" stop-index="153" />
                                        <parameter-marker-expression parameter-index="3" start-index="131" stop-index="131" />
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="137" stop-index="148" literal-start-index="159" literal-stop-index="170">
                            <left>
                                <column name="order_id" start-index="137" stop-index="144" literal-start-index="159" literal-stop-index="166" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="2" start-index="170" stop-index="170" />
                                <parameter-marker-expression parameter-index="4" start-index="148" stop-index="148" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_in_with_geography" parameters="'{&quot;rule2&quot;:&quot;null2&quot;}', '{&quot;rule3&quot;:&quot;null3&quot;}', 100, 200, 1, 2">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="161" literal-stop-index="201">
            <expr>
                <binary-operation-expression start-index="28" stop-index="161" literal-stop-index="201">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="144" literal-stop-index="184">
                            <left>
                                <binary-operation-expression start-index="28" stop-index="128" literal-stop-index="168">
                                    <left>
                                        <in-expression start-index="28" stop-index="55" literal-stop-index="91">
                                            <not>false</not>
                                            <left>
                                                <column name="rule" start-index="28" stop-index="31" />
                                            </left>
                                            <right>
                                                <list-expression start-index="36" stop-index="55" literal-stop-index="91">
                                                    <items>
                                                        <type-cast-expression>
                                                            <expression>
                                                                <literal-expression value="{&quot;rule2&quot;:&quot;null2&quot;}" start-index="37" stop-index="55" />
                                                            </expression>
                                                            <data-type>jsonb</data-type>
                                                        </type-cast-expression>
                                                        <parameter-marker-expression parameter-index="0" start-index="37" stop-index="44" />
                                                    </items>
                                                    <items>
                                                        <type-cast-expression>
                                                            <expression>
                                                                <literal-expression value="{&quot;rule3&quot;:&quot;null3&quot;}" start-index="65" stop-index="83" />
                                                            </expression>
                                                            <data-type>jsonb</data-type>
                                                        </type-cast-expression>
                                                        <parameter-marker-expression parameter-index="1" start-index="47" stop-index="54" />
                                                    </items>
                                                </list-expression>
                                            </right>
                                        </in-expression>
                                    </left>
                                    <operator>AND</operator>
                                    <right>
                                        <binary-operation-expression start-index="61" stop-index="128" literal-start-index="97" literal-stop-index="168">
                                            <left>
                                                <column name="start_point" start-index="61" stop-index="71" literal-start-index="97" literal-stop-index="107" />
                                            </left>
                                            <operator>=</operator>
                                            <right>
                                                <function function-name="ST_GeographyFromText" text="ST_GeographyFromText('SRID=4326;POINT('||?||' '||?||')')" literal-text="ST_GeographyFromText('SRID=4326;POINT('||100||' '||200||')')" start-index="73" stop-index="128" literal-start-index="109" literal-stop-index="168">
                                                    <parameter>
                                                        <common-expression text="'SRID=4326;POINT('||?||' '||?||')'" literal-text="'SRID=4326;POINT('||100||' '||200||')'" literal-start-index="130" start-index="94" literal-stop-index="167" stop-index="127" />
                                                    </parameter>
                                                </function>
                                            </right>
                                        </binary-operation-expression>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <binary-operation-expression start-index="134" stop-index="144" literal-start-index="174" literal-stop-index="184">
                                    <left>
                                        <column name="user_id" start-index="134" stop-index="140" literal-start-index="174" literal-stop-index="180" />
                                    </left>
                                    <operator>=</operator>
                                    <right>
                                        <literal-expression value="1" start-index="184" stop-index="184" />
                                        <parameter-marker-expression parameter-index="4" start-index="144" stop-index="144" />
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="150" stop-index="161" literal-start-index="190" literal-stop-index="201">
                            <left>
                                <column name="order_id" start-index="150" stop-index="157" literal-start-index="190" literal-stop-index="197" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="2" start-index="201" stop-index="201" />
                                <parameter-marker-expression parameter-index="5" start-index="161" stop-index="161" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_between_with_geography" parameters="'{&quot;rule2&quot;:&quot;null2&quot;}', '{&quot;rule3&quot;:&quot;null3&quot;}', 100, 200, 1">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="151" literal-stop-index="191">
            <expr>
                <binary-operation-expression start-index="28" stop-index="151" literal-stop-index="191">
                    <left>
                        <binary-operation-expression start-index="28" stop-index="134" literal-stop-index="174">
                            <left>
                                <between-expression start-index="28" stop-index="61" literal-stop-index="97">
                                    <not>false</not>
                                    <left>
                                        <column name="rule" start-index="28" stop-index="31" />
                                    </left>
                                    <between-expr>
                                        <parameter-marker-expression parameter-index="0" start-index="41" stop-index="48" />
                                        <type-cast-expression>
                                            <expression>
                                                <literal-expression value="{&quot;rule2&quot;:&quot;null2&quot;}" start-index="41" stop-index="59" />
                                            </expression>
                                            <data-type>jsonb</data-type>
                                        </type-cast-expression>
                                    </between-expr>
                                    <and-expr>
                                        <type-cast-expression>
                                            <expression>
                                                <literal-expression value="{&quot;rule3&quot;:&quot;null3&quot;}" start-index="72" stop-index="90" />
                                            </expression>
                                            <data-type>jsonb</data-type>
                                        </type-cast-expression>
                                        <parameter-marker-expression parameter-index="1" start-index="54" stop-index="61" />
                                    </and-expr>
                                </between-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <binary-operation-expression start-index="67" stop-index="134" literal-start-index="103" literal-stop-index="174">
                                    <left>
                                        <column name="start_point" start-index="67" stop-index="77" literal-start-index="103" literal-stop-index="113" />
                                    </left>
                                    <operator>=</operator>
                                    <right>
                                        <function function-name="ST_GeographyFromText" literal-text="ST_GeographyFromText('SRID=4326;POINT('||100||' '||200||')')" text="ST_GeographyFromText('SRID=4326;POINT('||?||' '||?||')')" start-index="79" stop-index="134" literal-start-index="115" literal-stop-index="174">
                                            <parameter>
                                                <common-expression text="'SRID=4326;POINT('||?||' '||?||')'" literal-text="'SRID=4326;POINT('||100||' '||200||')'" literal-start-index="136" start-index="100" literal-stop-index="173" stop-index="133" />
                                            </parameter>
                                        </function>
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="140" stop-index="151" literal-start-index="180" literal-stop-index="191">
                            <left>
                                <column name="order_id" start-index="140" stop-index="147" literal-start-index="180" literal-stop-index="187" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="191" stop-index="191" />
                                <parameter-marker-expression parameter-index="4" start-index="151" stop-index="151" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_double_quotes" parameters="1">
        <from>
            <simple-table name="t_order_item" start-delimiter="&quot;" end-delimiter="&quot;" start-index="14" stop-index="27" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="29" stop-index="48">
            <expr>
                <binary-operation-expression start-index="35" stop-index="48">
                    <left>
                        <column name="item_id" start-delimiter="&quot;" end-delimiter="&quot;" start-index="35" stop-index="43" />
                    </left>
                    <operator>!=</operator>
                    <right>
                        <literal-expression value="1" start-index="48" stop-index="48" />
                        <parameter-marker-expression parameter-index="0" start-index="48" stop-index="48" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="item_id" start-delimiter="&quot;" end-delimiter="&quot;" start-index="59" stop-index="67" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_single_column_without_order_by" >
        <from>
            <simple-table name="t_order_item" start-index="29" stop-index="40" />
        </from>
        <projections start-index="16" stop-index="22" distinct-row="true">
            <column-projection name="item_id" start-index="16" stop-index="22" />
        </projections>
    </select>

    <select sql-case-id="select_distinct_with_brackets" >
        <from>
            <simple-table name="t_order_item" start-index="31" stop-index="42" />
        </from>
        <projections start-index="16" stop-index="24" distinct-row="true">
            <column-projection name="item_id" start-index="17" stop-index="23">
                <parentheses left = "true" start-index = "16" stop-index = "16" />
                <parentheses left = "false" start-index = "24" stop-index = "24" />
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_unique_with_single_column_without_order_by" >
        <from>
            <simple-table name="t_order_item" start-index="27" stop-index="38" />
        </from>
        <projections start-index="14" stop-index="20" distinct-row="true">
            <column-projection name="item_id" start-index="14" stop-index="20" />
        </projections>
    </select>
    
    <select sql-case-id="select_distinct_with_multi_column_without_order_by" >
        <from>
            <simple-table name="t_order" start-index="47" stop-index="53" />
        </from>
        <projections start-index="16" stop-index="40" distinct-row="true">
            <column-projection name="order_id" start-index="16" stop-index="23" />
            <column-projection name="user_id" start-index="26" stop-index="32" />
            <column-projection name="status" start-index="35" stop-index="40" />
        </projections>
    </select>

    <select sql-case-id="select_unique_with_multi_column_without_order_by" >
        <from>
            <simple-table name="t_order" start-index="45" stop-index="51" />
        </from>
        <projections start-index="14" stop-index="38" distinct-row="true">
            <column-projection name="order_id" start-index="14" stop-index="21" />
            <column-projection name="user_id" start-index="24" stop-index="30" />
            <column-projection name="status" start-index="33" stop-index="38" />
        </projections>
    </select>
    
    <select sql-case-id="select_distinct_with_owner_column_without_order_by" >
        <from>
            <simple-table name="t_order" start-index="38" stop-index="44" />
        </from>
        <projections start-index="16" stop-index="31" distinct-row="true">
            <column-projection name="order_id" start-index="16" stop-index="31" >
                <owner name="t_order" start-index="16" stop-index="22" />
            </column-projection>
        </projections>
        <order-by>
            <column-item name="order_id" start-index="55" stop-index="70">
                <owner name="t_order" start-index="55" stop-index="61" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_owner_star_without_order_by" >
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="t_order" start-index="54" stop-index="60" />
                </left>
                <right>
                    <simple-table name="t_order_item" start-index="63" stop-index="74" />
                </right>
            </join-table>
        </from>
        <projections start-index="16" stop-index="47" distinct-row="true">
            <shorthand-projection start-index="16" stop-index="24">
                <owner name="t_order" start-index="16" stop-index="22" />
            </shorthand-projection>
            <column-projection name="order_id" start-index="27" stop-index="47" >
                <owner name="t_order_item" start-index="27" stop-index="38" />
            </column-projection>
        </projections>
        <where start-index="76" stop-index="121">
            <expr>
                <binary-operation-expression start-index="82" stop-index="121">
                    <left>
                        <column name="order_id" start-index="82" stop-index="97">
                            <owner name="t_order" start-index="82" stop-index="88" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <column name="order_id" start-index="101" stop-index="121">
                            <owner name="t_order_item" start-index="101" stop-index="112" />
                        </column>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_owner_column_with_group_by" >
        <from>
            <simple-table name="t_order" start-index="38" stop-index="44" />
        </from>
        <projections start-index="16" stop-index="31" distinct-row="true">
            <column-projection name="order_id" start-index="16" stop-index="31" >
                <owner name="t_order" start-index="16" stop-index="22" />
            </column-projection>
        </projections>
        <group-by>
            <column-item name="order_id" start-index="55" stop-index="70">
                <owner name="t_order" start-index="55" stop-index="61" />
            </column-item>
        </group-by>
    </select>

    <select sql-case-id="select_distinct_with_single_column" >
        <from>
            <simple-table name="t_order_item" start-index="29" stop-index="40" />
        </from>
        <projections start-index="16" stop-index="22" distinct-row="true">
            <column-projection name="item_id" start-index="16" stop-index="22" />
        </projections>
        <order-by>
            <column-item name="item_id" start-index="51" stop-index="57" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_owner_column" >
        <from>
            <simple-table name="t_order" start-index="38" stop-index="44" />
        </from>
        <projections start-index="16" stop-index="31" distinct-row="true">
            <column-projection name="order_id" start-index="16" stop-index="31">
                <owner name="t_order" start-index="16" stop-index="22" />
            </column-projection>
        </projections>
        <order-by>
            <column-item name="order_id" start-index="55" stop-index="62" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_multi_column" >
        <from>
            <simple-table name="t_order" start-index="47" stop-index="53" />
        </from>
        <projections start-index="16" stop-index="40" distinct-row="true">
            <column-projection name="order_id" start-index="16" stop-index="23" />
            <column-projection name="user_id" start-index="26" stop-index="32" />
            <column-projection name="status" start-index="35" stop-index="40" />
        </projections>
        <order-by>
            <column-item name="order_id" start-index="64" stop-index="71" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_star" >
        <from>
            <simple-table  name="t_order" start-index="23" stop-index="29" />
        </from>
        <projections distinct-row="true" start-index="16" stop-index="16">
            <shorthand-projection start-index="16" stop-index="16" />
        </projections>
        <where start-index="31" stop-index="51">
            <expr>
                <binary-operation-expression start-index="37" stop-index="51">
                    <left>
                        <column name="order_id" start-index="37" stop-index="44" />
                    </left>
                    <operator>&gt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="48" stop-index="51" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="order_id" start-index="62" stop-index="69" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_owner_star">
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="t_order" start-index="54" stop-index="60" />
                </left>
                <right>
                    <simple-table name="t_order_item" start-index="63" stop-index="74" />
                </right>
            </join-table>
        </from>
        <projections distinct-row="true" start-index="16" stop-index="47">
            <shorthand-projection start-index="16" stop-index="24">
                <owner name="t_order" start-index="16" stop-index="22" />
            </shorthand-projection>
            <column-projection name="order_id" start-index="27" stop-index="47">
                <owner name="t_order_item" start-index="27" stop-index="38" />
            </column-projection>
        </projections>
        <where start-index="76" stop-index="121">
            <expr>
                <binary-operation-expression start-index="82" stop-index="121">
                    <left>
                        <column name="order_id" start-index="82" stop-index="97">
                            <owner name="t_order" start-index="82" stop-index="88" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <column name="order_id" start-index="101" stop-index="121">
                            <owner name="t_order_item" start-index="101" stop-index="112" />
                        </column>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="order_id" start-index="132" stop-index="147">
                <owner name="t_order" start-index="132" stop-index="138" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_sum" >
        <from>
            <simple-table  name="t_order" start-index="37" stop-index="43" />
        </from>
        <projections start-index="7" stop-index="30">
            <aggregation-distinct-projection type="SUM" expression="SUM(DISTINCT order_id)" distinct-inner-expression="order_id" alias="s" start-index="7" stop-index="28" />
        </projections>
        <where start-index="45" stop-index="65">
            <expr>
                <binary-operation-expression start-index="51" stop-index="65">
                    <left>
                        <column name="order_id" start-index="51" stop-index="58" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="62" stop-index="65" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_count">
        <from>
            <simple-table name="t_order" start-index="39" stop-index="45" />
        </from>
        <projections start-index="7" stop-index="32">
            <aggregation-distinct-projection type="COUNT" expression="COUNT(DISTINCT order_id)" distinct-inner-expression="order_id" alias="c" start-index="7" stop-index="30" />
        </projections>
        <where start-index="47" stop-index="67">
            <expr>
                <binary-operation-expression start-index="53" stop-index="67">
                    <left>
                        <column name="order_id" start-index="53" stop-index="60" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="64" stop-index="67" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_avg">
        <from>
            <simple-table name="t_order" start-index="35" stop-index="41" />
        </from>
        <projections start-index="7" stop-index="28">
            <aggregation-distinct-projection type="AVG" expression="AVG(DISTINCT order_id)" distinct-inner-expression="order_id" start-index="7" stop-index="28" />
        </projections>
        <where start-index="43" stop-index="63">
            <expr>
                <binary-operation-expression start-index="49" stop-index="63">
                    <left>
                        <column name="order_id" start-index="49" stop-index="56" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="60" stop-index="63" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_count_sum" >
        <from>
            <simple-table name="t_order" start-index="61" stop-index="67" />
        </from>
        <projections start-index="7" stop-index="54">
            <aggregation-distinct-projection type="COUNT" expression="COUNT(DISTINCT order_id)" distinct-inner-expression="order_id" start-index="7" stop-index="30" />
            <aggregation-distinct-projection type="SUM" expression="SUM(DISTINCT order_id)" distinct-inner-expression="order_id" start-index="33" stop-index="54" />
        </projections>
        <where start-index="69" stop-index="89">
            <expr>
                <binary-operation-expression start-index="75" stop-index="89">
                    <left>
                        <column name="order_id" start-index="75" stop-index="82" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="86" stop-index="89" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_single_count_group_by" >
        <from>
            <simple-table name="t_order" start-index="49" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="42">
            <column-projection name="order_id" start-index="7" stop-index="14" />
            <aggregation-distinct-projection type="COUNT" expression="COUNT(DISTINCT order_id)" distinct-inner-expression="order_id" alias="c" start-index="17" stop-index="40" />
        </projections>
        <where start-index="57" stop-index="77">
            <expr>
                <binary-operation-expression start-index="63" stop-index="77">
                    <left>
                        <column name="order_id" start-index="63" stop-index="70" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="74" stop-index="77" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <group-by>
            <column-item name="order_id" start-index="88" stop-index="95" />
        </group-by>
        <order-by>
            <column-item name="order_id" start-index="106" stop-index="113" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_count_group_by" >
        <from>
            <simple-table name="t_order" start-index="49" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="42">
            <aggregation-distinct-projection type="COUNT" expression="COUNT(DISTINCT order_id)" distinct-inner-expression="order_id" alias="c" start-index="7" stop-index="30" />
            <column-projection name="order_id" start-index="35" stop-index="42" />
        </projections>
        <group-by>
            <column-item name="order_id" start-index="66" stop-index="73" />
        </group-by>
        <order-by>
            <column-item name="order_id" start-index="84" stop-index="91" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_function">
        <from>
            <simple-table name="t_order_item" start-index="30" stop-index="41" />
        </from>
        <projections distinct-row="true" start-index="15" stop-index="23">
            <column-projection start-index="16" stop-index="22" name="item_id" />
        </projections>
        <order-by>
            <column-item name="item_id" start-index="52" stop-index="58" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_function_nulls_last">
        <from>
            <simple-table name="t_order_item" start-index="30" stop-index="41" />
        </from>
        <projections distinct-row="true" start-index="15" stop-index="23">
            <column-projection start-index="16" stop-index="22" name="item_id" />
        </projections>
        <order-by>
            <column-item name="item_id" start-index="52" stop-index="58" />
        </order-by>
    </select>

    <select sql-case-id="select_distinct_with_count_calculation" >
        <from>
            <simple-table name="t_order" start-index="49" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="42">
            <aggregation-distinct-projection type="COUNT" expression="COUNT(DISTINCT user_id + order_id)" distinct-inner-expression="user_id+order_id" alias="c" start-index="7" stop-index="40" />
        </projections>
        <where start-index="57" stop-index="77">
            <expr>
                <binary-operation-expression start-index="63" stop-index="77">
                    <left>
                        <column name="order_id" start-index="63" stop-index="70" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="74" stop-index="77" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_distinct_with_aggregation_functions" >
        <from>
            <simple-table  name="t_order" start-index="77" stop-index="83" />
        </from>
        <projections start-index="7" stop-index="69">
            <aggregation-distinct-projection type="SUM" expression="SUM(DISTINCT order_id)" distinct-inner-expression="order_id" start-index="7" stop-index="28" />
            <aggregation-distinct-projection type="COUNT" expression="count(DISTINCT order_id)" distinct-inner-expression="order_id" start-index="30" stop-index="53" />
            <aggregation-projection type="COUNT" expression="count(order_id)" start-index="55" stop-index="69" />
        </projections>
        <where start-index="85" stop-index="105">
            <expr>
                <binary-operation-expression start-index="91" stop-index="105">
                    <left>
                        <column name="order_id" start-index="91" stop-index="98" />
                    </left>
                    <operator>&lt;</operator>
                    <right>
                        <literal-expression value="1100" start-index="102" stop-index="105" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_schema" >
        <from>
            <simple-table name="t_order" start-index="14" stop-index="24">
                <owner name="db1" start-index="14" stop-index="16" />
            </simple-table>
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
    </select>

    <select sql-case-id="select_escape_with_single_quota" >
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="38">
            <expr>
                <binary-operation-expression start-index="28" stop-index="38">
                    <left>
                        <column name="status" start-index="28" stop-index="33" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="\'" start-index="35" stop-index="38" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_escape_with_double_quota" >
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="38">
            <expr>
                <binary-operation-expression start-index="28" stop-index="38">
                    <left>
                        <column name="status" start-index="28" stop-index="33" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="\&quot;" start-index="35" stop-index="38" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_block_comment" >
        <from>
            <simple-table name="t_order" start-index="83" stop-index="89" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="91" stop-index="106">
            <expr>
                <binary-operation-expression start-index="97" stop-index="106">
                    <left>
                        <column name="status" start-index="97" stop-index="102" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="104" stop-index="106" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <comment start-index="9" stop-index="38" text="/* this is &#x000D;&#x000A; block comment */" />
        <comment start-index="45" stop-index="81" text="/* this is another &#x000A; block comment */" />
    </select>

    <select sql-case-id="select_with_nested_block_comment" >
        <from>
            <simple-table name="t_order" start-index="83" stop-index="89" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <comment start-index="9" stop-index="76" text="/* this is &#x000D;&#x000A; /* this is another &#x000A; block comment */ block comment */" />
    </select>

    <select sql-case-id="select_with_single_comment" >
        <from>
            <simple-table name="t_order" start-index="78" stop-index="84" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="86" stop-index="101">
            <expr>
                <binary-operation-expression start-index="92" stop-index="101">
                    <left>
                        <column name="status" start-index="92" stop-index="97" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="99" stop-index="101" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <comment start-index="9" stop-index="37" text="-- this is an line comment &#x000D;&#x000A;" />
        <comment start-index="44" stop-index="76" text="-- this is another line comment &#x000A;" />
    </select>

    <select sql-case-id="select_with_single_comment_without_whitespace" >
        <from>
            <simple-table name="t_order" start-index="76" stop-index="82" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="84" stop-index="99">
            <expr>
                <binary-operation-expression start-index="90" stop-index="99">
                    <left>
                        <column name="status" start-index="90" stop-index="95" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="97" stop-index="99" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <comment start-index="9" stop-index="36" text="--this is an line comment &#x000D;&#x000A;" />
        <comment start-index="43" stop-index="74" text="--this is another line comment &#x000A;" />
    </select>

    <select sql-case-id="select_alias_as_single_quote_string">
        <from>
            <simple-table name="t_order" start-index="31" stop-index="37" />
        </from>
        <projections start-index="7" stop-index="24">
            <column-projection alias="status" name="status" start-index="7" stop-index="24" />
        </projections>
    </select>

    <select sql-case-id="select_alias_as_string_double_quote">
        <from>
            <simple-table name="t_order" start-index="31" stop-index="37" />
        </from>
        <projections start-index="7" stop-index="24">
            <column-projection name="status" alias="status" start-index="7" stop-index="24" />
        </projections>
    </select>

    <select sql-case-id="select_special_function_nested" parameters="12, 1000">
        <from>
            <simple-table name="t_order" start-index="48" stop-index="54" />
        </from>
        <projections start-index="7" stop-index="41">
            <aggregation-projection type="SUM" expression="sum(if(status=0, 1, 0))" alias="func_status" start-index="7" stop-index="29" />
        </projections>
        <where start-index="56" stop-index="89" literal-stop-index="93">
            <expr>
                <binary-operation-expression start-index="62" stop-index="89" literal-stop-index="93">
                    <left>
                        <binary-operation-expression start-index="62" stop-index="72" literal-stop-index="73">
                            <left>
                                <column name="user_id" start-index="62" stop-index="68" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="12" start-index="72" stop-index="73" />
                                <parameter-marker-expression parameter-index="0" start-index="72" stop-index="72" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="78" stop-index="89" literal-start-index="79" literal-stop-index="93">
                            <left>
                                <column name="order_id" start-index="78" stop-index="85" literal-start-index="79" literal-stop-index="86" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1000" start-index="90" stop-index="93" />
                                <parameter-marker-expression parameter-index="1" start-index="89" stop-index="89" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_interval_function" parameters="12, 1000">
        <from>
            <simple-table name="t_order" start-index="45" stop-index="51" />
        </from>
        <projections start-index="7" stop-index="38">
            <expression-projection text="INTERVAL(status,1,5)" alias="func_status" start-index="7" stop-index="38">
                <expr>
                    <function function-name="INTERVAL" alias="func_status" start-index="7" stop-index="26" text="INTERVAL(status,1,5)" >
                        <parameter>
                            <column name="status" start-index="16" stop-index="21" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="23" stop-index="23" />
                        </parameter>
                        <parameter>
                            <literal-expression value="5" start-index="25" stop-index="25" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="53" stop-index="86" literal-stop-index="90">
            <expr>
                <binary-operation-expression start-index="59" stop-index="86" literal-stop-index="90">
                    <left>
                        <binary-operation-expression start-index="59" stop-index="69" literal-stop-index="70">
                            <left>
                                <column name="user_id" start-index="59" stop-index="65" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="12" start-index="69" stop-index="70" />
                                <parameter-marker-expression parameter-index="0" start-index="69" stop-index="69" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="75" stop-index="86" literal-start-index="76" literal-stop-index="90">
                            <left>
                                <column name="order_id" start-index="75" stop-index="82" literal-start-index="76" literal-stop-index="83" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1000" start-index="87" stop-index="90" />
                                <parameter-marker-expression parameter-index="1" start-index="86" stop-index="86" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_left_function">
        <from>
            <simple-table name="t_order_item" start-index="44" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="37">
            <expression-projection text="CONCAT(LEFT(status, 7), 'test')" start-index="7" stop-index="37">
                <expr>
                    <function function-name="CONCAT" start-index="7" stop-index="37" text="CONCAT(LEFT(status, 7), 'test')">
                        <parameter>
                            <function function-name="LEFT" start-index="14" stop-index="28" text="LEFT(status, 7)">
                                <parameter>
                                    <column name="status" start-index="19" stop-index="24" />
                                </parameter>
                                <parameter>
                                    <literal-expression value="7" start-index="27" stop-index="27" />
                                </parameter>
                            </function>
                        </parameter>
                        <parameter>
                            <literal-expression value="test" start-index="31" stop-index="36" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="57" stop-index="74">
            <expr>
                <binary-operation-expression start-index="63" stop-index="74">
                    <left>
                        <column name="user_id" start-index="63" stop-index="69" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="10" start-index="73" stop-index="74" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_database">
        <projections start-index="7" stop-index="16">
            <expression-projection text="DATABASE()" start-index="7" stop-index="16">
                <expr>
                    <function function-name="DATABASE" start-index="7" stop-index="16" text="DATABASE()" />
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_mod_function">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="47">
            <expr>
                <binary-operation-expression start-index="28" stop-index="47">
                    <left>
                        <function function-name="MOD" start-index="28" stop-index="43" text="MOD(order_id, 1)">
                            <parameter>
                                <column name="order_id" start-index="32" stop-index="39" />
                            </parameter>
                            <parameter>
                                <literal-expression value="1" start-index="42" stop-index="42" />
                            </parameter>
                        </function>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="47" stop-index="47" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_date_format_function">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="79">
            <expr>
                <binary-operation-expression start-index="28" stop-index="79">
                    <left>
                        <function function-name="DATE_FORMAT" start-index="28" stop-index="64" text="DATE_FORMAT(current_date, '%Y-%m-%d')">
                            <parameter>
                                <function function-name="current_date" start-index="40" stop-index="51" text="current_date" />
                            </parameter>
                            <parameter>
                                <literal-expression value="%Y-%m-%d" start-index="54" stop-index="63" />
                            </parameter>
                        </function>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="2019-12-18" start-index="68" stop-index="79" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_spatial_function">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="106">
            <expr>
                <binary-operation-expression start-index="28" stop-index="106">
                    <left>
                        <function function-name="ST_DISTANCE_SPHERE" start-index="28" stop-index="101" text="ST_DISTANCE_SPHERE(POINT(113.358772, 23.1273723), POINT(user_id,order_id))">
                            <parameter>
                                <function function-name="POINT" start-index="47" stop-index="75" text="POINT(113.358772, 23.1273723)">
                                    <parameter>
                                        <literal-expression value="113.358772" start-index="53" stop-index="62" />
                                    </parameter>
                                    <parameter>
                                        <literal-expression value="23.1273723" start-index="65" stop-index="74" />
                                    </parameter>
                                </function>
                            </parameter>
                            <parameter>
                                <function function-name="POINT" start-index="78" stop-index="100" text="POINT(user_id,order_id)">
                                    <parameter>
                                        <column name="user_id" start-index="84" stop-index="90" />
                                    </parameter>
                                    <parameter>
                                        <column name="order_id" start-index="92" stop-index="99" />
                                    </parameter>
                                </function>
                            </parameter>
                        </function>
                    </left>
                    <operator>!=</operator>
                    <right>
                        <literal-expression value="0" start-index="106" stop-index="106" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_current_user">
        <projections start-index="7" stop-index="18">
            <expression-projection text="CURRENT_USER" start-index="7" stop-index="18" />
        </projections>
    </select>

    <select sql-case-id="select_with_match_against" parameters="'hello', 10">
        <from>
            <simple-table name="t_order_item" start-index="14" stop-index="25" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="27" stop-index="116" literal-stop-index="123">
            <expr>
                <binary-operation-expression start-index="33" stop-index="116" literal-stop-index="123">
                    <left>
                        <match-expression start-index="33" stop-index="106">
                            <columns>
                                <column name="description" start-index="39" stop-index="62">
                                    <owner name="t_order" start-index="39" stop-index="50" />
                                </column>
                            </columns>
                            <expr>
                                <literal-expression value="hello" start-index="74" stop-index="80" />
                                <parameter-marker-expression parameter-index="0" start-index="74" stop-index="74" />
                            </expr>
                        </match-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="106" stop-index="116" literal-start-index="112" literal-stop-index="123">
                            <left>
                                <column name="user_id" start-index="106" stop-index="112" literal-start-index="112" literal-stop-index="118" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="10" start-index="122" stop-index="123" />
                                <parameter-marker-expression parameter-index="1" start-index="116" stop-index="116" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_json_separator">
        <from>
            <simple-table name="tb_content_json" start-index="82" stop-index="98" alias="b" />
        </from>
        <projections start-index="7" stop-index="75">
            <expression-projection text="content_json->>'$.nation'" start-index="7" stop-index="41" alias="nation" />
            <expression-projection text="content_json->>'$.title'" start-index="43" stop-index="75" alias="title" />
        </projections>
        <where start-index="100" stop-index="119">
            <expr>
                <binary-operation-expression start-index="106" stop-index="119">
                    <left>
                        <column name="content_id" start-index="106" stop-index="117">
                            <owner name="b" start-index="106" stop-index="106" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="119" stop-index="119" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_json_value_return_type">
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="22" stop-index="86">
            <expr>
                <binary-operation-expression start-index="28" stop-index="86">
                    <left>
                        <function start-index="28" stop-index="77" function-name="JSON_VALUE" text="JSON_VALUE(items, '$.name' RETURNING VARCHAR(100))">
                            <parameter>
                                <column name="items" start-index="39" stop-index="43" />
                            </parameter>
                            <parameter>
                                <list-expression start-index="46" stop-index="76" >
                                    <items>
                                        <literal-expression start-index="46" stop-index="53" value="'$.name'" />
                                    </items>
                                    <items>
                                        <literal-expression start-index="55" stop-index="63" value="RETURNING" />
                                    </items>
                                    <items>
                                        <data-type value="VARCHAR" start-index="65" stop-index="76" />
                                    </items>
                                </list-expression>
                            </parameter>
                        </function>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="jack" start-index="81" stop-index="86" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_convert_function1">
        <from>
            <simple-table name="t_order" start-index="70" stop-index="76" />
        </from>
        <projections start-index="7" stop-index="63">
            <expression-projection text="CONVERT(SUBSTRING(content, 5) , SIGNED)" alias="signed_content" start-index="7" stop-index="63">
                <expr>
                    <function function-name="CONVERT" start-index="7" stop-index="45" text="CONVERT(SUBSTRING(content, 5) , SIGNED)">
                        <parameter>
                            <function function-name="SUBSTRING" start-index="15" stop-index="35" text="SUBSTRING(content, 5)">
                                <parameter>
                                    <column name="content" start-index="25" stop-index="31" />
                                </parameter>
                                <parameter>
                                    <literal-expression value="5" start-index="34" stop-index="34" />
                                </parameter>
                            </function>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="78" stop-index="95">
            <expr>
                <binary-operation-expression start-index="84" stop-index="95">
                    <left>
                        <column name="order_id" start-index="84" stop-index="91" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="95" stop-index="95" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_convert_function2">
        <projections start-index="7" stop-index="246">
            <column-projection name="sequence_name" start-index="7" stop-index="19" />
            <column-projection name="sequence_catalog" start-index="22" stop-index="37" />
            <column-projection name="sequence_schema" start-index="40" stop-index="54" />
            <expression-projection alias="start_value" text="convert( bigint, start_value )" start-index="57" stop-index="101">
                <expr>
                    <function function-name="convert" text="convert( bigint, start_value )" start-index="57" stop-index="86">
                        <parameter>
                            <data-type value="bigint" start-index="66" stop-index="71" />
                        </parameter>
                        <parameter>
                            <column name="start_value" start-index="74" stop-index="84" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection alias="minimum_value" text="convert( bigint, minimum_value )" start-index="104" stop-index="152">
                <expr>
                    <function function-name="convert" text="convert( bigint, minimum_value )" start-index="104" stop-index="135">
                        <parameter>
                            <data-type value="bigint" start-index="113" stop-index="118" />
                        </parameter>
                        <parameter>
                            <column name="minimum_value" start-index="121" stop-index="133" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection alias="maximum_value" text="convert( bigint, maximum_value )" start-index="155" stop-index="203">
                <expr>
                    <function function-name="convert" text="convert( bigint, maximum_value )" start-index="155" stop-index="186">
                        <parameter>
                            <data-type value="bigint" start-index="164" stop-index="169" />
                        </parameter>
                        <parameter>
                            <column name="maximum_value" start-index="172" stop-index="184" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection alias="increment" text="convert( bigint, increment )" start-index="206" stop-index="246">
                <expr>
                    <function function-name="convert" text="convert( bigint, increment )" start-index="206" stop-index="233">
                        <parameter>
                            <data-type value="bigint" start-index="215" stop-index="220" />
                        </parameter>
                        <parameter>
                            <column name="increment" start-index="223" stop-index="231" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="SEQUENCES" start-index="253" stop-index="280">
                <owner name="INFORMATION_SCHEMA" start-index="253" stop-index="270" />
            </simple-table>
        </from>
    </select>

    <select sql-case-id="select_with_convert_function3">
        <projections start-index="7" stop-index="37">
            <expression-projection text="CONVERT(NVARCHAR, GETDATE(), 0)" start-index="7" stop-index="37">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(NVARCHAR, GETDATE(), 0)" start-index="7" stop-index="37">
                        <parameter>
                            <data-type value="NVARCHAR" start-index="15" stop-index="22" />
                        </parameter>
                        <parameter>
                            <function function-name="GETDATE" text="GETDATE()" start-index="25" stop-index="33" />
                        </parameter>
                        <parameter>
                            <literal-expression value="0" start-index="36" stop-index="36" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_function4">
        <projections start-index="7" stop-index="61">
            <expression-projection text="CONVERT(DECIMAL(10, 5), CONVERT(VARBINARY(20), @myval))" start-index="7" stop-index="61">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(DECIMAL(10, 5), CONVERT(VARBINARY(20), @myval))" start-index="7" stop-index="61">
                        <parameter>
                            <data-type value="DECIMAL" start-index="15" stop-index="28" />
                        </parameter>
                        <parameter>
                            <function function-name="CONVERT" text="CONVERT(VARBINARY(20), @myval)" start-index="31" stop-index="60">
                                <parameter>
                                    <data-type value="VARBINARY" start-index="39" stop-index="51" />
                                </parameter>
                                <parameter>
                                    <column name="@myval" start-index="54" stop-index="59" />
                                </parameter>
                            </function>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_function5">
        <projections start-index="7" stop-index="69">
            <expression-projection alias="Style 0, character to binary" text="CONVERT(BINARY(8), 'Name', 0)" start-index="7" stop-index="69">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(BINARY(8), 'Name', 0)" start-index="7" stop-index="35">
                        <parameter>
                            <data-type value="BINARY" start-index="15" stop-index="23" />
                        </parameter>
                        <parameter>
                            <literal-expression value="Name" start-index="26" stop-index="31" />
                        </parameter>
                        <parameter>
                            <literal-expression value="0" start-index="34" stop-index="34" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_xml1">
        <projections start-index="7" stop-index="43">
            <expression-projection text="CONVERT(XML, '&lt;root&gt;&lt;child/&gt;&lt;/root&gt;')" start-index="7" stop-index="43">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(XML, '&lt;root&gt;&lt;child/&gt;&lt;/root&gt;')" start-index="7" stop-index="43">
                        <parameter>
                            <data-type value="XML" start-index="15" stop-index="17" />
                        </parameter>
                        <parameter>
                            <literal-expression value="&lt;root&gt;&lt;child/&gt;&lt;/root&gt;" start-index="20" stop-index="42" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_xml2">
        <projections start-index="7" stop-index="65">
            <expression-projection text="CONVERT(XML, '&lt;root&gt;          &lt;child/&gt;         &lt;/root&gt;', 1)" start-index="7" stop-index="65">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(XML, '&lt;root&gt;          &lt;child/&gt;         &lt;/root&gt;', 1)" start-index="7" stop-index="65">
                        <parameter>
                            <data-type value="XML" start-index="15" stop-index="17" />
                        </parameter>
                        <parameter>
                            <literal-expression value="&lt;root&gt;          &lt;child/&gt;         &lt;/root&gt;" start-index="20" stop-index="61" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="64" stop-index="64" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_cast_convert_function">
        <projections start-index="7" stop-index="149">
            <expression-projection alias="UnconvertedDateTime" text="GETDATE()" start-index="7" stop-index="38">
                <expr>
                    <function function-name="GETDATE" text="GETDATE()" start-index="7" stop-index="15" />
                </expr>
            </expression-projection>
            <expression-projection alias="UsingCast" text="CAST(GETDATE() AS NVARCHAR(30))" start-index="41" stop-index="84">
                <expr>
                    <function function-name="CAST" text="CAST(GETDATE() AS NVARCHAR(30))" start-index="41" stop-index="71">
                        <parameter>
                            <function function-name="GETDATE" text="GETDATE()" start-index="46" stop-index="54" />
                        </parameter>
                        <parameter>
                            <data-type value="NVARCHAR" start-index="59" stop-index="70" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection alias="UsingConvertTo_ISO8601" text="CONVERT(NVARCHAR(30), GETDATE(), 126)" start-index="87" stop-index="149">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(NVARCHAR(30), GETDATE(), 126)" start-index="87" stop-index="123">
                        <parameter>
                            <data-type value="NVARCHAR" start-index="95" stop-index="106" />
                        </parameter>
                        <parameter>
                            <function function-name="GETDATE" text="GETDATE()" start-index="109" stop-index="117" />
                        </parameter>
                        <parameter>
                            <literal-expression value="126" start-index="120" stop-index="122" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_cast_convert_datetime">
        <projections start-index="7" stop-index="187">
            <expression-projection alias="UnconvertedText" text="2006-04-25T15:50:59.997" start-index="7" stop-index="50">
                <expr>
                    <literal-expression value="2006-04-25T15:50:59.997" start-index="7" stop-index="31" />
                </expr>
            </expression-projection>
            <expression-projection alias="UsingCast" text="CAST('2006-04-25T15:50:59.997' AS DATETIME)" start-index="53" stop-index="108">
                <expr>
                    <function function-name="CAST" text="CAST('2006-04-25T15:50:59.997' AS DATETIME)" start-index="53" stop-index="95">
                        <parameter>
                            <literal-expression value="2006-04-25T15:50:59.997" start-index="58" stop-index="82" />
                        </parameter>
                        <parameter>
                            <data-type value="DATETIME" start-index="87" stop-index="94" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection alias="UsingConvertFrom_ISO8601" text="CONVERT(DATETIME, '2006-04-25T15:50:59.997', 126)" start-index="111" stop-index="187">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(DATETIME, '2006-04-25T15:50:59.997', 126)" start-index="111" stop-index="159">
                        <parameter>
                            <data-type value="DATETIME" start-index="119" stop-index="126" />
                        </parameter>
                        <parameter>
                            <literal-expression value="2006-04-25T15:50:59.997" start-index="129" stop-index="153" />
                        </parameter>
                        <parameter>
                            <literal-expression value="126" start-index="156" stop-index="158" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_hex1">
        <projections start-index="7" stop-index="71">
            <expression-projection alias="Style 0, binary to character" text="CONVERT(CHAR(8), 0x4E616d65, 0)" start-index="7" stop-index="71">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(CHAR(8), 0x4E616d65, 0)" start-index="7" stop-index="37">
                        <parameter>
                            <data-type value="CHAR" start-index="15" stop-index="21" />
                        </parameter>
                        <parameter>
                            <common-expression literal-text="0x4E616d65" start-index="24" stop-index="33" />
                        </parameter>
                        <parameter>
                            <literal-expression value="0" start-index="36" stop-index="36" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_hex2">
        <projections start-index="7" stop-index="71">
            <expression-projection alias="Style 1, binary to character" text="CONVERT(CHAR(8), 0x4E616d65, 1)" start-index="7" stop-index="71">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(CHAR(8), 0x4E616d65, 1)" start-index="7" stop-index="37">
                        <parameter>
                            <data-type value="CHAR" start-index="15" stop-index="21" />
                        </parameter>
                        <parameter>
                            <common-expression literal-text="0x4E616d65" start-index="24" stop-index="33" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="36" stop-index="36" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_convert_hex3">
        <projections start-index="7" stop-index="75">
            <expression-projection alias="Style 1, character to binary" text="CONVERT(BINARY(4), '0x4E616D65', 1)" start-index="7" stop-index="75">
                <expr>
                    <function function-name="CONVERT" text="CONVERT(BINARY(4), '0x4E616D65', 1)" start-index="7" stop-index="41">
                        <parameter>
                            <data-type value="BINARY" start-index="15" stop-index="23" />
                        </parameter>
                        <parameter>
                            <literal-expression value="0x4E616D65" start-index="26" stop-index="37" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="40" stop-index="40" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_json_extract">
        <from>
            <simple-table name="tb_content_json" start-index="70" stop-index="84" />
        </from>
        <projections start-index="7" stop-index="63">
            <expression-projection text="content_json::json->'title'" start-index="7" stop-index="33" />
            <expression-projection text="content_json::json->'nation'" start-index="36" stop-index="63" />
        </projections>
        <where start-index="86" stop-index="105">
            <expr>
                <binary-operation-expression start-index="92" stop-index="105">
                    <left>
                        <column name="content_id" start-index="92" stop-index="101" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="105" stop-index="105" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_json_extract_text">
        <from>
            <simple-table name="tb_content_json" start-index="14" stop-index="28" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="30" stop-index="72">
            <expr>
                <binary-operation-expression start-index="36" stop-index="72">
                    <left>
                        <common-expression literal-text="content_json::json->>'nation'" start-index="36" stop-index="64" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="CHINA" start-index="66" stop-index="72" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_json_path_extract">
        <from>
            <simple-table name="tb_content_json" start-index="46" stop-index="60" />
        </from>
        <projections start-index="7" stop-index="39">
            <expression-projection text="content_json::json#>'{keyword,1}'" start-index="7" stop-index="39" />
        </projections>
    </select>

    <select sql-case-id="select_with_json_path_extract_text">
        <from>
            <simple-table name="tb_content_json" start-index="47" stop-index="61" />
        </from>
        <projections start-index="7" stop-index="40">
            <expression-projection text="content_json::json#>>'{keyword,1}'" start-index="7" stop-index="40" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_contain_right">
        <from>
            <simple-table name="tb_content_json" start-index="58" stop-index="72" />
        </from>
        <projections start-index="7" stop-index="51">
            <expression-projection text="content_json::jsonb@>'{&amp;title&amp;:&amp;abc&amp;}'::jsonb" start-index="7" stop-index="51" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_contain_left">
        <from>
            <simple-table name="tb_content_json" start-index="58" stop-index="72" />
        </from>
        <projections start-index="7" stop-index="51">
            <expression-projection text="'{&amp;title&amp;:&amp;abc&amp;}'::jsonb&lt;@content_json::jsonb" start-index="7" stop-index="51" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_contain_top_key">
        <from>
            <simple-table name="tb_content_json" start-index="40" stop-index="54" />
        </from>
        <projections start-index="7" stop-index="33">
            <expression-projection text="content_json::jsonb?'title'" start-index="7" stop-index="33" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_contain_any_top_key">
        <from>
            <simple-table name="tb_content_json" start-index="57" stop-index="71" />
        </from>
        <projections start-index="7" stop-index="50">
            <expression-projection text="content_json::jsonb?|array['title','nation']" start-index="7" stop-index="50" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_contain_all_top_key">
        <from>
            <simple-table name="tb_content_json" start-index="57" stop-index="71" />
        </from>
        <projections start-index="7" stop-index="50">
            <expression-projection text="content_json::jsonb?&amp;array['title','nation']" start-index="7" stop-index="50" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_concat">
        <from>
            <simple-table name="tb_content_json" start-index="56" stop-index="70" />
        </from>
        <projections start-index="7" stop-index="49">
            <expression-projection text="content_json::jsonb||'{&quot;price&quot;:999}'::jsonb" start-index="7" stop-index="49" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_delete">
        <from>
            <simple-table name="tb_content_json" start-index="40" stop-index="54" />
        </from>
        <projections start-index="7" stop-index="33">
            <expression-projection text="content_json::jsonb-'title'" start-index="7" stop-index="33" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_path_delete">
        <from>
            <simple-table name="tb_content_json" start-index="43" stop-index="57" />
        </from>
        <projections start-index="7" stop-index="36">
            <expression-projection text="content_json::jsonb#-'{title}'" start-index="7" stop-index="36" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_path_contain_any_value">
        <from>
            <simple-table name="tb_content_json" start-index="59" stop-index="73" />
        </from>
        <projections start-index="7" stop-index="52">
            <expression-projection text="content_json::jsonb @?'$.keyword[*]?(@==&quot;ss&quot;)'" start-index="7" stop-index="52" />
        </projections>
    </select>

    <select sql-case-id="select_with_jsonb_path_predicate_check">
        <from>
            <simple-table name="tb_content_json" start-index="54" stop-index="68" />
        </from>
        <projections start-index="7" stop-index="47">
            <expression-projection text="content_json::jsonb@@'$.keyword[*]==&quot;ss&quot;'" start-index="7" stop-index="47" />
        </projections>
    </select>

    <select sql-case-id="select_with_assignment_operator">
        <projections start-index="7" stop-index="31">
            <expression-projection text="@rn := 1" start-index="7" stop-index="14" />
            <expression-projection text="@now_code := ''" start-index="17" stop-index="31" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="38" stop-index="44" />
        </from>
    </select>

    <select sql-case-id="select_with_assignment_operator_and_keyword">
        <projections start-index="7" stop-index="29">
            <expression-projection text="@KEY := ''" start-index="7" stop-index="16" />
            <expression-projection text="@num := 123" start-index="19" stop-index="29" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="36" stop-index="42" />
        </from>
    </select>

    <select sql-case-id="select_from_dual" >
        <from>
            <simple-table name="DUAL" start-index="14" stop-index="17" />
        </from>
        <projections start-index="7" stop-index="7">
            <expression-projection text="1" start-index="7" stop-index="7" />
        </projections>
    </select>
    
    <select sql-case-id="select_with_cast_as_signed">
        <from>
            <simple-table name="t_order" start-index="45" stop-index="51" />
        </from>
        <projections start-index="7" stop-index="38">
            <column-projection name="user_id" start-index="7" stop-index="13" />
            <expression-projection text="CAST(order_id AS SIGNED)" start-index="15" stop-index="38">
                <expr>
                    <function function-name="CAST" start-index="15" stop-index="38" text="CAST(order_id AS SIGNED)" >
                        <parameter>
                            <column name="order_id" start-index="20" stop-index="27" />
                        </parameter>
                        <parameter>
                            <data-type value="SIGNED" start-index="32" stop-index="37" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_cast_as_unsigned">
        <from>
            <simple-table name="t_order" start-index="47" stop-index="53" />
        </from>
        <projections start-index="7" stop-index="40">
            <expression-projection text="CAST(order_id AS UNSIGNED)" start-index="7" stop-index="32">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="32" text="CAST(order_id AS UNSIGNED)" >
                        <parameter>
                            <column name="order_id" start-index="12" stop-index="19" />
                        </parameter>
                        <parameter>
                            <data-type value="UNSIGNED" start-index="24" stop-index="31" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <column-projection name="user_id" start-index="34" stop-index="40" />
        </projections>
    </select>

    <select sql-case-id="select_with_cast_as_signed_int">
        <from>
            <simple-table name="t_order" start-index="49" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="42">
            <column-projection name="user_id" start-index="7" stop-index="13" />
            <expression-projection text="CAST(order_id AS SIGNED INT)" start-index="15" stop-index="42">
                <expr>
                    <function function-name="CAST" start-index="15" stop-index="42" text="CAST(order_id AS SIGNED INT)" >
                        <parameter>
                            <column name="order_id" start-index="20" stop-index="27" />
                        </parameter>
                        <parameter>
                            <data-type value="SIGNED INT" start-index="32" stop-index="41" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_cast_as_unsigned_int">
        <from>
            <simple-table name="t_order" start-index="51" stop-index="57" />
        </from>
        <projections start-index="7" stop-index="44">
            <expression-projection text="CAST(order_id AS UNSIGNED INT)" start-index="7" stop-index="36">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="36" text="CAST(order_id AS UNSIGNED INT)" >
                        <parameter>
                            <column name="order_id" start-index="12" stop-index="19" />
                        </parameter>
                        <parameter>
                            <data-type value="UNSIGNED INT" start-index="24" stop-index="35" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <column-projection name="user_id" start-index="38" stop-index="44" />
        </projections>
    </select>
    
    <select sql-case-id="select_with_cast_as_signed_integer">
        <from>
            <simple-table name="t_order" start-index="53" stop-index="59" />
        </from>
        <projections start-index="7" stop-index="46">
            <column-projection name="user_id" start-index="7" stop-index="13" />
            <expression-projection text="CAST(order_id AS SIGNED INTEGER)" start-index="15" stop-index="46">
                <expr>
                    <function function-name="CAST" start-index="15" stop-index="46" text="CAST(order_id AS SIGNED INTEGER)" >
                        <parameter>
                            <column name="order_id" start-index="20" stop-index="27" />
                        </parameter>
                        <parameter>
                            <data-type value="SIGNED INTEGER" start-index="32" stop-index="45" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_cast_as_unsigned_integer">
        <from>
            <simple-table name="t_order" start-index="55" stop-index="61" />
        </from>
        <projections start-index="7" stop-index="48">
            <expression-projection text="CAST(order_id AS UNSIGNED INTEGER)" start-index="7" stop-index="40">
                <expr>
                    <function function-name="CAST" start-index="7" stop-index="40" text="CAST(order_id AS UNSIGNED INTEGER)" >
                        <parameter>
                            <column name="order_id" start-index="12" stop-index="19" />
                        </parameter>
                        <parameter>
                            <data-type value="UNSIGNED INTEGER" start-index="24" stop-index="39" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <column-projection name="user_id" start-index="42" stop-index="48" />
        </projections>
    </select>
    
    <select sql-case-id="select_with_simple_table" >
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="employees" start-index="14" stop-index="22" />
        </from>
        <where start-index="24" stop-index="47">
            <expr>
                <binary-operation-expression start-index="30" stop-index="47">
                    <left>
                        <column name="department_id" start-index="30" stop-index="42" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="30" start-index="46" stop-index="47" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="last_name" start-index="58" stop-index="66" />
        </order-by>
    </select>

    <select sql-case-id="select_with_binding_tables_with_subquery_without_join">
        <from>
            <join-table join-type="COMMA">
                <left>
                    <subquery-table alias="a" start-index="119" stop-index="219">
                        <subquery>
                            <select>
                                <projections start-index="127" stop-index="178">
                                    <column-projection name="department_id" start-index="127" stop-index="139" />
                                    <aggregation-projection type="COUNT" alias="num_emp" expression="COUNT(*)" start-index="142" stop-index="149" />
                                    <aggregation-projection type="SUM" alias="sal_sum" expression="SUM(salary)" start-index="160" stop-index="170" />
                                </projections>
                                <from>
                                    <simple-table name="employees" start-index="185" stop-index="193" />
                                </from>
                                <group-by>
                                    <column-item name="department_id" start-index="204" stop-index="216" />
                                </group-by>
                            </select>
                        </subquery>
                    </subquery-table>
                </left>
                <right>
                    <subquery-table alias="b" start-index="222" stop-index="290">
                        <subquery>
                            <select>
                                <projections start-index="230" stop-index="272">
                                    <aggregation-projection type="COUNT" alias="total_count" expression="COUNT(*)" start-index="230" stop-index="237" />
                                    <aggregation-projection type="SUM" alias="total_sal" expression="SUM(salary)" start-index="252" stop-index="262" />
                                </projections>
                                <from>
                                    <simple-table name="employees" start-index="279" stop-index="287" />
                                </from>
                            </select>
                        </subquery>
                    </subquery-table>
                </right>
            </join-table>
        </from>
        <projections start-index="7" stop-index="107">
            <column-projection name="department_id" alias="Department" start-index="7" stop-index="34">
                <owner name="a" start-index="7" stop-index="7" />
            </column-projection>
            <expression-projection text="a.num_emp/b.total_count" alias="%_Employees" start-index="37" stop-index="73" />
            <expression-projection text="a.sal_sum/b.total_sal" alias="%_Salary" start-index="76" stop-index="107" />
        </projections>
        <order-by>
            <column-item name="department_id" start-index="301" stop-index="315">
                <owner name="a" start-index="301" stop-index="301" />
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_with_partitioned_table" >
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="sales" alias="s" start-index="14" stop-index="46" />
        </from>
        <where start-index="48" stop-index="73">
            <expr>
                <binary-operation-expression start-index="54" stop-index="73">
                    <left>
                        <column name="amount_sold" start-index="54" stop-index="66" >
                            <owner name="s" start-index="54" stop-index="54" />
                        </column>
                    </left>
                    <operator>&gt;</operator>
                    <right>
                        <literal-expression value="1500" start-index="70" stop-index="73" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="cust_id" start-index="84" stop-index="90" />
            <column-item name="time_id" start-index="93" stop-index="99" />
            <column-item name="channel_id" start-index="102" stop-index="111" />
        </order-by>
    </select>

    <select sql-case-id="select_with_binding_tables_without_join">
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="employees" start-index="74" stop-index="82" />
                </left>
                <right>
                    <simple-table name="departments" start-index="85" stop-index="95" />
                </right>
            </join-table>
        </from>
        <projections start-index="7" stop-index="67">
            <column-projection name="last_name" start-index="7" stop-index="15" />
            <column-projection name="job_id" start-index="18" stop-index="23" />
            <column-projection name="department_id" start-index="26" stop-index="50">
                <owner name="departments" start-index="26" stop-index="36" />
            </column-projection>
            <column-projection name="department_name" start-index="53" stop-index="67" />
        </projections>
        <where start-index="97" stop-index="153">
            <expr>
                <binary-operation-expression start-index="103" stop-index="153">
                    <left>
                        <column name="department_id" start-index="103" stop-index="125" >
                            <owner name="employees" start-index="103" stop-index="111" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <column name="department_id" start-index="129" stop-index="153" >
                            <owner name="departments" start-index="129" stop-index="139" />
                        </column>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="last_name" start-index="164" stop-index="172" />
            <column-item name="job_id" start-index="175" stop-index="180" />
        </order-by>
    </select>

    <select sql-case-id="select_with_lateral_clause">
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="employees" alias="e" start-index="14" stop-index="24" />
                </left>
                <right>
                    <subquery-table start-index="34" stop-index="102">
                        <subquery>
                            <select>
                                <projections start-index="42" stop-index="42">
                                    <shorthand-projection start-index="42" stop-index="42" />
                                </projections>
                                <from>
                                    <simple-table name="departments" alias="d" start-index="49" stop-index="61" />
                                </from>
                                <where start-index="63" stop-index="101">
                                    <expr>
                                        <binary-operation-expression start-index="69" stop-index="101">
                                            <left>
                                                <column name="department_id" start-index="69" stop-index="83">
                                                    <owner name="e" start-index="69" stop-index="69" />
                                                </column>
                                            </left>
                                            <operator>=</operator>
                                            <right>
                                                <column name="department_id" start-index="87" stop-index="101">
                                                    <owner name="d" start-index="87" stop-index="87" />
                                                </column>
                                            </right>
                                        </binary-operation-expression>
                                    </expr>
                                </where>
                            </select>
                        </subquery>
                    </subquery-table>
                </right>
            </join-table>
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
    </select>

    <select sql-case-id="select_with_containers">
        <from>
            <simple-table name="employees" start-index="25" stop-index="33" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
    </select>

    <select sql-case-id="select_with_hierarchical_connect_by">
        <from>
            <simple-table name="employees" start-index="47" stop-index="55" />
        </from>
        <projections start-index="7" stop-index="40">
            <column-projection name="last_name" start-index="7" stop-index="15" />
            <column-projection name="employee_id" start-index="18" stop-index="28" />
            <column-projection name="manager_id" start-index="31" stop-index="40" />
        </projections>
        <order-by>
            <column-item name="last_name" start-index="102" stop-index="110" />
        </order-by>
    </select>

    <select sql-case-id="select_current_date_function_with_shorthand_regular_function">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <where start-index="22" stop-index="46">
            <expr>
                <binary-operation-expression start-index="28" stop-index="46">
                    <left>
                        <column name="date" start-index="28" stop-index="31" />
                    </left>
                    <right>
                        <function function-name="CURRENT_DATE" start-index="35" stop-index="46" text="CURRENT_DATE" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_current_date_function_with_complete_regular_function">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <where start-index="22" stop-index="48">
            <expr>
                <binary-operation-expression start-index="28" stop-index="48">
                    <left>
                        <column name="date" start-index="28" stop-index="31" />
                    </left>
                    <right>
                        <function function-name="CURRENT_DATE" start-index="35" stop-index="48" text="CURRENT_DATE()" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_current_time_function_with_shorthand_regular_function">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <where start-index="22" stop-index="46">
            <expr>
                <binary-operation-expression start-index="28" stop-index="46">
                    <left>
                        <column name="time" start-index="28" stop-index="31" />
                    </left>
                    <right>
                        <function function-name="CURRENT_TIME" start-index="35" stop-index="46" text="CURRENT_TIME" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_current_time_function_with_complete_regular_function">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="14" stop-index="20" />
        </from>
        <where start-index="22" stop-index="48">
            <expr>
                <binary-operation-expression start-index="28" stop-index="48">
                    <left>
                        <column name="time" start-index="28" stop-index="31" />
                    </left>
                    <right>
                        <function function-name="CURRENT_TIME" start-index="35" stop-index="48" text="CURRENT_TIME()" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_model_partition_dimension">
        <from>
            <simple-table name="sales_view_ref" start-index="35" stop-index="48" />
        </from>
        <projections start-index="7" stop-index="28">
            <column-projection name="country" start-index="7" stop-index="13" />
            <column-projection name="prod" start-index="16" stop-index="19" />
            <column-projection name="year" start-index="22" stop-index="25" />
            <column-projection name="s" start-index="28" stop-index="28" />
        </projections>
        <model start-index="50" stop-index="318">
            <cell-assignment-column name="s" start-index="182" stop-index="182" />
            <cell-assignment-column name="s" start-index="265" stop-index="265" />
        </model>
        <order-by>
            <column-item name="country" start-index="329" stop-index="335" />
            <column-item name="prod" start-index="338" stop-index="341" />
            <column-item name="year" start-index="344" stop-index="347" />
        </order-by>
    </select>

    <select sql-case-id="select_with_model_dimension">
        <from>
            <subquery-table start-index="38" stop-index="118">
                <subquery>
                    <select>
                        <from start-index="81" stop-index="94">
                            <simple-table name="sales_view_ref" start-index="81" stop-index="94" />
                        </from>
                        <projections start-index="46" stop-index="74">
                            <column-projection name="country" start-index="46" stop-index="52" />
                            <column-projection name="year" start-index="55" stop-index="58" />
                            <aggregation-projection type="SUM" alias="sale" expression="SUM(sale)" start-index="61" stop-index="69" />
                        </projections>
                        <group-by>
                            <column-item name="country" start-index="105" stop-index="111" />
                            <column-item name="year" start-index="114" stop-index="117" />
                        </group-by>
                    </select>
                </subquery>
            </subquery-table>
        </from>
        <projections start-index="7" stop-index="31">
            <column-projection name="country" start-index="7" stop-index="13" />
            <column-projection name="year" start-index="16" stop-index="19" />
            <column-projection name="sale" start-index="22" stop-index="25" />
            <column-projection name="csum" start-index="28" stop-index="31" />
        </projections>
        <model start-index="120" stop-index="279">
            <cell-assignment-column name="csum" start-index="186" stop-index="189" />
        </model>
        <order-by>
            <column-item name="country" start-index="290" stop-index="296" />
            <column-item name="year" start-index="299" stop-index="302" />
        </order-by>
    </select>

    <select sql-case-id="select_with_model_with_single_column_for_loop">
        <from>
            <simple-table name="sales_view" start-index="78" stop-index="87" />
        </from>
        <projections start-index="7" stop-index="71" literal-start-index="7" literal-stop-index="71">
            <column-projection name="year" start-index="61" stop-index="64" literal-start-index="61" literal-stop-index="64" />
            <column-projection name="sales" start-index="67" stop-index="71" literal-start-index="67" literal-stop-index="71" />
            <expression-projection text="SUBSTR(country,1,20)" alias="country" start-index="7" stop-index="34" literal-start-index="7" literal-stop-index="34">
                <literalText>SUBSTR(country,1,20)</literalText>
                <expr>
                    <function function-name="SUBSTR" text="SUBSTR(country,1,20)" start-index="7" stop-index="26" literal-start-index="7" literal-stop-index="26">
                        <parameter>
                            <column name="country" start-index="14" stop-index="20" literal-start-index="14" literal-stop-index="20" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="22" stop-index="22" literal-start-index="22" literal-stop-index="22" />
                        </parameter>
                        <parameter>
                            <literal-expression value="20" start-index="24" stop-index="25" literal-start-index="24" literal-stop-index="25" />
                        </parameter>
                        <literalText>SUBSTR(country,1,20)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="SUBSTR(prod,1,15)" alias="prod" start-index="37" stop-index="58" literal-start-index="37" literal-stop-index="58">
                <literalText>SUBSTR(prod,1,15)</literalText>
                <expr>
                    <function function-name="SUBSTR" text="SUBSTR(prod,1,15)" start-index="37" stop-index="53" literal-start-index="37" literal-stop-index="53">
                        <parameter>
                            <column name="prod" start-index="44" stop-index="47" literal-start-index="44" literal-stop-index="47" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="49" stop-index="49" literal-start-index="49" literal-stop-index="49" />
                        </parameter>
                        <parameter>
                            <literal-expression value="15" start-index="51" stop-index="52" literal-start-index="51" literal-stop-index="52" />
                        </parameter>
                        <literalText>SUBSTR(prod,1,15)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="89" stop-index="109">
            <expr>
                <binary-operation-expression start-index="95" stop-index="109">
                    <left>
                        <column name="country" start-index="95" stop-index="101" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="Italy" start-index="103" stop-index="109" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <model start-index="111" stop-index="302">
            <cell-assignment-column name="sales" start-index="215" stop-index="219" />
            <cell-assignment-column name="prod" start-index="225" stop-index="228" />
        </model>
        <order-by>
            <column-item name="country" start-index="313" stop-index="319" />
            <column-item name="prod" start-index="322" stop-index="325" />
            <column-item name="year" start-index="328" stop-index="331" />
        </order-by>
    </select>

    <select sql-case-id="select_with_model_with_reference_model">
        <from>
            <simple-table name="sales_view" start-index="72" stop-index="81" />
        </from>
        <projections start-index="7" stop-index="65" literal-start-index="7" literal-stop-index="65">
            <column-projection name="year" start-index="37" stop-index="40" literal-start-index="37" literal-stop-index="40" />
            <column-projection name="localsales" start-index="43" stop-index="52" literal-start-index="43" literal-stop-index="52" />
            <column-projection name="dollarsales" start-index="55" stop-index="65" literal-start-index="55" literal-stop-index="65" />
            <expression-projection text="SUBSTR(country,1,20)" alias="country" start-index="7" stop-index="34" literal-start-index="7" literal-stop-index="34">
                <literalText>SUBSTR(country,1,20)</literalText>
                <expr>
                    <function function-name="SUBSTR" text="SUBSTR(country,1,20)" start-index="7" stop-index="26" literal-start-index="7" literal-stop-index="26">
                        <parameter>
                            <column name="country" start-index="14" stop-index="20" literal-start-index="14" literal-stop-index="20" />
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="22" stop-index="22" literal-start-index="22" literal-stop-index="22" />
                        </parameter>
                        <parameter>
                            <literal-expression value="20" start-index="24" stop-index="25" literal-start-index="24" literal-stop-index="25" />
                        </parameter>
                        <literalText>SUBSTR(country,1,20)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="83" stop-index="119">
            <expr>
                <in-expression start-index="89" stop-index="119">
                    <not>false</not>
                    <left>
                        <column name="country" start-index="89" stop-index="95" />
                    </left>
                    <right>
                        <list-expression start-index="100" stop-index="119">
                            <items>
                                <literal-expression value="Canada" start-index="101" stop-index="108" />
                            </items>
                            <items>
                                <literal-expression value="Brazil" start-index="111" stop-index="118" />
                            </items>
                        </list-expression>
                    </right>
                </in-expression>
            </expr>
        </where>
        <group-by>
            <column-item name="country" start-index="130" stop-index="136" />
            <column-item name="year" start-index="139" stop-index="142" />
        </group-by>
        <model start-index="144" stop-index="713">
            <reference-model-select>
                <from>
                    <simple-table name="dollar_conv" start-index="239" stop-index="249" />
                </from>
                <projections start-index="205" stop-index="232">
                    <column-projection name="country" start-index="205" stop-index="211" />
                    <column-projection name="exchange_rate" alias="er" start-index="214" stop-index="232" />
                </projections>
            </reference-model-select>
            <cell-assignment-column name="localsales" start-index="424" stop-index="433" />
            <cell-assignment-column name="dollarsales" start-index="486" stop-index="496" />
            <cell-assignment-column name="localsales" start-index="578" stop-index="587" />
            <cell-assignment-column name="dollarsales" start-index="640" stop-index="650" />
        </model>
    </select>

    <select sql-case-id="select_with_model_with_order_by">
        <from>
            <simple-table name="sales_view" start-index="24" stop-index="33" />
        </from>
        <projections start-index="7" stop-index="17">
            <column-projection name="year" start-index="7" stop-index="10" />
            <column-projection name="sales" start-index="13" stop-index="17" />
        </projections>
        <where start-index="35" stop-index="73">
            <expr>
                <binary-operation-expression start-index="41" stop-index="73">
                    <left>
                        <binary-operation-expression start-index="41" stop-index="55">
                            <left>
                                <column name="country" start-index="41" stop-index="47" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="Italy" start-index="49" stop-index="55" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="61" stop-index="73">
                            <left>
                                <column name="prod" start-index="61" stop-index="64" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="Bounce" start-index="66" stop-index="73" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <model start-index="75" stop-index="196">
            <cell-assignment-column name="sales" start-index="147" stop-index="151" />
            <order-by>
                <column-item name="year" order-direction="DESC" start-index="167" stop-index="170" />
            </order-by>
        </model>
        <order-by>
            <column-item name="year" start-index="207" stop-index="210" />
        </order-by>
    </select>

    <select sql-case-id="select_with_model_with_multi_column_for_loop">
        <from>
            <simple-table name="sales_view" start-index="38" stop-index="47" />
        </from>
        <projections start-index="7" stop-index="31">
            <column-projection name="country" start-index="7" stop-index="13" />
            <column-projection name="product" start-index="16" stop-index="22" />
            <column-projection name="year" start-index="25" stop-index="28" />
            <column-projection name="s" start-index="31" stop-index="31" />
        </projections>
        <model start-index="49" stop-index="283">
            <cell-assignment-column name="s" start-index="137" stop-index="137" />
            <cell-assignment-column name="country" start-index="144" stop-index="150" />
            <cell-assignment-column name="product" start-index="153" stop-index="159" />
            <cell-assignment-column name="year" start-index="162" stop-index="165" />
            <cell-assignment-select>
                <from>
                    <simple-table name="sales_view" start-index="222" stop-index="231" />
                </from>
                <projections start-index="188" stop-index="215" distinct-row="true">
                    <expression-projection text="new_country" start-index="188" stop-index="200" literal-start-index="188" literal-stop-index="200">
                        <literalText>new_country</literalText>
                        <expr>
                            <literal-expression value="new_country" start-index="188" stop-index="200" literal-start-index="188" literal-stop-index="200" />
                        </expr>
                    </expression-projection>
                    <column-projection name="product" start-index="203" stop-index="209" />
                    <column-projection name="year" start-index="212" stop-index="215" />
                </projections>
                <where start-index="233" stop-index="256">
                    <expr>
                        <binary-operation-expression start-index="239" stop-index="256">
                            <left>
                                <column name="country" start-index="239" stop-index="245" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="Poland" start-index="249" stop-index="256" />
                            </right>
                        </binary-operation-expression>
                    </expr>
                </where>
            </cell-assignment-select>
        </model>
        <order-by>
            <column-item name="country" start-index="294" stop-index="300" />
            <column-item name="year" start-index="303" stop-index="306" />
            <column-item name="product" start-index="309" stop-index="315" />
        </order-by>
    </select>
    
    <select sql-case-id="select_with_comments">
        <from>
            <simple-table name="t_order" start-index="51" stop-index="57" />
        </from>
        <projections start-index="25" stop-index="25">
            <shorthand-projection start-index="25" stop-index="25" />
        </projections>
        <comment start-index="0" stop-index="17" text="-- begin comments&#x000A;" />
        <comment start-index="32" stop-index="49" text="# middle comments&#x000A;" />
        <comment start-index="60" stop-index="74" text="-- end comments" />
    </select>

    <select sql-case-id="select_with_model_in">
        <from>
            <subquery-table start-index="47" stop-index="118">
                <subquery>
                    <select>
                        <projections start-index="55" stop-index="107" literal-start-index="55" literal-stop-index="107">
                            <expression-projection text="1001" alias="order_id_value" start-index="55" stop-index="76" literal-start-index="55" literal-stop-index="76">
                                <literalText>1001</literalText>
                                <expr>
                                    <literal-expression value="1001" start-index="55" stop-index="58" literal-start-index="55" literal-stop-index="58" />
                                </expr>
                            </expression-projection>
                            <expression-projection text="100001" alias="order_item_id_value" start-index="79" stop-index="107" literal-start-index="79" literal-stop-index="107">
                                <literalText>100001</literalText>
                                <expr>
                                    <literal-expression value="100001" start-index="79" stop-index="84" literal-start-index="79" literal-stop-index="84" />
                                </expr>
                            </expression-projection>
                        </projections>
                        <from>
                            <simple-table name="dual" start-index="114" stop-index="117" literal-start-index="114" literal-stop-index="117" />
                        </from>
                    </select>
                </subquery>
            </subquery-table>
        </from>
        <projections start-index="7" stop-index="40">
            <column-projection name="order_id_value" start-index="7" stop-index="20" />
            <column-projection name="order_item_id_value" start-index="22" stop-index="40" />
        </projections>
        <model start-index="120" stop-index="236">
            <cell-assignment-column name="order_id_value" start-index="211" stop-index="224"/>
        </model>
    </select>
    
    <select sql-case-id="select_with_dollar_parameter_for_postgresql" parameters="1, 12" >
        <projections start-index="7" stop-index="14">
            <column-projection name="order_id" start-index="7" stop-index="14" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="21" stop-index="27" />
        </from>
        <where start-index="29" stop-index="80" literal-stop-index="79">
            <expr>
                <binary-operation-expression start-index="35" stop-index="80" literal-stop-index="79">
                    <left>
                        <binary-operation-expression start-index="35" stop-index="64" literal-stop-index="63">
                            <left>
                                <binary-operation-expression start-index="35" stop-index="46">
                                    <left>
                                        <column name="user_id" start-index="35" stop-index="41" />
                                    </left>
                                    <operator>=</operator>
                                    <right>
                                        <parameter-marker-expression parameter-index="1" start-index="45" stop-index="46" />
                                        <literal-expression value="12" start-index="45" stop-index="46" />
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <operator>AND</operator>
                            <right>
                                <binary-operation-expression start-index="52" stop-index="64" literal-stop-index="63">
                                    <left>
                                        <column name="order_id" start-index="52" stop-index="59" />
                                    </left>
                                    <operator>=</operator>
                                    <right>
                                        <parameter-marker-expression parameter-index="0" start-index="63" stop-index="64" literal-stop-index="63" />
                                        <literal-expression value="1" start-index="63" stop-index="63" />
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>OR</operator>
                    <right>
                        <binary-operation-expression start-index="69" stop-index="80" literal-start-index="68" literal-stop-index="79">
                            <left>
                                <column name="user_id" start-index="69" stop-index="75" literal-start-index="68" literal-stop-index="74" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <parameter-marker-expression parameter-index="1" start-index="79" stop-index="80" literal-start-index="78" literal-stop-index="79" />
                                <literal-expression value="12" start-index="78" stop-index="79" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_binary_keyword" >
        <projections start-index="7" stop-index="70">
            <!-- TODO parse position function in projection -->
            <expression-projection text="position(binary 'll' in 'hello')" start-index="7" stop-index="38" />
            <expression-projection text="position('a' in binary 'hello')" start-index="40" stop-index="70" />
        </projections>
    </select>

    <select sql-case-id="select_with_schema_name_in_shorthand_projection" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="34" stop-index="40" />
        </from>
        <projections start-index="7" stop-index="27">
            <shorthand-projection start-index="7" stop-index="27">
                <owner name="t_order" start-index="19" stop-index="25">
                    <owner name="sharding_db" start-index="7" stop-index="17" />
                </owner>
            </shorthand-projection>
        </projections>
        <where start-index="42" stop-index="75">
            <expr>
                <binary-operation-expression start-index="48" stop-index="75">
                    <left>
                        <binary-operation-expression start-index="48" stop-index="58">
                            <left>
                                <column name="user_id" start-index="48" stop-index="54" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="58" stop-index="58" />
                                <parameter-marker-expression parameter-index="0" start-index="58" stop-index="58" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="64" stop-index="75">
                            <left>
                                <column name="order_id" start-index="64" stop-index="71" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="75" stop-index="75" />
                                <parameter-marker-expression parameter-index="1" start-index="75" stop-index="75" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_schema_name_in_column_projection" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="41" stop-index="47" />
        </from>
        <projections start-index="7" stop-index="34">
            <column-projection name="order_id" start-index="7" stop-index="34">
                <owner name="t_order" start-index="19" stop-index="25">
                    <owner name="sharding_db" start-index="7" stop-index="17" />
                </owner>
            </column-projection>
        </projections>
        <where start-index="49" stop-index="82">
            <expr>
                <binary-operation-expression start-index="55" stop-index="82">
                    <left>
                        <binary-operation-expression start-index="55" stop-index="65">
                            <left>
                                <column name="user_id" start-index="55" stop-index="61" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="65" stop-index="65" />
                                <parameter-marker-expression parameter-index="0" start-index="65" stop-index="65" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="71" stop-index="82">
                            <left>
                                <column name="order_id" start-index="71" stop-index="78" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="82" stop-index="82" />
                                <parameter-marker-expression parameter-index="1" start-index="82" stop-index="82" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_schema_name_in_table" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="21" stop-index="34">
                <owner name="public" start-index="21" stop-index="26" />
            </simple-table>
        </from>
        <projections start-index="7" stop-index="14">
            <column-projection name="order_id" start-index="7" stop-index="14" />
        </projections>
        <where start-index="36" stop-index="69">
            <expr>
                <binary-operation-expression start-index="42" stop-index="69">
                    <left>
                        <binary-operation-expression start-index="42" stop-index="52">
                            <left>
                                <column name="user_id" start-index="42" stop-index="48" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="52" stop-index="52" />
                                <parameter-marker-expression parameter-index="0" start-index="52" stop-index="52" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="58" stop-index="69">
                            <left>
                                <column name="order_id" start-index="58" stop-index="65" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="69" stop-index="69" />
                                <parameter-marker-expression parameter-index="1" start-index="69" stop-index="69" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_database_name_and_schema_name_in_table" parameters="1, 1">
        <from>
            <simple-table name="t_order" start-index="21" stop-index="46">
                <owner name="public" start-index="33" stop-index="38">
                    <owner name="sharding_db" start-index="21" stop-index="31" />
                </owner>
            </simple-table>
        </from>
        <projections start-index="7" stop-index="14">
            <column-projection name="order_id" start-index="7" stop-index="14" />
        </projections>
        <where start-index="48" stop-index="81">
            <expr>
                <binary-operation-expression start-index="54" stop-index="81">
                    <left>
                        <binary-operation-expression start-index="54" stop-index="64">
                            <left>
                                <column name="user_id" start-index="54" stop-index="60" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="64" stop-index="64" />
                                <parameter-marker-expression parameter-index="0" start-index="64" stop-index="64" />
                            </right>
                        </binary-operation-expression>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="70" stop-index="81">
                            <left>
                                <column name="order_id" start-index="70" stop-index="77" />
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="1" start-index="81" stop-index="81" />
                                <parameter-marker-expression parameter-index="1" start-index="81" stop-index="81" />
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_underscore_charset" >
        <projections start-index="7" stop-index="14">
            <column-projection name="_code" start-index="7" stop-index="11" />
            <column-projection name="_a" start-index="13" stop-index="14" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="21" stop-index="27" />
        </from>
    </select>

    <select sql-case-id="select_table_with_capacity_unit_charset">
        <from>
            <simple-table name="T_RATION_INFO" alias="T" start-index="22" stop-index="36" />
        </from>
        <projections start-index="7" stop-index="15">
            <column-projection name="USER_NO" start-index="7" stop-index="15">
                <owner name="T" start-index="7" stop-index="7" />
            </column-projection>>
        </projections>
    </select>

    <select sql-case-id="select_with_character_charset">
        <projections start-index="7" stop-index="24">
            <!--    TODO StringLiteralValue should consider about _binary/_utf8mb4-->
            <expression-projection text="binary'abc" alias="a" start-index="7" stop-index="24" />
        </projections>
    </select>

    <select sql-case-id="select_with_for_xml_clause">
        <from>
            <join-table join-type="INNER">
                <left>
                    <simple-table name="t_order" alias="o" start-index="44" stop-index="52" />
                </left>
                <right>
                    <simple-table name="t_order_item" alias="i" start-index="65" stop-index="78" />
                </right>
                <on-condition>
                    <binary-operation-expression start-index="83" stop-index="103">
                        <left>
                            <column name="user_id" start-index="83" stop-index="91">
                                <owner name="o" start-index="83" stop-index="83" />
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="user_id" start-index="95" stop-index="103">
                                <owner name="i" start-index="95" stop-index="95" />
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="37">
            <column-projection name="order_id" start-index="7" stop-index="16">
                <owner name="o" start-index="7" stop-index="7" />
            </column-projection>
            <column-projection name="status" start-index="19" stop-index="26">
                <owner name="o" start-index="19" stop-index="19" />
            </column-projection>
            <column-projection name="item_id" start-index="29" stop-index="37">
                <owner name="i" start-index="29" stop-index="29" />
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_for_xml_clause_with_directive">
        <from>
            <simple-table name="t_order" start-index="28" stop-index="34" />
        </from>
        <projections start-index="7" stop-index="21">
            <column-projection name="user_id" start-index="7" stop-index="13" />
            <column-projection name="status" start-index="16" stop-index="21" />
        </projections>
        <where start-index="36" stop-index="53">
            <expr>
                <binary-operation-expression start-index="42" stop-index="53">
                    <left>
                        <column name="order_id" start-index="42" stop-index="49" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="53" stop-index="53" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_for_json_clause">
        <from>
            <simple-table name="t_order" start-index="29" stop-index="35" />
        </from>
        <projections start-index="7" stop-index="22">
            <column-projection name="order_id" start-index="7" stop-index="14" />
            <column-projection name="status" start-index="17" stop-index="22" />
        </projections>
    </select>

    <select sql-case-id="select_with_keyword_target">
        <from>
            <simple-table name="sys_menu" start-index="21" stop-index="30" alias="m" />
        </from>
        <projections start-index="7" stop-index="14">
            <column-projection name="target" start-index="7" stop-index="14">
                <owner name="m" start-index="7" stop-index="7" />
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_keyword_maxvalue">
        <from>
            <simple-table name="sys_menu" start-index="23" stop-index="32" alias="m" />
        </from>
        <projections start-index="7" stop-index="16">
            <column-projection name="maxvalue" start-index="7" stop-index="16">
                <owner name="m" start-index="7" stop-index="7" />
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_keyword_priority">
        <from>
            <simple-table name="sys_menu" start-index="23" stop-index="32" alias="m" />
        </from>
        <projections start-index="7" stop-index="16">
            <column-projection name="priority" start-index="7" stop-index="16">
                <owner name="m" start-index="7" stop-index="7" />
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_xml_namespaces_clause">
        <from>
            <simple-table name="t_order" start-index="97" stop-index="103" />
        </from>
        <projections start-index="41" stop-index="90">
            <column-projection name="order_id" alias="ns1:order_id" start-index="41" stop-index="66" />
            <column-projection name="status" alias="ns1:status" start-index="69" stop-index="90" />
        </projections>
    </select>

    <select sql-case-id="select_with_xml_default_namespaces_clause">
        <from>
            <simple-table name="t_order" start-index="129" stop-index="135" />
        </from>
        <projections start-index="73" stop-index="122">
            <column-projection name="order_id" alias="ns1:order_id" start-index="73" stop-index="98" />
            <column-projection name="status" alias="ns1:status" start-index="101" stop-index="122" />
        </projections>
    </select>

    <select sql-case-id="select_with_mysql_main_and_utc_data_and_so_on">
        <from>
            <simple-table name="test" start-index="55" stop-index="58" />
        </from>
        <projections start-index="7" stop-index="48">
            <column-projection name="MYSQL_MAIN" start-index="7" stop-index="16" />
            <column-projection name="UTC_DATE" start-index="18" stop-index="25" />
            <column-projection name="UTC_TIME" start-index="27" stop-index="34" />
            <column-projection name="UTC_TIMESTAMP" start-index="36" stop-index="48" />
        </projections>
    </select>

    <select sql-case-id="select_with_analytic_function" parameters="1">
        <projections start-index="7" stop-index="94">
            <column-projection name="order_id" start-index="7" stop-index="14" />
            <expression-projection text="ROW_NUMBER () OVER (PARTITION BY user_id ORDER BY order_id DESC)" start-index="17" stop-index="94" alias="row_number">
                <expr>
                    <function function-name="ROW_NUMBER" start-index="17" stop-index="80" text="ROW_NUMBER () OVER (PARTITION BY user_id ORDER BY order_id DESC)" />
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_order" start-index="101" stop-index="107" />
        </from>
        <where start-index="109" stop-index="126">
            <expr>
                <binary-operation-expression start-index="115" stop-index="126">
                    <left>
                        <column name="order_id" start-index="115" stop-index="122" />
                    </left>
                    <right>
                        <literal-expression value="1" start-index="126" stop-index="126" />
                        <parameter-marker-expression parameter-index="0" start-index="126" stop-index="126" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_listagg_function_start_with_connect_by">
        <projections start-index="7" stop-index="101">
            <expression-projection text="LISTAGG(c.category_name, '/') WITHIN GROUP (ORDER BY LENGTH (c.&quot;level&quot;) DESC)" alias="category_level" start-index="7" stop-index="101" literal-start-index="7" literal-stop-index="101">
                <literalText>LISTAGG(c.category_name, '/') WITHIN GROUP (ORDER BY LENGTH (c."level") DESC)</literalText>
                <expr>
                    <function function-name="LISTAGG" text="LISTAGG(c.category_name, '/') WITHIN GROUP (ORDER BY LENGTH (c.&quot;level&quot;) DESC)" start-index="7" stop-index="83" literal-start-index="7" literal-stop-index="83">
                        <parameter>
                            <column name="category_name" start-index="15" stop-index="29" literal-start-index="15" literal-stop-index="29">
                                <owner name="c" start-index="15" stop-index="15" literal-start-index="15" literal-stop-index="15" />
                            </column>
                        </parameter>
                        <parameter>
                            <literal-expression value="/" start-index="32" stop-index="34" literal-start-index="32" literal-stop-index="34" />
                        </parameter>
                        <literalText>LISTAGG(c.category_name, '/') WITHIN GROUP (ORDER BY LENGTH (c."level") DESC)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="t_product_category" start-index="108" stop-index="127" alias="c" />
        </from>
    </select>

    <select sql-case-id="select_aggregate_percent_rank">
        <projections start-index="7" stop-index="92">
            <expression-projection text="PERCENT_RANK(15000, .05) WITHIN GROUP (ORDER BY salary, commission_pct)" alias="Percent-Rank" start-index="7" stop-index="92" />
        </projections>
        <from>
            <simple-table name="employees" start-index="99" stop-index="107" />
        </from>
    </select>

    <select sql-case-id="select_analytic_percent_rank">
        <projections start-index="7" stop-index="115">
            <column-projection name="department_id" start-index="7" stop-index="19" />
            <column-projection name="last_name" start-index="22" stop-index="30" />
            <column-projection name="salary" start-index="33" stop-index="38" />
            <expression-projection text="PERCENT_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC)" start-index="41" stop-index="115" alias="pr">
                <expr>
                    <function function-name="PERCENT_RANK" start-index="41" stop-index="109" text="PERCENT_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC)" />
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="122" stop-index="130" />
        </from>
        <order-by>
            <column-item name="pr" start-index="141" stop-index="142" />
            <column-item name="salary" start-index="145" stop-index="150" />
            <column-item name="last_name" start-index="153" stop-index="161" />
        </order-by>
    </select>

    <select sql-case-id="select_aggregate_percentile_cont">
        <projections start-index="7" stop-index="91">
            <column-projection name="department_id" start-index="7" stop-index="19" />
            <expression-projection text="PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary DESC)" alias="Median cont" start-index="22" stop-index="91" />
        </projections>
        <from>
            <simple-table name="employees" start-index="98" stop-index="106" />
        </from>
    </select>

    <select sql-case-id="select_aggregate_percentile_disc">
        <projections start-index="7" stop-index="148">
            <column-projection name="department_id" start-index="7" stop-index="19" />
            <column-projection name="last_name" start-index="22" stop-index="30" />
            <column-projection name="salary" start-index="33" stop-index="38" />
            <expression-projection text="PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY salary DESC) OVER (PARTITION BY department_id)" alias="Percentile_Disc" start-index="41" stop-index="148" />
        </projections>
        <from>
            <simple-table name="employees" start-index="155" stop-index="163" />
        </from>
        <where start-index="165" stop-index="195">
            <expr>
                <in-expression start-index="171" stop-index="195">
                    <not>false</not>
                    <left>
                        <column name="department_id" start-index="171" stop-index="183" />
                    </left>
                    <right>
                        <list-expression start-index="188" stop-index="195">
                            <items>
                                <literal-expression value="30" start-index="189" stop-index="190" />
                            </items>
                            <items>
                                <literal-expression value="60" start-index="193" stop-index="194" />
                            </items>
                        </list-expression>
                    </right>
                </in-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="last_name" start-index="206" stop-index="214" />
            <column-item name="salary" start-index="217" stop-index="222" />
            <column-item name="department_id" start-index="225" stop-index="237" />
        </order-by>
    </select>

    <select sql-case-id="select_aggregate_cume_dist">
        <projections start-index="7" stop-index="95">
            <expression-projection text="CUME_DIST(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)" alias="Cume-Dist of 15500" start-index="7" stop-index="95" literal-start-index="7" literal-stop-index="95">
                <literalText>CUME_DIST(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)</literalText>
                <expr>
                    <function function-name="CUME_DIST" text="CUME_DIST(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)" start-index="7" stop-index="74" literal-start-index="7" literal-stop-index="74">
                        <parameter>
                            <literal-expression value="15500" start-index="17" stop-index="21" literal-start-index="17" literal-stop-index="21" />
                        </parameter>
                        <parameter>
                            <literal-expression value="0.05" start-index="24" stop-index="26" literal-start-index="24" literal-stop-index="26" />
                        </parameter>
                        <literalText>CUME_DIST(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="102" stop-index="110" />
        </from>
    </select>

    <select sql-case-id="select_aggregate_rank">
        <projections start-index="7" stop-index="69">
            <expression-projection text="RANK(15500) WITHIN GROUP (ORDER BY salary DESC)" alias="Rank of 15500" start-index="7" stop-index="69" />
        </projections>
        <from>
            <simple-table name="employees" start-index="76" stop-index="84" />
        </from>
    </select>

    <select sql-case-id="select_rowid">
        <projections start-index="7" stop-index="11">
            <column-projection name="ROWID" start-index="7" stop-index="11" />
        </projections>
        <from>
            <simple-table name="employees" start-index="18" stop-index="26" />
        </from>
        <where start-index="28" stop-index="65">
            <expr>
                <binary-operation-expression start-index="34" stop-index="65">
                    <left>
                        <function function-name="ROWIDTOCHAR" start-index="34" stop-index="51" text="ROWIDTOCHAR(ROWID)">
                            <parameter>
                                <column name="ROWID" start-index="46" stop-index="50" />
                            </parameter>
                        </function>
                    </left>
                    <operator>LIKE</operator>
                    <right>
                        <list-expression start-index="58" stop-index="65">
                            <items>
                                <literal-expression value="%JAAB%" start-index="58" stop-index="65" />
                            </items>
                        </list-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="ROWID" start-index="76" stop-index="80" />
        </order-by>
    </select>

    <select sql-case-id="select_linear_regression_function">
        <projections start-index="7" stop-index="465" literal-start-index="7" literal-stop-index="465">
            <column-projection name="job_id" start-index="7" stop-index="12" literal-start-index="7" literal-stop-index="12" />
            <column-projection alias="ID" name="employee_id" start-index="15" stop-index="28" literal-start-index="15" literal-stop-index="28" />
            <column-projection name="salary" start-index="31" stop-index="36" literal-start-index="31" literal-stop-index="36" />
            <expression-projection text="REGR_SLOPE(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="slope" start-index="39" stop-index="108" literal-start-index="39" literal-stop-index="108">
                <literalText>REGR_SLOPE(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_SLOPE" text="REGR_SLOPE(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="39" stop-index="102" literal-start-index="39" literal-stop-index="102">
                        <parameter>
                            <binary-operation-expression start-index="50" stop-index="66" literal-start-index="50" literal-stop-index="66">
                                <left>
                                    <column name="SYSDATE" start-index="50" stop-index="56" literal-start-index="50" literal-stop-index="56" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="58" stop-index="66" literal-start-index="58" literal-stop-index="66" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="69" stop-index="74" literal-start-index="69" literal-stop-index="74" />
                        </parameter>
                        <literalText>REGR_SLOPE(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="REGR_INTERCEPT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="intcpt" start-index="111" stop-index="185" literal-start-index="111" literal-stop-index="185">
                <literalText>REGR_INTERCEPT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_INTERCEPT" text="REGR_INTERCEPT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="111" stop-index="178" literal-start-index="111" literal-stop-index="178">
                        <parameter>
                            <binary-operation-expression start-index="126" stop-index="142" literal-start-index="126" literal-stop-index="142">
                                <left>
                                    <column name="SYSDATE" start-index="126" stop-index="132" literal-start-index="126" literal-stop-index="132" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="134" stop-index="142" literal-start-index="134" literal-stop-index="142" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="145" stop-index="150" literal-start-index="145" literal-stop-index="150" />
                        </parameter>
                        <literalText>REGR_INTERCEPT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="REGR_R2(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="rsqr" start-index="188" stop-index="253" literal-start-index="188" literal-stop-index="253">
                <literalText>REGR_R2(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_R2" text="REGR_R2(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="188" stop-index="248" literal-start-index="188" literal-stop-index="248">
                        <parameter>
                            <binary-operation-expression start-index="196" stop-index="212" literal-start-index="196" literal-stop-index="212">
                                <left>
                                    <column name="SYSDATE" start-index="196" stop-index="202" literal-start-index="196" literal-stop-index="202" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="204" stop-index="212" literal-start-index="204" literal-stop-index="212" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="215" stop-index="220" literal-start-index="215" literal-stop-index="220" />
                        </parameter>
                        <literalText>REGR_R2(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="REGR_COUNT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="count" start-index="256" stop-index="325" literal-start-index="256" literal-stop-index="325">
                <literalText>REGR_COUNT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_COUNT" text="REGR_COUNT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="256" stop-index="319" literal-start-index="256" literal-stop-index="319">
                        <parameter>
                            <binary-operation-expression start-index="267" stop-index="283" literal-start-index="267" literal-stop-index="283">
                                <left>
                                    <column name="SYSDATE" start-index="267" stop-index="273" literal-start-index="267" literal-stop-index="273" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="275" stop-index="283" literal-start-index="275" literal-stop-index="283" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="286" stop-index="291" literal-start-index="286" literal-stop-index="291" />
                        </parameter>
                        <literalText>REGR_COUNT(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="REGR_AVGX(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="avgx" start-index="328" stop-index="395" literal-start-index="328" literal-stop-index="395">
                <literalText>REGR_AVGX(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_AVGX" text="REGR_AVGX(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="328" stop-index="390" literal-start-index="328" literal-stop-index="390">
                        <parameter>
                            <binary-operation-expression start-index="338" stop-index="354" literal-start-index="338" literal-stop-index="354">
                                <left>
                                    <column name="SYSDATE" start-index="338" stop-index="344" literal-start-index="338" literal-stop-index="344" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="346" stop-index="354" literal-start-index="346" literal-stop-index="354" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="357" stop-index="362" literal-start-index="357" literal-stop-index="362" />
                        </parameter>
                        <literalText>REGR_AVGX(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="REGR_AVGY(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" alias="avgy" start-index="398" stop-index="465" literal-start-index="398" literal-stop-index="465">
                <literalText>REGR_AVGY(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                <expr>
                    <function function-name="REGR_AVGY" text="REGR_AVGY(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)" start-index="398" stop-index="460" literal-start-index="398" literal-stop-index="460">
                        <parameter>
                            <binary-operation-expression start-index="408" stop-index="424" literal-start-index="408" literal-stop-index="424">
                                <left>
                                    <column name="SYSDATE" start-index="408" stop-index="414" literal-start-index="408" literal-stop-index="414" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="416" stop-index="424" literal-start-index="416" literal-stop-index="424" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="427" stop-index="432" literal-start-index="427" literal-stop-index="432" />
                        </parameter>
                        <literalText>REGR_AVGY(SYSDATE-hire_date, salary) OVER (PARTITION BY job_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="472" stop-index="480" />
        </from>
        <where start-index="482" stop-index="512">
            <expr>
                <in-expression start-index="488" stop-index="512">
                    <left>
                        <column name="department_id" start-index="488" stop-index="500" />
                    </left>
                    <right>
                        <list-expression start-index="505" stop-index="512">
                            <items>
                                <literal-expression value="50" start-index="506" stop-index="507" />
                            </items>
                            <items>
                                <literal-expression value="80" start-index="510" stop-index="511" />
                            </items>
                        </list-expression>
                    </right>
                </in-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="job_id" start-index="523" stop-index="528" />
            <column-item name="employee_id" start-index="531" stop-index="541" />
        </order-by>
    </select>

    <select sql-case-id="select_lpad_function">
        <projections start-index="7" stop-index="43">
            <expression-projection text="LPAD('Page 1',15,'*.')" alias="LPAD example" start-index="7" stop-index="43" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="50" stop-index="53" />
        </from>
    </select>

    <select sql-case-id="select_to_char_function">
        <projections start-index="7" stop-index="60">
            <expression-projection text="TO_CHAR(ts_col, 'DD-MON-YYYY HH24:MI:SSxFF')" alias="ts_col" start-index="7" stop-index="60" />
        </projections>
        <from>
            <simple-table name="date_tab" start-index="67" stop-index="74" />
        </from>
        <order-by>
            <column-item name="ts_col" start-index="85" stop-index="90" />
        </order-by>
    </select>

    <select sql-case-id="select_xmlelement_xmlagg_function">
        <projections start-index="7" stop-index="124">
            <expression-projection text="XMLELEMENT('Department', XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name))" alias="Dept_list" start-index="7" stop-index="124" literal-start-index="7" literal-stop-index="124">
                <literalText>XMLELEMENT('Department', XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name))</literalText>
                <expr>
                    <function function-name="XMLELEMENT" text="XMLELEMENT('Department', XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name))" start-index="7" stop-index="109" literal-start-index="7" literal-stop-index="109">
                        <parameter>
                            <literal-expression value="Department" start-index="18" stop-index="29" literal-start-index="18" literal-stop-index="29" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLAGG" text="XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name)" start-index="32" stop-index="108" literal-start-index="32" literal-stop-index="108">
                                <literalText>XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name)</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLELEMENT('Department', XMLAGG(XMLELEMENT('Employee', e.job_id||' '||e.last_name) ORDER BY last_name))</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" alias="e" start-index="131" stop-index="141" />
        </from>
        <where start-index="143" stop-index="168">
            <expr>
                <binary-operation-expression start-index="149" stop-index="168">
                    <left>
                        <column name="department_id" start-index="149" stop-index="163" >
                            <owner name="e" start-index="149" stop-index="149" />
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="30" start-index="167" stop-index="168" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_xmlcast_function">
        <projections start-index="7" stop-index="48">
            <expression-projection text="XMLCAST(des.COLUMN_VALUE AS VARCHAR2(256))" start-index="7" stop-index="48">
                <literalText>XMLCAST(des.COLUMN_VALUE AS VARCHAR2(256))</literalText>
                <expr>
                    <function function-name="XMLCAST" text="XMLCAST(des.COLUMN_VALUE AS VARCHAR2(256))" start-index="7" stop-index="48" literal-start-index="7" literal-stop-index="48">
                        <parameter>
                            <column name="COLUMN_VALUE" start-index="15" stop-index="30" literal-start-index="15" literal-stop-index="30">
                                <owner name="des" start-index="15" stop-index="17" literal-start-index="15" literal-stop-index="17" />
                            </column>
                        </parameter>
                        <parameter>
                            <data-type value="VARCHAR2" start-index="35" stop-index="47" />
                        </parameter>
                        <literalText>XMLCAST(des.COLUMN_VALUE AS VARCHAR2(256))</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="purchaseorder" start-index="55" stop-index="67" />
        </from>
    </select>

    <select sql-case-id="select_xmlcolattval_function">
        <projections start-index="7" stop-index="95" >
            <expression-projection text="XMLCOLATTVAL(e.employee_id AS EVALNAME 'ID', e.last_name AS name, e.salary)" alias="Emp Element" start-index="7" stop-index="95" literal-start-index="7" literal-stop-index="95">
                <literalText>XMLCOLATTVAL(e.employee_id AS EVALNAME 'ID', e.last_name AS name, e.salary)</literalText>
                <expr>
                    <function function-name="XMLCOLATTVAL" text="XMLCOLATTVAL(e.employee_id AS EVALNAME 'ID', e.last_name AS name, e.salary)" start-index="7" stop-index="81" literal-start-index="7" literal-stop-index="81">
                        <parameter>
                            <column name="employee_id" start-index="20" stop-index="32" literal-start-index="20" literal-stop-index="32">
                                <owner name="e" start-index="20" stop-index="20" literal-start-index="20" literal-stop-index="20" />
                            </column>
                        </parameter>
                        <parameter>
                            <column name="last_name" start-index="52" stop-index="62" literal-start-index="52" literal-stop-index="62">
                                <owner name="e" start-index="52" stop-index="52" literal-start-index="52" literal-stop-index="52" />
                            </column>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="73" stop-index="80" literal-start-index="73" literal-stop-index="80">
                                <owner name="e" start-index="73" stop-index="73" literal-start-index="73" literal-stop-index="73" />
                            </column>
                        </parameter>
                        <literalText>XMLCOLATTVAL(e.employee_id AS EVALNAME 'ID', e.last_name AS name, e.salary)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" alias="e" start-index="102" stop-index="112" />
        </from>
        <where start-index="114" stop-index="136">
            <expr>
                <binary-operation-expression start-index="120" stop-index="136" >
                    <left>
                        <column name="employee_id" start-index="120" stop-index="130" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="204" start-index="134" stop-index="136" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_xmlexists_function">
        <projections start-index="7" stop-index="68">
            <column-projection name="id" start-index="7" stop-index="8" />
            <expression-projection text="XMLEXISTS('//student[@age=20]' PASSING BY VALUE xcol AS x)" start-index="11" stop-index="68" />
        </projections>
        <from>
            <simple-table name="x_table" start-index="75" stop-index="81" />
        </from>
    </select>

    <select sql-case-id="select_xmlforest_function">
        <projections start-index="7" stop-index="78">
            <expression-projection text="XMLFOREST(e.employee_id AS EVALNAME 'ID', e.last_name AS name, e.salary)" start-index="7" stop-index="78" />
        </projections>
        <from>
            <simple-table name="employees" start-index="85" stop-index="95" alias="e" />
        </from>
        <where start-index="97" stop-index="119">
            <expr>
                <binary-operation-expression start-index="103" stop-index="119">
                    <left>
                        <column name="employee_id" start-index="103" stop-index="113" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="204" start-index="117" stop-index="119" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_xmlparse_function">
        <projections start-index="7" stop-index="53">
            <expression-projection text="XMLPARSE(DOCUMENT 'DEPTXML' WELLFORMED)" alias="dept" start-index="7" stop-index="53" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="60" stop-index="63" />
        </from>
    </select>

    <select sql-case-id="select_xmlpi_function">
        <projections start-index="7" stop-index="89">
            <expression-projection text="XMLPI(NAME &quot;Order analysisComp&quot;, 'imported, reconfigured, disassembled')" alias="XMLPI" start-index="11" stop-index="78" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="96" stop-index="99" />
        </from>
    </select>

    <select sql-case-id="select_xmlquery_function">
        <projections start-index="7" stop-index="95">
            <expression-projection text="XMLQUERY('//student[@age=20]' PASSING BY VALUE xcol AS x RETURNING CONTENT NULL ON EMPTY)" start-index="7" stop-index="95" />
        </projections>
        <from>
            <simple-table name="x_table" start-index="102" stop-index="108" />
        </from>
    </select>

    <select sql-case-id="select_xmlroot_function">
        <projections start-index="7" stop-index="76">
            <expression-projection text="XMLROOT(XMLType('143598'), VERSION '1.0', STANDALONE YES)" alias="XMLROOT" start-index="7" stop-index="76" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="83" stop-index="86" />
        </from>
    </select>

    <select sql-case-id="select_xmlserialize_function">
        <projections start-index="7" stop-index="98">
            <expression-projection text="XMLSERIALIZE(DOCUMENT c2 AS BLOB ENCODING 'UTF-8' VERSION 'a' IDENT SIZE = 0 SHOW DEFAULT)" start-index="7" stop-index="98" />
        </projections>
        <from>
            <simple-table name="b" start-index="105" stop-index="105" />
        </from>
    </select>

    <select sql-case-id="select_from_xmltable_function">
        <projections start-index="7" stop-index="65">
            <column-projection alias="warehouse" name="warehouse_name" start-index="7" stop-index="30" />
            <column-projection name="Water" start-index="33" stop-index="48">
                <owner name="warehouse2" start-index="33" stop-index="42" />
            </column-projection>
            <column-projection name="Rail" start-index="51" stop-index="65">
                <owner name="warehouse2" start-index="51" stop-index="60" />
            </column-projection>
        </projections>
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="warehouses" start-index="72" stop-index="81" />
                </left>
                <right>
                    <function-table table-alias="warehouse2">
                        <table-function function-name="XMLTABLE"
                                        text="XMLTABLE('/Warehouse' PASSING warehouses.warehouse_spec COLUMNS &quot;Water&quot; varchar2(6) PATH 'WaterAccess',&quot;Rail&quot; varchar2(6) PATH 'RailAccess')"/>
                    </function-table>
                </right>
            </join-table>
        </from>
    </select>

    <select sql-case-id="select_with_null_keyword_in_projection">
        <projections start-index="7" stop-index="31">
            <expression-projection text="null" alias="order_id" start-index="7" stop-index="22">
                <expr>
                    <literal-expression value="null" start-index="7" stop-index="10" />
                </expr>
            </expression-projection>
            <column-projection name="item_id" start-index="25" stop-index="31" />
        </projections>
        <from>
            <simple-table name="t_order" start-index="38" stop-index="44" />
        </from>
    </select>
    
    <select sql-case-id="select_literal_type_cast_money">
        <projections start-index="7" stop-index="18">
            <expression-projection text="'$99'::money" start-index="7" stop-index="18">
                <expr>
                    <type-cast-expression>
                        <expression>
                            <literal-expression value="$99" start-index="7" stop-index="11" />
                        </expression>
                        <data-type>money</data-type>
                    </type-cast-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_positional_parameter_type_cast_money" parameters="123.00">
        <projections start-index="7" stop-index="15">
            <expression-projection text="$1::money" start-index="7" stop-index="15">
                <expr>
                    <type-cast-expression>
                        <expression>
                            <parameter-marker-expression parameter-index="0" start-index="7" stop-index="8" />
                        </expression>
                        <data-type>money</data-type>
                    </type-cast-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_string_constant_type_cast">
        <projections start-index="7" stop-index="25">
            <expression-projection text="int4 '1'" start-index="7" stop-index="14">
                <expr>
                    <type-cast-expression>
                        <expression>
                            <literal-expression value="1" start-index="12" stop-index="14" />
                        </expression>
                        <data-type>int4</data-type>
                    </type-cast-expression>
                </expr>
            </expression-projection>
            <expression-projection text="money '2'" start-index="17" stop-index="25">
                <expr>
                    <type-cast-expression>
                        <expression>
                            <literal-expression value="2" start-index="23" stop-index="25" />
                        </expression>
                        <data-type>money</data-type>
                    </type-cast-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_constant_with_nested_type_cast">
        <projections start-index="7" stop-index="60">
            <expression-projection text="CAST(MONEY '1' AS VARCHAR)::CHAR(10)::VARCHAR::CHAR(4)" start-index="7" stop-index="60">
                <expr>
                    <type-cast-expression>
                        <expression>
                            <type-cast-expression>
                                <expression>
                                    <type-cast-expression>
                                        <expression>
                                            <type-cast-expression>
                                                <expression>
                                                    <type-cast-expression>
                                                        <expression>
                                                            <literal-expression value="1" start-index="18" stop-index="20" />
                                                        </expression>
                                                        <data-type>MONEY</data-type>
                                                    </type-cast-expression>
                                                </expression>
                                                <data-type>VARCHAR</data-type>
                                            </type-cast-expression>
                                        </expression>
                                        <data-type>CHAR(10)</data-type>
                                    </type-cast-expression>
                                </expression>
                                <data-type>VARCHAR</data-type>
                            </type-cast-expression>
                        </expression>
                        <data-type>CHAR(4)</data-type>
                    </type-cast-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_projection_with_parameter" parameters="'OK'">
        <projections start-index="7" stop-index="81" literal-stop-index="84">
            <expression-projection text="1" start-index="7" stop-index="13" alias="id">
                <expr>
                    <literal-expression value="1" start-index="7" stop-index="7" />
                </expr>
            </expression-projection>
            <expression-projection text="OK" start-index="16" stop-index="26" literal-stop-index="29" alias="status">
                <expr>
                    <literal-expression value="OK" start-index="16" stop-index="19" />
                </expr>
            </expression-projection>
            <column-projection name="SYSDATE" start-index="29" stop-index="50" literal-start-index="32" literal-stop-index="53" alias="create_time" />
            <expression-projection text="TRUNC(SYSDATE)" start-index="53" stop-index="81" literal-start-index="56" literal-stop-index="84" alias="create_date">
                <expr>
                    <function function-name="TRUNC" start-index="53" stop-index="66" literal-start-index="56" literal-stop-index="69" text="TRUNC(SYSDATE)">
                        <parameter>
                            <column name="SYSDATE" start-index="59" stop-index="65" literal-start-index="62" literal-stop-index="68" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="DUAL" start-index="88" stop-index="91" literal-start-index="91" literal-stop-index="94" />
        </from>
    </select>

    <select sql-case-id="select_with_chinese_comma">
        <projections start-index="7" stop-index="12" >
            <expression-projection text="1" start-index="7" stop-index="7" />
            <expression-projection text="2" start-index="10" stop-index="10" />
            <expression-projection text="3" start-index="12" stop-index="12" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="19" stop-index="22" />
        </from>
    </select>

    <select sql-case-id="select_with_chinese_whitespace">
        <projections start-index="7" stop-index="12" >
            <expression-projection text="1" start-index="7" stop-index="7" />
            <expression-projection text="2" start-index="10" stop-index="10" />
            <expression-projection text="3" start-index="12" stop-index="12" />
        </projections>
        <from>
            <simple-table name="DUAL" start-index="19" stop-index="22" />
        </from>
    </select>

    <select sql-case-id="select_with_keyword_system" parameters="0">
        <from>
            <simple-table name="vtx_project" start-index="14" stop-index="24" />
        </from>
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <where start-index="26" stop-index="41">
            <expr>
                <binary-operation-expression start-index="32" stop-index="41">
                    <left>
                        <column name="system" start-index="32" stop-index="37"/>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="0" start-index="41" stop-index="41"/>
                        <parameter-marker-expression parameter-index="0" start-index="41" stop-index="41"/>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_keyword_groups_and_rank">
        <from>
            <simple-table alias="t" name="t_order" start-index="29" stop-index="37" literal-start-index="29" literal-stop-index="37"/>
        </from>
        <projections distinct-row="false" start-index="7" stop-index="22" literal-start-index="7" literal-stop-index="22">
            <column-projection name="groups" start-index="7" stop-index="14" literal-start-index="7" literal-stop-index="14">
                <owner name="t" start-index="7" stop-index="7" literal-start-index="7" literal-stop-index="7"/>
            </column-projection>
            <column-projection name="rank" start-index="17" stop-index="22" literal-start-index="17" literal-stop-index="22">
                <owner name="t" start-index="17" stop-index="17" literal-start-index="17" literal-stop-index="17"/>
            </column-projection>
        </projections>
    </select>
    
    <select sql-case-id="select_with_format_function">
        <projections start-index="7" stop-index="59" literal-start-index="7" literal-stop-index="59">
            <expression-projection text="wi.code.format(null,'PURE_IDENTITY')" alias="PURE_IDENTITY" start-index="7" stop-index="59" literal-start-index="7" literal-stop-index="59">
                <literalText>wi.code.format(null,'PURE_IDENTITY')</literalText>
                <expr>
                    <function function-name="format" text="wi.code.format(null,'PURE_IDENTITY')" start-index="7" stop-index="42" literal-start-index="7" literal-stop-index="42">
                        <parameter>
                            <literal-expression value="null" start-index="22" stop-index="25" literal-start-index="22" literal-stop-index="25" />
                        </parameter>
                        <parameter>
                            <literal-expression value="PURE_IDENTITY" start-index="27" stop-index="41" literal-start-index="27" literal-stop-index="41" />
                        </parameter>
                        <literalText>wi.code.format(null,'PURE_IDENTITY')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="wi" name="warehouse_info" start-index="66" stop-index="82" literal-start-index="66" literal-stop-index="82" />
        </from>
    </select>

    <select sql-case-id="select_with_xml_is_schema_valid_function">
        <projections start-index="7" stop-index="86" literal-start-index="7" literal-stop-index="86">
            <expression-projection text="x.xmlcol.isSchemaValid('http://www.example.com/schemas/ipo.xsd','purchaseOrder')" start-index="7" stop-index="86" literal-start-index="7" literal-stop-index="86">
                <expr>
                    <function function-name="isSchemaValid" text="x.xmlcol.isSchemaValid('http://www.example.com/schemas/ipo.xsd','purchaseOrder')" start-index="7" stop-index="86" literal-start-index="7" literal-stop-index="86">
                        <parameter>
                            <literal-expression value="http://www.example.com/schemas/ipo.xsd" start-index="30" stop-index="69" literal-start-index="30" literal-stop-index="69"/>
                        </parameter>
                        <parameter>
                            <literal-expression value="purchaseOrder" start-index="71" stop-index="85" literal-start-index="71" literal-stop-index="85"/>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="x" name="po_tab" start-index="93" stop-index="100" literal-start-index="93" literal-stop-index="100"/>
        </from>
    </select>

    <select sql-case-id="select_with_last_value_function">
        <projections start-index="7" stop-index="71" literal-start-index="7" literal-stop-index="71">
            <expression-projection text="LAST_VALUE(AGE IGNORE NULLS) OVER (PARTITION BY AGE ORDER BY AGE)" start-index="7" stop-index="71" literal-start-index="7" literal-stop-index="71">
                <literalText>LAST_VALUE(AGE IGNORE NULLS) OVER (PARTITION BY AGE ORDER BY AGE)</literalText>
                <expr>
                    <function function-name="LAST_VALUE" text="LAST_VALUE(AGE IGNORE NULLS) OVER (PARTITION BY AGE ORDER BY AGE)" start-index="7" stop-index="71" literal-start-index="7" literal-stop-index="71">
                        <parameter>
                            <column name="AGE" start-index="18" stop-index="20" literal-start-index="18" literal-stop-index="20" />
                        </parameter>
                        <literalText>LAST_VALUE(AGE IGNORE NULLS) OVER (PARTITION BY AGE ORDER BY AGE)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="TEST" start-index="78" stop-index="81" literal-start-index="78" literal-stop-index="81" />
        </from>
    </select>

    <select sql-case-id="select_with_connect_by_root">
        <projections start-index="7" stop-index="41" literal-start-index="7" literal-stop-index="41">
            <column-projection alias="Manager" name="last_name" start-index="23" stop-index="41" literal-start-index="23" literal-stop-index="41"/>
        </projections>
        <from>
            <simple-table name="employees" start-index="48" stop-index="56" literal-start-index="48" literal-stop-index="56"/>
        </from>
    </select>
    
    <select sql-case-id="select_with_ntile_function">
        <projections start-index="7" stop-index="54" literal-start-index="7" literal-stop-index="54">
            <expression-projection text="NTILE(4) OVER (ORDER BY salary DESC)" alias="quartile" start-index="7" stop-index="54" literal-start-index="7" literal-stop-index="54">
                <literalText>NTILE(4) OVER (ORDER BY salary DESC)</literalText>
                <expr>
                    <function function-name="NTILE" text="NTILE(4) OVER (ORDER BY salary DESC)" start-index="7" stop-index="42" literal-start-index="7" literal-stop-index="42">
                        <parameter>
                            <literal-expression value="4" start-index="13" stop-index="13" literal-start-index="13" literal-stop-index="13" />
                        </parameter>
                        <literalText>NTILE(4) OVER (ORDER BY salary DESC)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="61" stop-index="69" literal-start-index="61" literal-stop-index="69" />
        </from>
        <where start-index="71" stop-index="95" literal-start-index="71" literal-stop-index="95">
            <expr>
                <binary-operation-expression start-index="77" stop-index="95" literal-start-index="77" literal-stop-index="95">
                    <left>
                        <column name="department_id" start-index="77" stop-index="89" literal-start-index="77" literal-stop-index="89" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="100" start-index="93" stop-index="95" literal-start-index="93" literal-stop-index="95" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="last_name" order-direction="ASC" start-index="106" stop-index="114" literal-start-index="106" literal-stop-index="114" />
        </order-by>
    </select>

    <select sql-case-id="select_with_percentile_functions">
        <projections start-index="7" stop-index="163" literal-start-index="7" literal-stop-index="163">
            <column-projection name="department_id" start-index="7" stop-index="19" literal-start-index="7" literal-stop-index="19" />
            <expression-projection text="PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary DESC)" alias="Median cont" start-index="22" stop-index="91" literal-start-index="22" literal-stop-index="91" />
            <expression-projection text="PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY salary DESC)" alias="Median disc" start-index="94" stop-index="163" literal-start-index="94" literal-stop-index="163" />
        </projections>
        <from>
            <simple-table name="employees" start-index="170" stop-index="178" literal-start-index="170" literal-stop-index="178" />
        </from>
        <group-by>
            <column-item name="department_id" order-direction="ASC" start-index="189" stop-index="201" literal-start-index="189" literal-stop-index="201" />
        </group-by>
    </select>

    <select sql-case-id="select_with_keep_clause">
        <projections start-index="7" stop-index="215" literal-start-index="7" literal-stop-index="215">
            <column-projection name="salary" start-index="7" stop-index="12" literal-start-index="7" literal-stop-index="12" />
            <aggregation-projection type="MIN" expression="MIN(salary) KEEP (DENSE_RANK FIRST ORDER BY commission_pct) OVER (PARTITION BY department_id)" alias="Worst" start-index="14" stop-index="106" literal-start-index="14" literal-stop-index="106" />
            <aggregation-projection type="MAX" expression="MAX(salary) KEEP (DENSE_RANK LAST ORDER BY commission_pct) OVER (PARTITION BY department_id)" alias="Best" start-index="117" stop-index="208" literal-start-index="117" literal-stop-index="208" />
        </projections>
        <from>
            <simple-table name="employees" start-index="222" stop-index="230" literal-start-index="222" literal-stop-index="230" />
        </from>
        <order-by>
            <column-item name="department_id" order-direction="ASC" start-index="241" stop-index="253" literal-start-index="241" literal-stop-index="253" />
        </order-by>
    </select>

    <select sql-case-id="select_with_corr_function">
        <projections start-index="7" stop-index="52" literal-start-index="7" literal-stop-index="52">
            <column-projection name="employee_id" start-index="7" stop-index="17" literal-start-index="7" literal-stop-index="17" />
            <expression-projection text="CORR(SYSDATE - hire_date, salary)" start-index="20" stop-index="52" literal-start-index="20" literal-stop-index="52">
                <literalText>CORR(SYSDATE - hire_date, salary)</literalText>
                <expr>
                    <function function-name="CORR" text="CORR(SYSDATE - hire_date, salary)" start-index="20" stop-index="52" literal-start-index="20" literal-stop-index="52">
                        <parameter>
                            <binary-operation-expression start-index="25" stop-index="43" literal-start-index="25" literal-stop-index="43">
                                <left>
                                    <column name="SYSDATE" start-index="25" stop-index="31" literal-start-index="25" literal-stop-index="31" />
                                </left>
                                <operator>-</operator>
                                <right>
                                    <column name="hire_date" start-index="35" stop-index="43" literal-start-index="35" literal-stop-index="43" />
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <column name="salary" start-index="46" stop-index="51" literal-start-index="46" literal-stop-index="51" />
                        </parameter>
                        <literalText>CORR(SYSDATE - hire_date, salary)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="59" stop-index="67" literal-start-index="59" literal-stop-index="67" />
        </from>
        <where start-index="69" stop-index="99" literal-start-index="69" literal-stop-index="99">
            <expr>
                <in-expression start-index="75" stop-index="99" literal-start-index="75" literal-stop-index="99">
                    <not>false</not>
                    <left>
                        <column name="department_id" start-index="75" stop-index="87" literal-start-index="75" literal-stop-index="87" />
                    </left>
                    <right>
                        <list-expression start-index="92" stop-index="99" literal-start-index="92" literal-stop-index="99">
                            <items>
                                <literal-expression value="50" start-index="93" stop-index="94" literal-start-index="93" literal-stop-index="94" />
                            </items>
                            <items>
                                <literal-expression value="80" start-index="97" stop-index="98" literal-start-index="97" literal-stop-index="98" />
                            </items>
                        </list-expression>
                    </right>
                </in-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="employee_id" order-direction="ASC" start-index="110" stop-index="120" literal-start-index="110" literal-stop-index="120" />
        </order-by>
    </select>

    <select sql-case-id="select_with_trim_function_multi">
        <projections start-index="7" stop-index="203" literal-start-index="7" literal-stop-index="203">
            <expression-projection text="TRIM('  derby ')" start-index="7" stop-index="22" literal-start-index="7" literal-stop-index="22">
                <literalText>TRIM(' derby ')</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM('  derby ')" start-index="7" stop-index="22" literal-start-index="7" literal-stop-index="22">
                        <parameter>
                            <literal-expression value="  derby " start-index="12" stop-index="21" literal-start-index="12" literal-stop-index="21" />
                        </parameter>
                        <literalText>TRIM(' derby ')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="TRIM(BOTH ' ' FROM '  derby ')" start-index="25" stop-index="54" literal-start-index="25" literal-stop-index="54">
                <literalText>TRIM(BOTH ' ' FROM ' derby ')</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM(BOTH ' ' FROM '  derby ')" start-index="25" stop-index="54" literal-start-index="25" literal-stop-index="54">
                        <parameter>
                            <literal-expression value="  derby " start-index="44" stop-index="53" literal-start-index="44" literal-stop-index="53" />
                        </parameter>
                        <literalText>TRIM(BOTH ' ' FROM ' derby ')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="TRIM(TRAILING ' ' FROM '  derby ')" start-index="57" stop-index="90" literal-start-index="57" literal-stop-index="90">
                <literalText>TRIM(TRAILING ' ' FROM ' derby ')</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM(TRAILING ' ' FROM '  derby ')" start-index="57" stop-index="90" literal-start-index="57" literal-stop-index="90">
                        <parameter>
                            <literal-expression value="  derby " start-index="80" stop-index="89" literal-start-index="80" literal-stop-index="89" />
                        </parameter>
                        <literalText>TRIM(TRAILING ' ' FROM ' derby ')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="TRIM(cast (null as char(1)) FROM '  derby ')" start-index="93" stop-index="136" literal-start-index="93" literal-stop-index="136">
                <literalText>TRIM(cast (null as char(1)) FROM ' derby ')</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM(cast (null as char(1)) FROM '  derby ')" start-index="93" stop-index="136" literal-start-index="93" literal-stop-index="136">
                        <parameter>
                            <literal-expression value="  derby " start-index="126" stop-index="135" literal-start-index="126" literal-stop-index="135" />
                        </parameter>
                        <literalText>TRIM(cast (null as char(1)) FROM ' derby ')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="TRIM(' ' FROM cast(null as varchar(30)))" start-index="139" stop-index="178" literal-start-index="139" literal-stop-index="178">
                <literalText>TRIM(' ' FROM cast(null as varchar(30)))</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM(' ' FROM cast(null as varchar(30)))" start-index="139" stop-index="178" literal-start-index="139" literal-stop-index="178">
                        <parameter>
                            <function function-name="cast" text="cast(null as varchar(30))" start-index="153" stop-index="177" literal-start-index="153" literal-stop-index="177">
                                <parameter>
                                    <literal-expression value="null" start-index="158" stop-index="161" literal-start-index="158" literal-stop-index="161" />
                                </parameter>
                                <parameter>
                                    <data-type value="varchar" start-index="166" stop-index="176" />
                                </parameter>
                                <literalText>cast(null as varchar(30))</literalText>
                            </function>
                        </parameter>
                        <literalText>TRIM(' ' FROM cast(null as varchar(30)))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="TRIM('y' FROM ' derby')" start-index="181" stop-index="203" literal-start-index="181" literal-stop-index="203">
                <literalText>TRIM('y' FROM ' derby')</literalText>
                <expr>
                    <function function-name="TRIM" text="TRIM('y' FROM ' derby')" start-index="181" stop-index="203" literal-start-index="181" literal-stop-index="203">
                        <parameter>
                            <literal-expression value=" derby" start-index="195" stop-index="202" literal-start-index="195" literal-stop-index="202" />
                        </parameter>
                        <literalText>TRIM('y' FROM ' derby')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="210" stop-index="218" literal-start-index="210" literal-stop-index="218" />
        </from>
    </select>

    <select sql-case-id="select_with_trim_function_simple">
        <projections start-index="7" stop-index="57">
            <expression-projection text="TRIM( '.,! ' FROM '     #     test    .')" start-index="7" stop-index="57" alias="Result">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="47" text="TRIM( '.,! ' FROM '     #     test    .')">
                        <parameter>
                            <literal-expression value=".,! " start-index="13" stop-index="18" />
                        </parameter>
                        <parameter>
                            <literal-expression value="     #     test    ." start-index="25" stop-index="46" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_trim_function_leading">
        <projections start-index="7" stop-index="66">
            <expression-projection text="TRIM(LEADING '.,! ' FROM  '     .#     test    .')" start-index="7" stop-index="66" alias="Result">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="56" text="TRIM(LEADING '.,! ' FROM  '     .#     test    .')">
                        <parameter>
                            <literal-expression value="LEADING" start-index="12" stop-index="18" />
                        </parameter>
                        <parameter>
                            <literal-expression value=".,! " start-index="20" stop-index="25" />
                        </parameter>
                        <parameter>
                            <literal-expression value="     .#     test    ." start-index="33" stop-index="55" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_trim_function_trailing">
        <projections start-index="7" stop-index="66">
            <expression-projection text="TRIM(TRAILING '.,! ' FROM '     .#     test    .')" start-index="7" stop-index="66" alias="Result">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="56" text="TRIM(TRAILING '.,! ' FROM '     .#     test    .')">
                        <parameter>
                            <literal-expression value="TRAILING" start-index="12" stop-index="19" />
                        </parameter>
                        <parameter>
                            <literal-expression value=".,! " start-index="21" stop-index="26" />
                        </parameter>
                        <parameter>
                            <literal-expression value="     .#     test    ." start-index="33" stop-index="55" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_trim_function_both">
        <projections start-index="7" stop-index="49">
            <expression-projection text="TRIM(BOTH '123' FROM '123abc123')" start-index="7" stop-index="49" alias="Result">
                <expr>
                    <function function-name="TRIM" start-index="7" stop-index="39" text="TRIM(BOTH '123' FROM '123abc123')">
                        <parameter>
                            <literal-expression value="BOTH" start-index="12" stop-index="15" />
                        </parameter>
                        <parameter>
                            <literal-expression value="123" start-index="17" stop-index="21" />
                        </parameter>
                        <parameter>
                            <literal-expression value="123abc123" start-index="28" stop-index="38" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_ratio_to_report_function">
        <projections start-index="7" stop-index="79" literal-start-index="7" literal-stop-index="79">
            <expression-projection text="TO_CHAR(RATIO_TO_REPORT(amount_sold) OVER (), '9.999')" alias="RATIO_TO_REPORT" start-index="7" stop-index="79" literal-start-index="7" literal-stop-index="79">
                <literalText>TO_CHAR(RATIO_TO_REPORT(amount_sold) OVER (), '9.999')</literalText>
                <expr>
                    <function function-name="TO_CHAR" text="TO_CHAR(RATIO_TO_REPORT(amount_sold) OVER (), '9.999')" start-index="7" stop-index="60" literal-start-index="7" literal-stop-index="60">
                        <parameter>
                            <function function-name="RATIO_TO_REPORT" text="RATIO_TO_REPORT(amount_sold) OVER ()" start-index="15" stop-index="50" literal-start-index="15" literal-stop-index="50">
                                <parameter>
                                    <column name="amount_sold" start-index="31" stop-index="41" literal-start-index="31" literal-stop-index="41" />
                                </parameter>
                                <literalText>RATIO_TO_REPORT(amount_sold) OVER ()</literalText>
                            </function>
                        </parameter>
                        <parameter>
                            <literal-expression value="9.999" start-index="53" stop-index="59" literal-start-index="53" literal-stop-index="59" />
                        </parameter>
                        <literalText>TO_CHAR(RATIO_TO_REPORT(amount_sold) OVER (), '9.999')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="s" name="sales" start-index="86" stop-index="92" literal-start-index="86" literal-stop-index="92" />
        </from>
        <group-by>
            <column-item name="channel_desc" order-direction="ASC" start-index="103" stop-index="116" literal-start-index="103" literal-stop-index="116">
                <owner name="s" start-index="103" stop-index="103" literal-start-index="103" literal-stop-index="103" />
            </column-item>
        </group-by>
    </select>

    <select sql-case-id="select_with_sys_xmlagg_and_xmlgen">
        <projections start-index="7" stop-index="54" literal-start-index="7" literal-stop-index="54">
            <expression-projection text="SYS_XMLAGG(last_name)" alias="a" start-index="7" stop-index="29" literal-start-index="7" literal-stop-index="29">
                <literalText>SYS_XMLAGG(last_name)</literalText>
                <expr>
                    <function function-name="SYS_XMLAGG" text="SYS_XMLAGG(last_name)" start-index="7" stop-index="27" literal-start-index="7" literal-stop-index="27">
                        <parameter>
                            <column name="last_name" start-index="18" stop-index="26" literal-start-index="18" literal-stop-index="26" />
                        </parameter>
                        <literalText>SYS_XMLAGG(last_name)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="SYS_XMLGEN(last_name)" alias="b" start-index="32" stop-index="54" literal-start-index="32" literal-stop-index="54">
                <literalText>SYS_XMLGEN(last_name)</literalText>
                <expr>
                    <function function-name="SYS_XMLGEN" text="SYS_XMLGEN(last_name)" start-index="32" stop-index="52" literal-start-index="32" literal-stop-index="52">
                        <parameter>
                            <column name="last_name" start-index="43" stop-index="51" literal-start-index="43" literal-stop-index="51" />
                        </parameter>
                        <literalText>SYS_XMLGEN(last_name)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="61" stop-index="69" literal-start-index="61" literal-stop-index="69" />
        </from>
        <where start-index="71" stop-index="95" literal-start-index="71" literal-stop-index="95">
            <expr>
                <binary-operation-expression start-index="77" stop-index="95" literal-start-index="77" literal-stop-index="95">
                    <left>
                        <column name="last_name" start-index="77" stop-index="85" literal-start-index="77" literal-stop-index="85" />
                    </left>
                    <operator>LIKE</operator>
                    <right>
                        <list-expression start-index="92" stop-index="95" literal-start-index="92" literal-stop-index="95">
                            <items>
                                <literal-expression value="R%" start-index="92" stop-index="95" literal-start-index="92" literal-stop-index="95" />
                            </items>
                        </list-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="xmlagg" order-direction="ASC" start-index="106" stop-index="111"/>
        </order-by>
    </select>

    <select sql-case-id="select_with_cover_pop_and_covar_samp">
        <projections start-index="7" stop-index="203" literal-start-index="7" literal-stop-index="203">
            <column-projection name="product_id" start-index="7" stop-index="16" literal-start-index="7" literal-stop-index="16" />
            <column-projection name="supplier_id" start-index="19" stop-index="29" literal-start-index="19" literal-stop-index="29" />
            <expression-projection text="COVAR_POP(list_price, min_price)  OVER (ORDER BY product_id, supplier_id)" alias="CUM_COVP" start-index="32" stop-index="116" literal-start-index="32" literal-stop-index="116">
                <literalText>COVAR_POP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)</literalText>
                <expr>
                    <function function-name="COVAR_POP" text="COVAR_POP(list_price, min_price)  OVER (ORDER BY product_id, supplier_id)" start-index="32" stop-index="104" literal-start-index="32" literal-stop-index="104">
                        <parameter>
                            <column name="list_price" start-index="42" stop-index="51" literal-start-index="42" literal-stop-index="51" />
                        </parameter>
                        <parameter>
                            <column name="min_price" start-index="54" stop-index="62" literal-start-index="54" literal-stop-index="62" />
                        </parameter>
                        <literalText>COVAR_POP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="COVAR_SAMP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)" alias="CUM_COVS" start-index="119" stop-index="203" literal-start-index="119" literal-stop-index="203">
                <literalText>COVAR_SAMP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)</literalText>
                <expr>
                    <function function-name="COVAR_SAMP" text="COVAR_SAMP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)" start-index="119" stop-index="191" literal-start-index="119" literal-stop-index="191">
                        <parameter>
                            <column name="list_price" start-index="130" stop-index="139" literal-start-index="130" literal-stop-index="139" />
                        </parameter>
                        <parameter>
                            <column name="min_price" start-index="142" stop-index="150" literal-start-index="142" literal-stop-index="150" />
                        </parameter>
                        <literalText>COVAR_SAMP(list_price, min_price) OVER (ORDER BY product_id, supplier_id)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="p" name="product_information" start-index="211" stop-index="231" literal-start-index="211" literal-stop-index="231" />
        </from>
        <where start-index="233" stop-index="254" literal-start-index="233" literal-stop-index="254">
            <expr>
                <binary-operation-expression start-index="239" stop-index="254" literal-start-index="239" literal-stop-index="254">
                    <left>
                        <column name="category_id" start-index="239" stop-index="249" literal-start-index="239" literal-stop-index="249" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="29" start-index="253" stop-index="254" literal-start-index="253" literal-stop-index="254" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="product_id" order-direction="ASC" start-index="265" stop-index="274" literal-start-index="265" literal-stop-index="274" />
            <column-item name="supplier_id" order-direction="ASC" start-index="277" stop-index="287" literal-start-index="277" literal-stop-index="287" />
        </order-by>
    </select>

    <select sql-case-id="select_with_percent_rank_function">
        <projections start-index="7" stop-index="116" literal-start-index="7" literal-stop-index="116">
            <column-projection name="department_id" start-index="7" stop-index="19" literal-start-index="7" literal-stop-index="19" />
            <column-projection name="last_name" start-index="22" stop-index="30" literal-start-index="22" literal-stop-index="30" />
            <column-projection name="salary" start-index="33" stop-index="38" literal-start-index="33" literal-stop-index="38" />
            <expression-projection text="PERCENT_RANK()  OVER (PARTITION BY department_id ORDER BY salary DESC)" alias="pr" start-index="41" stop-index="116" literal-start-index="41" literal-stop-index="116">
                <literalText>PERCENT_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC)</literalText>
                <expr>
                    <function function-name="PERCENT_RANK" text="PERCENT_RANK()  OVER (PARTITION BY department_id ORDER BY salary DESC)" start-index="41" stop-index="110" literal-start-index="41" literal-stop-index="110">
                        <literalText>PERCENT_RANK() OVER (PARTITION BY department_id ORDER BY salary DESC)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="123" stop-index="131" literal-start-index="123" literal-stop-index="131" />
        </from>
        <order-by>
            <column-item name="pr" order-direction="ASC" start-index="142" stop-index="143" literal-start-index="142" literal-stop-index="143" />
            <column-item name="salary" order-direction="ASC" start-index="146" stop-index="151" literal-start-index="146" literal-stop-index="151" />
            <column-item name="last_name" order-direction="ASC" start-index="154" stop-index="162" literal-start-index="154" literal-stop-index="162" />
        </order-by>
    </select>

    <select sql-case-id="select_with_rank_function">
        <projections start-index="7" stop-index="76" literal-start-index="7" literal-stop-index="76">
            <expression-projection text="RANK(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)" alias="Rank" start-index="7" stop-index="76" literal-start-index="7" literal-stop-index="76">
                <literalText>RANK(15500, .05) WITHIN GROUP (ORDER BY salary, commission_pct)</literalText>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="employees" start-index="83" stop-index="91" literal-start-index="83" literal-stop-index="91" />
        </from>
    </select>

    <select sql-case-id="select_with_rownumber_function">
        <projections start-index="7" stop-index="50" literal-start-index="7" literal-stop-index="50">
            <column-projection name="department_id" start-index="7" stop-index="19" literal-start-index="7" literal-stop-index="19" />
            <column-projection name="first_name" start-index="22" stop-index="31" literal-start-index="22" literal-stop-index="31" />
            <column-projection name="last_name" start-index="34" stop-index="42" literal-start-index="34" literal-stop-index="42" />
            <column-projection name="salary" start-index="45" stop-index="50" literal-start-index="45" literal-stop-index="50" />
        </projections>
        <from>
            <subquery-table start-index="57" stop-index="197">
                <subquery>
                    <select>
                        <projections start-index="65" stop-index="180" literal-start-index="65" literal-stop-index="180">
                            <column-projection name="department_id" start-index="65" stop-index="77" literal-start-index="65" literal-stop-index="77" />
                            <column-projection name="first_name" start-index="80" stop-index="89" literal-start-index="80" literal-stop-index="89" />
                            <column-projection name="last_name" start-index="92" stop-index="100" literal-start-index="92" literal-stop-index="100" />
                            <column-projection name="salary" start-index="103" stop-index="108" literal-start-index="103" literal-stop-index="108" />
                            <expression-projection text="ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY salary desc)" alias="rn" start-index="111" stop-index="180" literal-start-index="111" literal-stop-index="180">
                                <literalText>ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY salary desc)</literalText>
                                <expr>
                                    <function function-name="ROW_NUMBER" text="ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY salary desc)" start-index="111" stop-index="177" literal-start-index="111" literal-stop-index="177">
                                        <literalText>ROW_NUMBER() OVER (PARTITION BY department_id ORDER BY salary desc)</literalText>
                                    </function>
                                </expr>
                            </expression-projection>
                        </projections>
                        <from>
                            <simple-table name="employees" start-index="188" stop-index="196" literal-start-index="188" literal-stop-index="196" />
                        </from>
                    </select>
                </subquery>
            </subquery-table>
        </from>
        <where start-index="199" stop-index="210" literal-start-index="199" literal-stop-index="210">
            <expr>
                <binary-operation-expression start-index="205" stop-index="210" literal-start-index="205" literal-stop-index="210">
                    <left>
                        <column name="rn" start-index="205" stop-index="206" literal-start-index="205" literal-stop-index="206" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="3" start-index="210" stop-index="210" literal-start-index="210" literal-stop-index="210" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="department_id" order-direction="ASC" start-index="221" stop-index="233" literal-start-index="221" literal-stop-index="233" />
            <column-item name="salary" order-direction="DESC" start-index="236" stop-index="241" literal-start-index="236" literal-stop-index="241" />
            <column-item name="last_name" order-direction="ASC" start-index="249" stop-index="257" literal-start-index="249" literal-stop-index="257" />
        </order-by>
    </select>

    <select sql-case-id="select_with_xml_functions">
        <projections start-index="7" stop-index="830" literal-start-index="7" literal-stop-index="830">
            <expression-projection text="INSERTCHILDXML(warehouse_spec, '/Warehouse/Building', 'Owner', XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;'))" start-index="7" stop-index="104" literal-start-index="7" literal-stop-index="104">
                <literalText>INSERTCHILDXML(warehouse_spec, '/Warehouse/Building', 'Owner', XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="INSERTCHILDXML" text="INSERTCHILDXML(warehouse_spec, '/Warehouse/Building', 'Owner', XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;'))" start-index="7" stop-index="104" literal-start-index="7" literal-stop-index="104">
                        <parameter>
                            <column name="warehouse_spec" start-index="22" stop-index="35" literal-start-index="22" literal-stop-index="35" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building" start-index="38" stop-index="58" literal-start-index="38" literal-stop-index="58" />
                        </parameter>
                        <parameter>
                            <literal-expression value="Owner" start-index="61" stop-index="67" literal-start-index="61" literal-stop-index="67" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;')" start-index="70" stop-index="103" literal-start-index="70" literal-stop-index="103">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;LesserCo&lt;/Owner&gt;" start-index="78" stop-index="102" literal-start-index="78" literal-stop-index="102" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>INSERTCHILDXML(warehouse_spec, '/Warehouse/Building', 'Owner', XMLType('&lt;Owner&gt;LesserCo&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="SYS_DBURIGEN(employee_id, email)" start-index="107" stop-index="138" literal-start-index="107" literal-stop-index="138">
                <literalText>SYS_DBURIGEN(employee_id, email)</literalText>
                <expr>
                    <function function-name="SYS_DBURIGEN" text="SYS_DBURIGEN(employee_id, email)" start-index="107" stop-index="138" literal-start-index="107" literal-stop-index="138">
                        <parameter>
                            <column name="employee_id" start-index="120" stop-index="130" literal-start-index="120" literal-stop-index="130" />
                        </parameter>
                        <parameter>
                            <column name="email" start-index="133" stop-index="137" literal-start-index="133" literal-stop-index="137" />
                        </parameter>
                        <literalText>SYS_DBURIGEN(employee_id, email)</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="INSERTCHILDXMLAFTER(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="141" stop-index="247" literal-start-index="141" literal-stop-index="247">
                <literalText>INSERTCHILDXMLAFTER(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="INSERTCHILDXMLAFTER" text="INSERTCHILDXMLAFTER(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="141" stop-index="247" literal-start-index="141" literal-stop-index="247">
                        <parameter>
                            <column name="warehouse_spec" start-index="161" stop-index="174" literal-start-index="161" literal-stop-index="174" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building" start-index="177" stop-index="197" literal-start-index="177" literal-stop-index="197" />
                        </parameter>
                        <parameter>
                            <literal-expression value="Owner[2]" start-index="199" stop-index="208" literal-start-index="199" literal-stop-index="208" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')" start-index="211" stop-index="246" literal-start-index="211" literal-stop-index="246">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;" start-index="219" stop-index="245" literal-start-index="219" literal-stop-index="245" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>INSERTCHILDXMLAFTER(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="INSERTCHILDXMLBEFORE(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="250" stop-index="357" literal-start-index="250" literal-stop-index="357">
                <literalText>INSERTCHILDXMLBEFORE(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="INSERTCHILDXMLBEFORE" text="INSERTCHILDXMLBEFORE(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="250" stop-index="357" literal-start-index="250" literal-stop-index="357">
                        <parameter>
                            <column name="warehouse_spec" start-index="271" stop-index="284" literal-start-index="271" literal-stop-index="284" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building" start-index="287" stop-index="307" literal-start-index="287" literal-stop-index="307" />
                        </parameter>
                        <parameter>
                            <literal-expression value="Owner[2]" start-index="309" stop-index="318" literal-start-index="309" literal-stop-index="318" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')" start-index="321" stop-index="356" literal-start-index="321" literal-stop-index="356">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;" start-index="329" stop-index="355" literal-start-index="329" literal-stop-index="355" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>INSERTCHILDXMLBEFORE(warehouse_spec, '/Warehouse/Building','Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="INSERTXMLAFTER(warehouse_spec,'/Warehouse/Building/Owner[1]', XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;'))" start-index="360" stop-index="459" literal-start-index="360" literal-stop-index="459">
                <literalText>INSERTXMLAFTER(warehouse_spec,'/Warehouse/Building/Owner[1]', XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="INSERTXMLAFTER" text="INSERTXMLAFTER(warehouse_spec,'/Warehouse/Building/Owner[1]', XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;'))" start-index="360" stop-index="459" literal-start-index="360" literal-stop-index="459">
                        <parameter>
                            <column name="warehouse_spec" start-index="375" stop-index="388" literal-start-index="375" literal-stop-index="388" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building/Owner[1]" start-index="390" stop-index="419" literal-start-index="390" literal-stop-index="419" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;')" start-index="422" stop-index="458" literal-start-index="422" literal-stop-index="458">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;SecondOwner&lt;/Owner&gt;" start-index="430" stop-index="457" literal-start-index="430" literal-stop-index="457" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>INSERTXMLAFTER(warehouse_spec,'/Warehouse/Building/Owner[1]', XMLType('&lt;Owner&gt;SecondOwner&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="INSERTXMLBEFORE(warehouse_spec, '/Warehouse/Building/Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="462" stop-index="562" literal-start-index="462" literal-stop-index="562">
                <literalText>INSERTXMLBEFORE(warehouse_spec, '/Warehouse/Building/Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="INSERTXMLBEFORE" text="INSERTXMLBEFORE(warehouse_spec, '/Warehouse/Building/Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))" start-index="462" stop-index="562" literal-start-index="462" literal-stop-index="562">
                        <parameter>
                            <column name="warehouse_spec" start-index="478" stop-index="491" literal-start-index="478" literal-stop-index="491" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building/Owner[2]" start-index="494" stop-index="523" literal-start-index="494" literal-stop-index="523" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')" start-index="526" stop-index="561" literal-start-index="526" literal-stop-index="561">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;" start-index="534" stop-index="560" literal-start-index="534" literal-stop-index="560" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>INSERTXMLBEFORE(warehouse_spec, '/Warehouse/Building/Owner[2]', XMLType('&lt;Owner&gt;ThirdOwner&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="EXTRACT(warehouse_spec, '/Warehouse/Docks')" alias="Number of Docks" start-index="565" stop-index="625" literal-start-index="565" literal-stop-index="625">
                <literalText>EXTRACT(warehouse_spec, '/Warehouse/Docks')</literalText>
                <expr>
                    <function function-name="EXTRACT" text="EXTRACT(warehouse_spec, '/Warehouse/Docks')" start-index="565" stop-index="607" literal-start-index="565" literal-stop-index="607">
                        <parameter>
                            <column name="warehouse_spec" start-index="573" stop-index="586" literal-start-index="573" literal-stop-index="586" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Docks" start-index="589" stop-index="606" literal-start-index="589" literal-stop-index="606" />
                        </parameter>
                        <literalText>EXTRACT(warehouse_spec, '/Warehouse/Docks')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="EXTRACTVALUE(e.warehouse_spec, '/Warehouse/Docks')" alias="Docks" start-index="628" stop-index="685" literal-start-index="628" literal-stop-index="685">
                <literalText>EXTRACTVALUE(e.warehouse_spec, '/Warehouse/Docks')</literalText>
                <expr>
                    <function function-name="EXTRACTVALUE" text="EXTRACTVALUE(e.warehouse_spec, '/Warehouse/Docks')" start-index="628" stop-index="677" literal-start-index="628" literal-stop-index="677">
                        <parameter>
                            <column name="warehouse_spec" start-index="641" stop-index="656" literal-start-index="641" literal-stop-index="656">
                                <owner name="e" start-index="641" stop-index="641" literal-start-index="641" literal-stop-index="641" />
                            </column>
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Docks" start-index="659" stop-index="676" literal-start-index="659" literal-stop-index="676" />
                        </parameter>
                        <literalText>EXTRACTVALUE(e.warehouse_spec, '/Warehouse/Docks')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="APPENDCHILDXML(warehouse_spec, 'Warehouse/Building', XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;'))" start-index="688" stop-index="774" literal-start-index="688" literal-stop-index="774">
                <literalText>APPENDCHILDXML(warehouse_spec, 'Warehouse/Building', XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;'))</literalText>
                <expr>
                    <function function-name="APPENDCHILDXML" text="APPENDCHILDXML(warehouse_spec, 'Warehouse/Building', XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;'))" start-index="688" stop-index="774" literal-start-index="688" literal-stop-index="774">
                        <parameter>
                            <column name="warehouse_spec" start-index="703" stop-index="716" literal-start-index="703" literal-stop-index="716" />
                        </parameter>
                        <parameter>
                            <literal-expression value="Warehouse/Building" start-index="719" stop-index="738" literal-start-index="719" literal-stop-index="738" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLType" text="XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;')" start-index="741" stop-index="773" literal-start-index="741" literal-stop-index="773">
                                <parameter>
                                    <literal-expression value="&lt;Owner&gt;Grandco&lt;/Owner&gt;" start-index="749" stop-index="772" literal-start-index="749" literal-stop-index="772" />
                                </parameter>
                                <literalText>XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;')</literalText>
                            </function>
                        </parameter>
                        <literalText>APPENDCHILDXML(warehouse_spec, 'Warehouse/Building', XMLType('&lt;Owner&gt;Grandco&lt;/Owner&gt;'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="DELETEXML(warehouse_spec, '/Warehouse/Building/Owner')" start-index="777" stop-index="830" literal-start-index="777" literal-stop-index="830">
                <literalText>DELETEXML(warehouse_spec, '/Warehouse/Building/Owner')</literalText>
                <expr>
                    <function function-name="DELETEXML" text="DELETEXML(warehouse_spec, '/Warehouse/Building/Owner')" start-index="777" stop-index="830" literal-start-index="777" literal-stop-index="830">
                        <parameter>
                            <column name="warehouse_spec" start-index="787" stop-index="800" literal-start-index="787" literal-stop-index="800" />
                        </parameter>
                        <parameter>
                            <literal-expression value="/Warehouse/Building/Owner" start-index="803" stop-index="829" literal-start-index="803" literal-stop-index="829" />
                        </parameter>
                        <literalText>DELETEXML(warehouse_spec, '/Warehouse/Building/Owner')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="warehouses" start-index="839" stop-index="848" literal-start-index="839" literal-stop-index="848" />
        </from>
        <where start-index="852" stop-index="907" literal-start-index="852" literal-stop-index="907">
            <expr>
                <binary-operation-expression start-index="858" stop-index="907" literal-start-index="858" literal-stop-index="907">
                    <left>
                        <function function-name="EXISTSNODE" text="EXISTSNODE(warehouse_spec, '/Warehouse/Docks')" start-index="858" stop-index="903" literal-start-index="858" literal-stop-index="903">
                            <parameter>
                                <column name="warehouse_spec" start-index="869" stop-index="882" literal-start-index="869" literal-stop-index="882" />
                            </parameter>
                            <parameter>
                                <literal-expression value="/Warehouse/Docks" start-index="885" stop-index="902" literal-start-index="885" literal-stop-index="902" />
                            </parameter>
                            <literalText>EXISTSNODE(warehouse_spec, '/Warehouse/Docks')</literalText>
                        </function>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="1" start-index="907" stop-index="907" literal-start-index="907" literal-stop-index="907" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="warehouse_id" order-direction="ASC" start-index="920" stop-index="931" literal-start-index="920" literal-stop-index="931" />
        </order-by>
    </select>

    <select sql-case-id="select_with_more_xml_functions">
        <projections start-index="7" stop-index="348" literal-start-index="7" literal-stop-index="348">
            <expression-projection text="XMLCOMMENT('OrderAnalysisComp imported, reconfigured, disassembled')" start-index="7" stop-index="74" literal-start-index="7" literal-stop-index="74">
                <literalText>XMLCOMMENT('OrderAnalysisComp imported, reconfigured, disassembled')</literalText>
                <expr>
                    <function function-name="XMLCOMMENT" text="XMLCOMMENT('OrderAnalysisComp imported, reconfigured, disassembled')" start-index="7" stop-index="74" literal-start-index="7" literal-stop-index="74">
                        <parameter>
                            <literal-expression value="OrderAnalysisComp imported, reconfigured, disassembled" start-index="18" stop-index="73" literal-start-index="18" literal-stop-index="73" />
                        </parameter>
                        <literalText>XMLCOMMENT('OrderAnalysisComp imported, reconfigured, disassembled')</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="XMLCONCAT(XMLELEMENT('First', e.first_name), XMLELEMENT('Last', e.last_name))" alias="Result" start-index="77" stop-index="165" literal-start-index="77" literal-stop-index="165">
                <literalText>XMLCONCAT(XMLELEMENT('First', e.first_name), XMLELEMENT('Last', e.last_name))</literalText>
                <expr>
                    <function function-name="XMLCONCAT" text="XMLCONCAT(XMLELEMENT('First', e.first_name), XMLELEMENT('Last', e.last_name))" start-index="77" stop-index="153" literal-start-index="77" literal-stop-index="153">
                        <parameter>
                            <function function-name="XMLELEMENT" text="XMLELEMENT('First', e.first_name)" start-index="87" stop-index="119" literal-start-index="87" literal-stop-index="119">
                                <parameter>
                                    <literal-expression value="First" start-index="98" stop-index="104" literal-start-index="98" literal-stop-index="104" />
                                </parameter>
                                <parameter>
                                    <column name="first_name" start-index="107" stop-index="118" literal-start-index="107" literal-stop-index="118">
                                        <owner name="e" start-index="107" stop-index="107" literal-start-index="107" literal-stop-index="107" />
                                    </column>
                                </parameter>
                                <literalText>XMLELEMENT('First', e.first_name)</literalText>
                            </function>
                        </parameter>
                        <parameter>
                            <function function-name="XMLELEMENT" text="XMLELEMENT('Last', e.last_name)" start-index="122" stop-index="152" literal-start-index="122" literal-stop-index="152">
                                <parameter>
                                    <literal-expression value="Last" start-index="133" stop-index="138" literal-start-index="133" literal-stop-index="138" />
                                </parameter>
                                <parameter>
                                    <column name="last_name" start-index="141" stop-index="151" literal-start-index="141" literal-stop-index="151">
                                        <owner name="e" start-index="141" stop-index="141" literal-start-index="141" literal-stop-index="141" />
                                    </column>
                                </parameter>
                                <literalText>XMLELEMENT('Last', e.last_name)</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLCONCAT(XMLELEMENT('First', e.first_name), XMLELEMENT('Last', e.last_name))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="XMLPATCH(XMLTYPE('xml'))" start-index="168" stop-index="191" literal-start-index="168" literal-stop-index="191">
                <literalText>XMLPATCH(XMLTYPE('xml'))</literalText>
                <expr>
                    <function function-name="XMLPATCH" text="XMLPATCH(XMLTYPE('xml'))" start-index="168" stop-index="191" literal-start-index="168" literal-stop-index="191">
                        <parameter>
                            <function function-name="XMLTYPE" text="XMLTYPE('xml')" start-index="177" stop-index="190" literal-start-index="177" literal-stop-index="190">
                                <parameter>
                                    <literal-expression value="xml" start-index="185" stop-index="189" literal-start-index="185" literal-stop-index="189" />
                                </parameter>
                                <literalText>XMLTYPE('xml')</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLPATCH(XMLTYPE('xml'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="XMLDIFF(XMLTYPE('xml'),XMLTYPE('xml2'))" start-index="194" stop-index="232" literal-start-index="194" literal-stop-index="232">
                <literalText>XMLDIFF(XMLTYPE('xml'),XMLTYPE('xml2'))</literalText>
                <expr>
                    <function function-name="XMLDIFF" text="XMLDIFF(XMLTYPE('xml'),XMLTYPE('xml2'))" start-index="194" stop-index="232" literal-start-index="194" literal-stop-index="232">
                        <parameter>
                            <function function-name="XMLTYPE" text="XMLTYPE('xml')" start-index="202" stop-index="215" literal-start-index="202" literal-stop-index="215">
                                <parameter>
                                    <literal-expression value="xml" start-index="210" stop-index="214" literal-start-index="210" literal-stop-index="214" />
                                </parameter>
                                <literalText>XMLTYPE('xml')</literalText>
                            </function>
                        </parameter>
                        <parameter>
                            <function function-name="XMLTYPE" text="XMLTYPE('xml2')" start-index="217" stop-index="231" literal-start-index="217" literal-stop-index="231">
                                <parameter>
                                    <literal-expression value="xml2" start-index="225" stop-index="230" literal-start-index="225" literal-stop-index="230" />
                                </parameter>
                                <literalText>XMLTYPE('xml2')</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLDIFF(XMLTYPE('xml'),XMLTYPE('xml2'))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="XMLELEMENT('Emp', XMLATTRIBUTES(e.employee_id, e.last_name))" start-index="235" stop-index="294" literal-start-index="235" literal-stop-index="294">
                <literalText>XMLELEMENT('Emp', XMLATTRIBUTES(e.employee_id, e.last_name))</literalText>
                <expr>
                    <function function-name="XMLELEMENT" text="XMLELEMENT('Emp', XMLATTRIBUTES(e.employee_id, e.last_name))" start-index="235" stop-index="294" literal-start-index="235" literal-stop-index="294">
                        <parameter>
                            <literal-expression value="Emp" start-index="246" stop-index="250" literal-start-index="246" literal-stop-index="250" />
                        </parameter>
                        <parameter>
                            <function function-name="XMLATTRIBUTES" text="XMLATTRIBUTES(e.employee_id, e.last_name)" start-index="253" stop-index="293" literal-start-index="253" literal-stop-index="293">
                                <parameter>
                                    <column name="employee_id" start-index="267" stop-index="279" literal-start-index="267" literal-stop-index="279">
                                        <owner name="e" start-index="267" stop-index="267" literal-start-index="267" literal-stop-index="267" />
                                    </column>
                                </parameter>
                                <parameter>
                                    <column name="last_name" start-index="282" stop-index="292" literal-start-index="282" literal-stop-index="292">
                                        <owner name="e" start-index="282" stop-index="282" literal-start-index="282" literal-stop-index="282" />
                                    </column>
                                </parameter>
                                <literalText>XMLATTRIBUTES(e.employee_id, e.last_name)</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLELEMENT('Emp', XMLATTRIBUTES(e.employee_id, e.last_name))</literalText>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="XMLSEQUENCE(EXTRACT(warehouse_spec, '/Warehouse/*'))" start-index="297" stop-index="348" literal-start-index="297" literal-stop-index="348">
                <literalText>XMLSEQUENCE(EXTRACT(warehouse_spec, '/Warehouse/*'))</literalText>
                <expr>
                    <function function-name="XMLSEQUENCE" text="XMLSEQUENCE(EXTRACT(warehouse_spec, '/Warehouse/*'))" start-index="297" stop-index="348" literal-start-index="297" literal-stop-index="348">
                        <parameter>
                            <function function-name="EXTRACT" text="EXTRACT(warehouse_spec, '/Warehouse/*')" start-index="309" stop-index="347" literal-start-index="309" literal-stop-index="347">
                                <parameter>
                                    <column name="warehouse_spec" start-index="317" stop-index="330" literal-start-index="317" literal-stop-index="330" />
                                </parameter>
                                <parameter>
                                    <literal-expression value="/Warehouse/*" start-index="333" stop-index="346" literal-start-index="333" literal-stop-index="346" />
                                </parameter>
                                <literalText>EXTRACT(warehouse_spec, '/Warehouse/*')</literalText>
                            </function>
                        </parameter>
                        <literalText>XMLSEQUENCE(EXTRACT(warehouse_spec, '/Warehouse/*'))</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="DUAL" start-index="355" stop-index="358" literal-start-index="355" literal-stop-index="358" />
        </from>
    </select>

    <select sql-case-id="select_with_nested_object">
        <projections start-index="7" stop-index="42" literal-start-index="7" literal-stop-index="42">
            <column-projection name="o.item.line_item_id" start-index="7" stop-index="25" >
                <owner name="o" start-index="7" stop-index="7" />
            </column-projection>>
            <column-projection name="o.item.quantity" start-index="28" stop-index="42" >
                <owner name="o" start-index="28" stop-index="28" />
            </column-projection>>
        </projections>
        <from>
            <simple-table name="short_orders" alias="o" start-index="49" stop-index="62" literal-start-index="49" literal-stop-index="62" />
        </from>
    </select>

    <select sql-case-id="select_with_collection_table">
        <projections start-index="7" stop-index="14" literal-start-index="7" literal-stop-index="14">
            <expression-projection text="VALUE(p)" start-index="7" stop-index="14">
                <function function-name="value" start-index="7" stop-index="14" />
            </expression-projection>
        </projections>
        <from>
            <join-table join-type="COMMA">
                <left>
                    <simple-table name="warehouses" alias="w" start-index="21" stop-index="32" />
                </left>
                <right>
                    <collection-table alias="p" start-index="37" stop-index="50">
                    </collection-table>>
                </right>
            </join-table>
        </from>
    </select>
    
    <select sql-case-id="select_with_group_by_and_having">
        <projections start-index="7" stop-index="14">
            <column-projection name="cfg_name" start-index="7" stop-index="14" />
        </projections>
        <from>
            <simple-table name="bmsql_config" start-index="21" stop-index="32" />
        </from>
        <group-by>
            <column-item start-index="43" stop-index="50" name="cfg_name" />
        </group-by>
        <having start-index="52" stop-index="70">
            <expr>
                <binary-operation-expression start-index="59" stop-index="70">
                    <left>
                        <column name="cfg_name" start-index="59" stop-index="66" />
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression start-index="68" stop-index="70" value="1" />
                    </right>
                </binary-operation-expression>
            </expr>
        </having>
    </select>
    <select sql-case-id="select_with_to_date_function">
        <projections start-index="7" stop-index="133" literal-start-index="7" literal-stop-index="133">
            <expression-projection text="TO_DATE('Febuary 15, 2016, 11:00 A.M.' DEFAULT 'January 01, 2016 12:00 A.M.' ON CONVERSION ERROR, 'Month dd, YYYY, HH:MI A.M.')" start-index="7" stop-index="133" literal-start-index="7" literal-stop-index="133">
                <literalText>TO_DATE('Febuary 15, 2016, 11:00 A.M.' DEFAULT 'January 01, 2016 12:00 A.M.' ON CONVERSION ERROR, 'Month dd, YYYY, HH:MI A.M.')</literalText>
                <expr>
                    <function function-name="TO_DATE"
                              text="TO_DATE('Febuary 15, 2016, 11:00 A.M.' DEFAULT 'January 01, 2016 12:00 A.M.' ON CONVERSION ERROR, 'Month dd, YYYY, HH:MI A.M.')"
                              start-index="7" stop-index="133" literal-start-index="7" literal-stop-index="133">
                        <parameter>
                            <literal-expression value="'Febuary 15, 2016, 11:00 A.M.'" start-index="15" stop-index="44"
                                                literal-start-index="15" literal-stop-index="44"/>
                        </parameter>
                        <parameter>
                            <literal-expression value="'January 01, 2016 12:00 A.M.'" start-index="54" stop-index="82"
                                                literal-start-index="54" literal-stop-index="82"/>
                        </parameter>
                        <parameter>
                            <literal-expression value="'Month dd, YYYY, HH:MI A.M.'" start-index="105" stop-index="132"
                                                literal-start-index="105" literal-stop-index="132"/>
                        </parameter>
                        <literalText>TO_DATE('Febuary 15, 2016, 11:00 A.M.' DEFAULT 'January 01, 2016 12:00 A.M.' ON CONVERSION ERROR, 'Month dd, YYYY, HH:MI A.M.')</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="DUAL" start-index="140" stop-index="143" literal-start-index="140" literal-stop-index="143" />
        </from>
    </select>
    <select sql-case-id="select_with_expressions_in_projection">
        <projections start-index="7" stop-index="81" literal-start-index="7" literal-stop-index="81">
            <column-projection name="empid" start-index="75" stop-index="81" literal-start-index="75" literal-stop-index="81">`
                <owner name="a" start-index="75" stop-index="75" literal-start-index="75" literal-stop-index="75" />
            </column-projection>
            <expression-projection text="a.enddate - term + term2 + 1) / (last_day(term) - term + 1" alias="cnt" start-index="8" stop-index="72" literal-start-index="8" literal-stop-index="72">
                <literalText>a.enddate - term + term2 + 1) / (last_day(term) - term + 1</literalText>
                <expr>
                    <binary-operation-expression start-index="8" stop-index="67" literal-start-index="8" literal-stop-index="67">
                        <left>
                            <binary-operation-expression start-index="9" stop-index="36" literal-start-index="9" literal-stop-index="36">
                                <left>
                                    <column name="enddate" start-index="9" stop-index="17" literal-start-index="9" literal-stop-index="17">
                                        <owner name="a" start-index="9" stop-index="9" literal-start-index="9" literal-stop-index="9" />
                                    </column>
                                </left>
                                <operator>-</operator>
                                <right>
                                    <binary-operation-expression start-index="21" stop-index="36" literal-start-index="21" literal-stop-index="36">
                                        <left>
                                            <binary-operation-expression start-index="21" stop-index="32" literal-start-index="21" literal-stop-index="32">
                                                <left>
                                                    <column name="term" start-index="21" stop-index="24" literal-start-index="21" literal-stop-index="24" />
                                                </left>
                                                <operator>+</operator>
                                                <right>
                                                    <column name="term2" start-index="28" stop-index="32" literal-start-index="28" literal-stop-index="32" />
                                                </right>
                                            </binary-operation-expression>
                                        </left>
                                        <operator>+</operator>
                                        <right>
                                            <literal-expression value="1" start-index="36" stop-index="36" literal-start-index="36" literal-stop-index="36" />
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </left>
                        <operator>/</operator>
                        <right>
                            <binary-operation-expression start-index="42" stop-index="66" literal-start-index="42" literal-stop-index="66">
                                <left>
                                    <function function-name="last_day" text="last_day(term)" start-index="42" stop-index="55" literal-start-index="42" literal-stop-index="55">
                                        <parameter>
                                            <column name="term" start-index="51" stop-index="54" literal-start-index="51" literal-stop-index="54" />
                                        </parameter>
                                        <literalText>last_day(term)</literalText>
                                    </function>
                                </left>
                                <operator>-</operator>
                                <right>
                                    <binary-operation-expression start-index="59" stop-index="66" literal-start-index="59" literal-stop-index="66">
                                        <left>
                                            <column name="term" start-index="59" stop-index="62" literal-start-index="59" literal-stop-index="62" />
                                        </left>
                                        <operator>+</operator>
                                        <right>
                                            <literal-expression value="1" start-index="66" stop-index="66" literal-start-index="66" literal-stop-index="66" />
                                        </right>
                                    </binary-operation-expression>
                                </right>
                            </binary-operation-expression>
                        </right>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="a" name="employee" start-index="88" stop-index="97"/>
        </from>
        <where start-index="99" stop-index="306">
            <expr>
                <binary-operation-expression start-index="105" stop-index="306">
                    <operator>AND</operator>
                    <left>
                        <binary-operation-expression start-index="105" stop-index="169">
                            <operator>AND</operator>
                            <left>
                                <binary-operation-expression start-index="105" stop-index="124">
                                    <operator>=</operator>
                                    <left>
                                        <function text="nvl(disabled, 0)" function-name="nvl" start-index="105" stop-index="120">
                                            <parameter>
                                                <column name="disabled" start-index="109" stop-index="116"/>
                                            </parameter>
                                            <parameter>
                                                <literal-expression value="0" start-index="119" stop-index="119"/>
                                            </parameter>
                                        </function>
                                    </left>
                                    <right>
                                        <literal-expression value="1" start-index="124" stop-index="124"/>
                                    </right>
                                </binary-operation-expression>
                            </left>
                            <right>
                                <between-expression start-index="131" stop-index="169">
                                    <left>
                                        <column name="enddate" start-index="131" stop-index="137"/>
                                    </left>
                                    <between-expr>
                                        <column name="term" start-index="147" stop-index="150"/>
                                    </between-expr>
                                    <and-expr>
                                        <function text="last_day(term)" function-name="last_day" start-index="156" stop-index="169">
                                            <parameter>
                                                <column name="term" start-index="165" stop-index="168"/>
                                            </parameter>
                                        </function>
                                    </and-expr>
                                </between-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <right>
                        <subquery start-index="176" stop-index="306">
                            <select>
                                <projections start-index="191" stop-index="191">
                                    <expression-projection text="1" start-index="191" stop-index="191"/>
                                </projections>
                                <from start-index="198" stop-index="203">
                                    <simple-table name="post" start-index="198" stop-index="203" alias="d"/>
                                </from>
                                <where start-index="205" stop-index="305">
                                    <expr>
                                        <binary-operation-expression start-index="211" stop-index="305">
                                            <operator>AND</operator>
                                            <left>
                                                <binary-operation-expression start-index="211" stop-index="277">
                                                    <operator>AND</operator>
                                                    <left>
                                                        <binary-operation-expression start-index="211" stop-index="253">
                                                            <operator>AND</operator>
                                                            <left>
                                                                <binary-operation-expression start-index="211" stop-index="227">
                                                                    <operator>=</operator>
                                                                    <left>
                                                                        <column name="orgid" start-index="211" stop-index="217">
                                                                            <owner name="a" start-index="211" stop-index="211"/>
                                                                        </column>
                                                                    </left>
                                                                    <right>
                                                                        <column name="orgid" start-index="221" stop-index="227">
                                                                            <owner name="d" start-index="221" stop-index="221"/>
                                                                        </column>
                                                                    </right>
                                                                </binary-operation-expression>
                                                            </left>
                                                            <right>
                                                                <binary-operation-expression start-index="235" stop-index="253">
                                                                    <operator>=</operator>
                                                                    <left>
                                                                        <column name="postid" start-index="235" stop-index="242">
                                                                            <owner name="a" start-index="235" stop-index="235"/>
                                                                        </column>
                                                                    </left>
                                                                    <right>
                                                                        <column name="postid" start-index="246" stop-index="253">
                                                                            <owner name="d" start-index="246" stop-index="246"/>
                                                                        </column>
                                                                    </right>
                                                                </binary-operation-expression>
                                                            </right>
                                                        </binary-operation-expression>
                                                    </left>
                                                    <right>
                                                        <binary-operation-expression start-index="261" stop-index="277">
                                                            <operator>!=</operator>
                                                            <left>
                                                                <column name="title" start-index="261" stop-index="267">
                                                                    <owner name="d" start-index="261" stop-index="261"/>
                                                                </column>
                                                            </left>
                                                            <right>
                                                                <literal-expression value="TEST" start-index="272" stop-index="277"/>
                                                            </right>
                                                        </binary-operation-expression>
                                                    </right>
                                                </binary-operation-expression>
                                            </left>
                                            <right>
                                                <binary-operation-expression start-index="285" stop-index="305">
                                                    <operator>!=</operator>
                                                    <left>
                                                        <function text="nvl(d.postid, 0)" start-index="285" stop-index="300" function-name="nvl">
                                                            <parameter>
                                                                <column name="postid" start-index="289" stop-index="296">
                                                                    <owner name="d" start-index="289" stop-index="289"/>
                                                                </column>
                                                            </parameter>
                                                            <parameter>
                                                                <literal-expression value="0" start-index="299" stop-index="299"/>
                                                            </parameter>
                                                        </function>
                                                    </left>
                                                    <right>
                                                        <literal-expression value="0" start-index="305" stop-index="305"/>
                                                    </right>
                                                </binary-operation-expression>
                                            </right>
                                        </binary-operation-expression>
                                    </expr>
                                </where>
                            </select>
                        </subquery>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    <select sql-case-id="select_with_custom_table_function">
        <projections start-index="7" stop-index="18" literal-start-index="7" literal-stop-index="18">
            <aggregation-projection type="COUNT" expression="COUNT(empid)" start-index="7" stop-index="18"
                                    literal-start-index="7" literal-stop-index="18"/>
        </projections>
        <from>
            <join-table join-type="COMMA" natural="false">
                <left>
                    <simple-table alias="b" name="EMPLOYEE" start-index="25" stop-index="34" literal-start-index="25"
                                  literal-stop-index="34"/>
                </left>
                <right>
                    <function-table table-alias="a">
                        <table-function function-name="custom_function" text="custom_function(b.orgid)"/>
                    </function-table>
                </right>
            </join-table>
        </from>
        <where start-index="64" stop-index="88" literal-start-index="64" literal-stop-index="88">
            <expr>
                <binary-operation-expression start-index="70" stop-index="88" literal-start-index="70"
                                             literal-stop-index="88">
                    <left>
                        <column name="postid" start-index="70" stop-index="77" literal-start-index="70"
                                literal-stop-index="77">
                            <owner name="a" start-index="70" stop-index="70" literal-start-index="70"
                                   literal-stop-index="70"/>
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <column name="postid" start-index="81" stop-index="88" literal-start-index="81"
                                literal-stop-index="88">
                            <owner name="b" start-index="81" stop-index="81" literal-start-index="81"
                                   literal-stop-index="81"/>
                        </column>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_numeric_operator">
        <projections start-index="7" stop-index="18">
            <expression-projection start-index="7" stop-index="18" text="5!" alias="RESULT" />
        </projections>
    </select>

    <select sql-case-id="select_with_custom_distinct_function">
        <projections start-index="7" stop-index="34" literal-start-index="7" literal-stop-index="34">
            <expression-projection text="custom_concat(distinct a.P1)" start-index="7" stop-index="34"
                                   literal-start-index="7" literal-stop-index="34">
                <literalText>custom_concat(distinct a.P1)</literalText>
                <expr>
                    <function function-name="custom_concat" text="custom_concat(distinct a.P1)" start-index="7"
                              stop-index="34" literal-start-index="7" literal-stop-index="34">
                        <parameter>
                            <column name="P1" start-index="30" stop-index="33" literal-start-index="30"
                                    literal-stop-index="33">
                                <owner name="a" start-index="30" stop-index="30" literal-start-index="30"
                                       literal-stop-index="30"/>
                            </column>
                        </parameter>
                        <literalText>custom_concat(distinct a.P1)</literalText>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table alias="a" name="TEST" start-index="41" stop-index="46" literal-start-index="41"
                          literal-stop-index="46"/>
        </from>
    </select>

    <select sql-case-id="select_with_unicode_string">
        <projections start-index="7" stop-index="22" literal-start-index="7" literal-stop-index="22">
            <expression-projection text="test" start-index="7" stop-index="13" literal-start-index="7"
                                   literal-stop-index="13">
                <literalText>test</literalText>
                <expr>
                    <literal-expression value="test" start-index="7" stop-index="13" literal-start-index="7"
                                        literal-stop-index="13"/>
                </expr>
            </expression-projection>
            <expression-projection text="test" start-index="16" stop-index="22" literal-start-index="16"
                                   literal-stop-index="22">
                <literalText>test</literalText>
                <expr>
                    <literal-expression value="test" start-index="16" stop-index="22" literal-start-index="16"
                                        literal-stop-index="22"/>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="DUAL" start-index="29" stop-index="32" literal-start-index="29"
                          literal-stop-index="32"/>
        </from>
    </select>
    
    <select sql-case-id="select_wm_concat_function1">
        <projections start-index="7" stop-index="72">
            <expression-projection alias="ID" text="TO_CHAR(WM_CONCAT(DISTINCT TEST_ID) OVER(PARTITION BY TEST_ID))" start-index="7" stop-index="72">
                <expr>
                    <function alias="ID" function-name="TO_CHAR" text="TO_CHAR(WM_CONCAT(DISTINCT TEST_ID) OVER(PARTITION BY TEST_ID))" start-index="7" stop-index="69">
                        <parameter>
                            <function alias="ID" function-name="WM_CONCAT" text="WM_CONCAT(DISTINCT TEST_ID) OVER(PARTITION BY TEST_ID)" start-index="15" stop-index="68">
                                <parameter>
                                    <column name="TEST_ID" start-index="34" stop-index="40" />
                                </parameter>
                            </function>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="TEST_TABLE" start-index="79" stop-index="88" />
        </from>
    </select>
    
    <select sql-case-id="select_wm_concat_function2">
        <projections start-index="7" stop-index="26">
            <expression-projection alias="NAME" text="WM_CONCAT(NAME)" start-index="7" stop-index="26">
                <expr>
                    <function alias="ID" function-name="WM_CONCAT" text="WM_CONCAT(NAME)" start-index="7" stop-index="21">
                        <parameter>
                            <column name="NAME" start-index="17" stop-index="20" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="TEST_TABLE" start-index="33" stop-index="42" />
        </from>
    </select>
    
    <select sql-case-id="select_wm_concat_function3">
        <projections start-index="7" stop-index="38">
            <expression-projection text="REPLACE(WM_CONCAT(NAME),',','|')" start-index="7" stop-index="38">
                <expr>
                    <function function-name="REPLACE" text="REPLACE(WM_CONCAT(NAME),',','|')" start-index="7" stop-index="38">
                        <parameter>
                            <function alias="ID" function-name="WM_CONCAT" text="WM_CONCAT(NAME)" start-index="15" stop-index="29">
                                <parameter>
                                    <column name="NAME" start-index="25" stop-index="28" />
                                </parameter>
                            </function>
                        </parameter>
                        <parameter>
                            <literal-expression start-index="31" stop-index="33" value="," />
                        </parameter>
                        <parameter>
                            <literal-expression start-index="35" stop-index="37" value="|" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="TEST_TABLE" start-index="45" stop-index="54" />
        </from>
    </select>
    
    <select sql-case-id="select_wm_concat_function4">
        <projections start-index="7" stop-index="102">
            <column-projection name="NAME" start-index="7" stop-index="10" />
            <expression-projection alias="WM_NAME" text="WM_CONCAT(DECODE(SUBSTR((TO_CHAR(NAME)),0,1),'.','0'||TO_CHAR(NAME),TO_CHAR(NAME)))" start-index="12" stop-index="102">
                <expr>
                    <function function-name="WM_CONCAT" text="WM_CONCAT(DECODE(SUBSTR((TO_CHAR(NAME)),0,1),'.','0'||TO_CHAR(NAME),TO_CHAR(NAME)))" start-index="12" stop-index="94">
                        <parameter>
                            <function function-name="DECODE" text="DECODE(SUBSTR((TO_CHAR(NAME)),0,1),'.','0'||TO_CHAR(NAME),TO_CHAR(NAME))" start-index="22" stop-index="93">
                                <parameter>
                                    <function function-name="SUBSTR" text="SUBSTR((TO_CHAR(NAME)),0,1)" start-index="29" stop-index="55">
                                        <parameter>
                                            <function function-name="TO_CHAR" text="TO_CHAR(NAME)" start-index="37" stop-index="49">
                                                <parameter>
                                                    <column name="NAME" start-index="45" stop-index="48" />
                                                </parameter>
                                            </function>
                                        </parameter>
                                        <parameter>
                                            <literal-expression start-index="52" stop-index="52" value="0" />
                                        </parameter>
                                        <parameter>
                                            <literal-expression start-index="54" stop-index="54" value="1" />
                                        </parameter>
                                    </function>
                                </parameter>
                                <parameter>
                                    <literal-expression start-index="57" stop-index="59" value="." />
                                </parameter>
                                <parameter>
                                    <binary-operation-expression text="'0'||TO_CHAR(NAME)" start-index="61" stop-index="78">
                                        <left>
                                            <literal-expression start-index="61" stop-index="63" value="0" />
                                        </left>
                                        <right>
                                            <function start-index="66" stop-index="78" text="TO_CHAR(NAME)" function-name="TO_CHAR">
                                                <parameter>
                                                    <column name="NAME" start-index="74" stop-index="77" />
                                                </parameter>
                                            </function>
                                        </right>
                                        <operator>||</operator>
                                    </binary-operation-expression>
                                </parameter>
                                <parameter>
                                    <function function-name="TO_CHAR" text="TO_CHAR(NAME)" start-index="80" stop-index="92">
                                        <parameter>
                                            <column name="NAME" start-index="88" stop-index="91" />
                                        </parameter>
                                    </function>
                                </parameter>
                            </function>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="TEST_TABLE" start-index="109" stop-index="118" />
        </from>
        <where start-index="120" stop-index="137">
            <expr>
                <binary-operation-expression text="NAME ='TEST'" start-index="126" stop-index="137">
                    <left>
                        <column name="NAME" start-index="126" stop-index="129" />
                    </left>
                    <right>
                        <literal-expression start-index="132" stop-index="137" value="TEST" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
        <group-by>
            <column-item name="NAME" order-direction="ASC" start-index="148" stop-index="151" />
        </group-by>
    </select>
    
    <select sql-case-id="select_with_user_updatable_columns">
        <projections start-index="7" stop-index="28">
            <column-projection name="column_name" start-index="7" stop-index="17" />
            <column-projection name="updatable" start-index="20" stop-index="28" />
        </projections>
        <from>
            <simple-table name="user_updatable_columns" start-index="35" stop-index="56" />
        </from>
        <where start-index="58" stop-index="92">
            <expr>
                <binary-operation-expression text="table_name = 'LOCATIONS_VIEW'" start-index="64" stop-index="92">
                    <left>
                        <column name="table_name" start-index="64" stop-index="73" />
                    </left>
                    <right>
                        <literal-expression start-index="77" stop-index="92" value="LOCATIONS_VIEW" />
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <column-item name="column_name" order-direction="ASC" start-index="103" stop-index="113" />
            <column-item name="updatable" order-direction="ASC" start-index="116" stop-index="124" />
        </order-by>
    </select>
    <select sql-case-id="select_with_script_variables">
        <from>
            <simple-table name="Person" alias="x" start-index="28" stop-index="42">
                <owner name="Person" start-index="28" stop-index="33"/>
            </simple-table>
        </from>
        <projections start-index="7" stop-index="21">
            <column-projection name="$(ColumnName)" start-index="7" stop-index="21">
                <owner name="x" start-index="7" stop-index="7" />
            </column-projection>>
        </projections>
        <where start-index="44" stop-index="71">
            <expr>
                <binary-operation-expression start-index="50" stop-index="71">
                    <left>
                        <column name="BusinessEntityID" start-index="50" stop-index="67">
                            <owner name="x" start-index="50" stop-index="50" />
                        </column>
                    </left>
                    <operator>&gt;</operator>
                    <right>
                        <literal-expression value="5" start-index="71" stop-index="71" />
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_not_expression">
        <projections start-index="7" stop-index="75">
            <expression-projection text="!0" start-index="7" stop-index="8">
                <expr>
                    <not-expression start-index="7" stop-index="8">
                        <expr>
                            <literal-expression value="0" start-index="8" stop-index="8" />
                        </expr>
                    </not-expression>
                </expr>
            </expression-projection>
            <expression-projection text="NOT 0=1" start-index="10" stop-index="16">
                <expr>
                    <binary-operation-expression start-index="10" stop-index="16">
                        <left>
                            <not-expression start-index="10" stop-index="14">
                                <expr>
                                    <literal-expression value="0" start-index="14" stop-index="14" />
                                </expr>
                            </not-expression>
                        </left>
                        <right>
                            <literal-expression value="1" start-index="16" stop-index="16" />
                        </right>
                        <operator>=</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
            <expression-projection text="!(0=0)" start-index="18" stop-index="23">
                <expr>
                    <not-expression start-index="18" stop-index="23">
                        <expr>
                            <binary-operation-expression start-index="20" stop-index="22">
                                <left>
                                    <literal-expression value="0" start-index="20" stop-index="20" />
                                </left>
                                <right>
                                    <literal-expression value="0" start-index="22" stop-index="22" />
                                </right>
                                <operator>=</operator>
                            </binary-operation-expression>
                        </expr>
                    </not-expression>
                </expr>
            </expression-projection>
            <expression-projection text="1 AND 1" start-index="25" stop-index="31">
                <expr>
                    <binary-operation-expression start-index="25" stop-index="31">
                        <left>
                            <literal-expression value="1" start-index="25" stop-index="25" />
                        </left>
                        <right>
                            <literal-expression value="1" start-index="31" stop-index="31" />
                        </right>
                        <operator>AND</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
            <expression-projection text="1 &amp;&amp; 0" start-index="33" stop-index="38">
                <expr>
                    <binary-operation-expression start-index="33" stop-index="38">
                        <left>
                            <literal-expression value="1" start-index="33" stop-index="33" />
                        </left>
                        <right>
                            <literal-expression value="0" start-index="38" stop-index="38" />
                        </right>
                        <operator>&amp;&amp;</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
            <expression-projection text="0 OR 1" start-index="40" stop-index="45">
                <expr>
                    <binary-operation-expression start-index="40" stop-index="45">
                        <left>
                            <literal-expression value="0" start-index="40" stop-index="40" />
                        </left>
                        <right>
                            <literal-expression value="1" start-index="45" stop-index="45" />
                        </right>
                        <operator>OR</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
            <expression-projection text="1 || NULL" start-index="47" stop-index="55">
                <expr>
                    <binary-operation-expression start-index="47" stop-index="55">
                        <left>
                            <literal-expression value="1" start-index="47" stop-index="47" />
                        </left>
                        <right>
                            <literal-expression value="null" start-index="52" stop-index="55" />
                        </right>
                        <operator>||</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
            <expression-projection text="1=1 or 1=1 and 1=0" start-index="58" stop-index="75">
                <expr>
                    <binary-operation-expression start-index="58" stop-index="75">
                        <left>
                            <binary-operation-expression start-index="58" stop-index="60">
                                <left>
                                    <literal-expression value="1" start-index="58" stop-index="58" />
                                </left>
                                <right>
                                    <literal-expression value="1" start-index="60" stop-index="60" />
                                </right>
                                <operator>=</operator>
                            </binary-operation-expression>
                        </left>
                        <right>
                            <binary-operation-expression start-index="65" stop-index="75">
                                <left>
                                    <binary-operation-expression start-index="65" stop-index="67">
                                        <left>
                                            <literal-expression value="1" start-index="65" stop-index="65" />
                                        </left>
                                        <right>
                                            <literal-expression value="1" start-index="67" stop-index="67" />
                                        </right>
                                        <operator>=</operator>
                                    </binary-operation-expression>
                                </left>
                                <right>
                                    <binary-operation-expression start-index="73" stop-index="75">
                                        <left>
                                            <literal-expression value="1" start-index="73" stop-index="73" />
                                        </left>
                                        <right>
                                            <literal-expression value="0" start-index="75" stop-index="75" />
                                        </right>
                                        <operator>=</operator>
                                    </binary-operation-expression>
                                </right>
                                <operator>and</operator>
                            </binary-operation-expression>
                        </right>
                        <operator>or</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_unreserved_column">
        <from>
            <simple-table name="servers" start-index="38" stop-index="48">
                <owner name="sys" start-index="38" stop-index="40"/>
            </simple-table>
        </from>
        <projections start-index="7" stop-index="31">
           <column-projection name="name" start-index="7" stop-index="10"/>
           <column-projection name="server_id" start-index="13" stop-index="21"/>
           <column-projection name="provider" start-index="24" stop-index="31"/>
        </projections>
    </select>

    <select sql-case-id="select_with_count_temp_table">
        <from>
            <simple-table name="#Test" start-index="41" stop-index="45" />
        </from>
        <projections start-index="7" stop-index="34">
            <aggregation-projection type="COUNT" expression="COUNT(*)" start-index="7" stop-index="14" alias="Number of rows"/>
        </projections>
    </select>

    <select sql-case-id="select_with_bracket_alias">
        <from>
            <join-table join-type="INNER">
                <left>
                    <simple-table name="dm_xe_objects" alias="obj1" start-index="139" stop-index="163">
                        <owner name="sys" start-index="139" stop-index="141"/>
                    </simple-table>
                </left>
                <right>
                    <simple-table name="dm_xe_object_columns" alias="col2"  start-index="176" stop-index="207">
                        <owner name="sys" start-index="176" stop-index="178"/>
                    </simple-table>
                </right>
                <on-condition>
                    <binary-operation-expression start-index="212" stop-index="239">
                        <left>
                            <column name="object_name" start-index="212" stop-index="227">
                                <owner name="col2" start-index="212" stop-index="215"/>
                            </column>
                        </left>
                        <operator>=</operator>
                        <right>
                            <column name="name" start-index="231" stop-index="239">
                                <owner name="obj1" start-index="231" stop-index="234"/>
                            </column>
                        </right>
                    </binary-operation-expression>
                </on-condition>
            </join-table>
        </from>
        <projections start-index="7" stop-index="132">
            <column-projection name="name" alias="XEvent-name" start-index="7" stop-index="32">
                <owner name="obj1" start-index="7" stop-index="10"/>
            </column-projection>
            <column-projection name="name" alias="XEvent-column" start-index="35" stop-index="62">
                <owner name="col2" start-index="35" stop-index="38"/>
            </column-projection>
            <column-projection name="description" alias="Descr-name" start-index="65" stop-index="96">
                <owner name="obj1" start-index="65" stop-index="68"/>
            </column-projection>
            <column-projection name="description" alias="Descr-column" start-index="99" stop-index="132">
                <owner name="col2" start-index="99" stop-index="102"/>
            </column-projection>
        </projections>
        <order-by>
            <column-item name="name" start-index="250" stop-index="258">
                <owner name="obj1" start-index="250" stop-index="253"/>
            </column-item>
            <column-item name="name" start-index="261" stop-index="269">
                <owner name="col2" start-index="261" stop-index="264"/>
            </column-item>
        </order-by>
    </select>

    <select sql-case-id="select_with_cross_apply">
        <from>
            <join-table join-type="CROSS">
                <left>
                    <simple-table name="dm_exec_requests" alias="r" start-index="122" stop-index="143">
                        <owner name="sys" start-index="122" stop-index="124"/>
                    </simple-table>
                </left>
                <right>
                    <function-table table-alias="a">
                        <table-function function-name="sys.dm_exec_sql_text" text="sys.dm_exec_sql_text(r.sql_handle)"/>
                    </function-table>
                </right>
            </join-table>
        </from>
        <projections start-index="7" stop-index="115">
            <column-projection name="text" alias="query" start-index="7" stop-index="20">
                <owner name="a" start-index="15" stop-index="15"/>
            </column-projection>
            <column-projection name="start_time" start-index="23" stop-index="32"/>
            <column-projection name="percent_complete" start-index="35" stop-index="50"/>
            <expression-projection text="dateadd(second,estimated_completion_time/1000, getdate())" alias="eta" start-index="53" stop-index="115">
                <expr>
                    <function function-name="dateadd" text="dateadd(second,estimated_completion_time/1000, getdate())" start-index="59" stop-index="115">
                        <parameter>
                            <column name="second" start-index="67" stop-index="72"/>
                        </parameter>
                        <parameter>
                            <binary-operation-expression start-index="74" stop-index="103" text="estimated_completion_time/1000">
                                <left>
                                    <column name="estimated_completion_time" start-index="74" stop-index="98"/>
                                </left>
                                <operator>/</operator>
                                <right>
                                    <literal-expression value="1000" start-index="100" stop-index="103"/>
                                </right>
                            </binary-operation-expression>
                        </parameter>
                        <parameter>
                            <function function-name="getdate" text="getdate()" start-index="106" stop-index="114"/>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <where start-index="194" stop-index="229">
            <expr>
                <binary-operation-expression text="r.command = 'RESTORE DATABASE'" start-index="200" stop-index="229">
                    <left>
                        <column name="command" start-index="200" stop-index="208">
                            <owner name="r" start-index="200" stop-index="200"/>
                        </column>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="RESTORE DATABASE" start-index="212" stop-index="229"/>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_top_restrict1">
        <from>
            <simple-table name="TableName" start-index="21" stop-index="29"/>
        </from>
        <projections start-index="7" stop-index="14">
            <top-projection start-index="7" stop-index="12">
                <top-value value="10" start-index="11" stop-index="12" />
            </top-projection>
            <shorthand-projection stop-index="14" start-index="14"/>
        </projections>
    </select>

    <select sql-case-id="select_with_top_restrict2">
        <from>
            <simple-table name="TableName" start-index="30" stop-index="38"/>
        </from>
        <projections start-index="7" stop-index="23">
            <top-projection start-index="7" stop-index="12">
                <top-value value="10" start-index="11" stop-index="12"/>
            </top-projection>
            <column-projection name="columnName" start-index="14" stop-index="23"/>
        </projections>
    </select>

    <select sql-case-id="select_with_top_restrict3">
        <from>
            <simple-table name="TableName" start-index="37" stop-index="52" alias="alias1"/>
        </from>
        <projections start-index="7" stop-index="30">
            <top-projection start-index="7" stop-index="12">
                <top-value value="10" start-index="11" stop-index="12"/>
            </top-projection>
            <column-projection name="columnName" start-index="14" stop-index="30">
                <owner name="alias1" start-index="14" stop-index="19"/>
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_top_with_ties">
        <from>
            <simple-table name="TableName" start-index="47" stop-index="62" alias="alias1"/>
        </from>
        <projections start-index="7" stop-index="40">
            <top-projection start-index="7" stop-index="22">
                <top-value value="10" start-index="11" stop-index="12"/>
            </top-projection>
            <column-projection name="columnName" start-index="24" stop-index="40">
                <owner name="alias1" start-index="24" stop-index="29"/>
            </column-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_object_id_function">
        <projections start-index="7" stop-index="134">
            <expression-projection text="OBJECT_NAME(object_id)" start-index="7" stop-index="55" alias="referencing_object_name">
                <expr>
                    <function function-name="OBJECT_NAME" text="OBJECT_NAME(object_id)" start-index="7" stop-index="28">
                        <parameter>
                            <column name="object_id" start-index="19" stop-index="27"/>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection start-index="57" stop-index="132" text="COALESCE(COL_NAME(object_id, column_id), '(n/a)')" alias="referencing_column_name">
                <expr>
                    <function function-name="COALESCE" text="COALESCE(COL_NAME(object_id, column_id), '(n/a)')" start-index="57" stop-index="105">
                        <parameter>
                            <function function-name="COL_NAME" text="COL_NAME(object_id, column_id)" start-index="66" stop-index="95">
                                <parameter>
                                    <column name="object_id" start-index="75" stop-index="83"/>
                                </parameter>
                                <parameter>
                                    <column name="column_id" start-index="86" stop-index="94"/>
                                </parameter>
                            </function>
                        </parameter>
                        <parameter>
                            <literal-expression value="(n/a)" start-index="98" stop-index="104"/>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <shorthand-projection start-index="134" stop-index="134"/>
        </projections>
        <from start-index="145" stop-index="160">
            <simple-table name="sql_dependencies" start-index="141" stop-index="160">
                <owner name="sys" start-index="141" stop-index="143"/>
            </simple-table>
        </from>
        <where start-index="162" stop-index="226">
            <expr>
                <binary-operation-expression start-index="168" stop-index="226">
                    <left>
                        <column name="referenced_major_id" start-index="168" stop-index="186"/>
                    </left>
                    <right>
                        <function function-name="OBJECT_ID" text="OBJECT_ID('&lt;schema_name.table_name&gt;')" start-index="190" stop-index="226">
                            <parameter>
                                <literal-expression value="&lt;schema_name.table_name&gt;" start-index="200" stop-index="225"/>
                            </parameter>
                        </function>
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
        <order-by>
            <expression-item expression="OBJECT_NAME(object_id)" start-index="237" stop-index="258">
                <expr>
                    <function function-name="OBJECT_NAME" text="OBJECT_NAME(object_id)" start-index="237" stop-index="258">
                        <parameter>
                            <column name="object_id" start-index="249" stop-index="257"/>
                        </parameter>
                    </function>
                </expr>
            </expression-item>
            <expression-item expression="COL_NAME(object_id, column_id)" start-index="261" stop-index="290">
                <expr>
                    <function function-name="COL_NAME" text="COL_NAME(object_id, column_id)" start-index="261" stop-index="290">
                        <parameter>
                            <column name="object_id" start-index="270" stop-index="278"/>
                        </parameter>
                        <parameter>
                            <column name="column_id" start-index="281" stop-index="289"/>
                        </parameter>
                    </function>
                </expr>
            </expression-item>
        </order-by>
    </select>

    <select sql-case-id="select_from_sys_views">
        <from start-index="201" stop-index="210">
            <simple-table name="views" start-index="202" stop-index="210">
                <owner name="sys" start-index="202" stop-index="204"/>
            </simple-table>
        </from>
        <projections start-index="7" stop-index="195">
            <column-projection name="name" start-index="7" stop-index="23" alias="view_name"/>
            <expression-projection text="SCHEMA_NAME(schema_id)" start-index="25" stop-index="61" alias="schema_name">
                <function function-name="SCHEMA_NAME" text="SCHEMA_NAME(schema_id)" start-index="25" stop-index="46">
                    <parameter>
                        <column name="schema_id" start-index="37" stop-index="45"/>
                    </parameter>
                </function>
            </expression-projection>
            <expression-projection text="OBJECTPROPERTYEX(object_id,'IsIndexed')" start-index="63" stop-index="114" alias="IsIndexed">
                <function function-name="OBJECTPROPERTYEX" text="OBJECTPROPERTYEX(object_id,'IsIndexed')" start-index="63" stop-index="101">
                    <parameter>
                        <column name="object_id" start-index="80" stop-index="88"/>
                    </parameter>
                    <parameter>
                        <literal-expression value="IsIndexed" start-index="90" stop-index="100"/>
                    </parameter>
                </function>
            </expression-projection>
            <expression-projection text="OBJECTPROPERTYEX(object_id,'IsIndexable')" start-index="116" stop-index="171" alias="IsIndexable">
                <function function-name="OBJECTPROPERTYEX" text="OBJECTPROPERTYEX(object_id,'IsIndexable')" start-index="116" stop-index="156">
                    <parameter>
                        <column name="object_id" start-index="133" stop-index="141"/>
                    </parameter>
                    <parameter>
                        <literal-expression value="IsIndexable" start-index="143" stop-index="155"/>
                    </parameter>
                </function>
            </expression-projection>
            <column-projection name="create_date" start-index="173" stop-index="183"/>
            <column-projection name="modify_date" start-index="185" stop-index="195"/>
        </projections>
    </select>

    <select sql-case-id="select_with_substring_function">
        <projections start-index="7" stop-index="36">
            <column-projection name="ProductID" start-index="7" stop-index="15"/>
            <column-projection name="Name" start-index="18" stop-index="21"/>
            <column-projection name="ProductNumber" start-index="24" stop-index="36"/>
        </projections>
        <from start-index="43" stop-index="64">
            <simple-table name="Product" start-index="43" stop-index="64" start-delimiter="[" end-delimiter="]">
                <owner name="Production" start-index="43" stop-index="54" start-delimiter="[" end-delimiter="]"/>
            </simple-table>
        </from>
        <where start-index="66" stop-index="110">
            <expr>
                <binary-operation-expression start-index="72" stop-index="110">
                    <left>
                        <function function-name="SUBSTRING" text="SUBSTRING(ProductNumber, 0, 4)"  start-index="72" stop-index="101">
                            <parameter>
                                <column name="ProductNumber" start-index="82" stop-index="94"/>
                            </parameter>
                            <parameter>
                                <literal-expression value="0" start-index="97" stop-index="97"/>
                            </parameter>
                            <parameter>
                                <literal-expression value="4" start-index="100" stop-index="100"/>
                            </parameter>
                        </function>
                    </left>
                    <right>
                        <literal-expression value="HN-" start-index="106" stop-index="110"/>
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_not_distinct_from">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7"/>
        </projections>
        <from start-index="14" stop-index="29">
            <simple-table name="#SampleTempTable" start-index="14" stop-index="29"/>
        </from>
        <where start-index="31" stop-index="64">
            <expr>
                <binary-operation-expression start-index="37" stop-index="64">
                    <left>
                        <column name="id" start-index="37" stop-index="38"/>
                    </left>
                    <right>
                        <literal-expression start-index="61" stop-index="64" value="null"/>
                    </right>
                    <operator>ISNOTDISTINCTFROM</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_distinct_from">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7"/>
        </projections>
        <from start-index="14" stop-index="29">
            <simple-table name="#SampleTempTable" start-index="14" stop-index="29"/>
        </from>
        <where start-index="31" stop-index="58">
            <expr>
                <binary-operation-expression start-index="37" stop-index="58">
                    <left>
                        <column name="id" start-index="37" stop-index="38"/>
                    </left>
                    <right>
                        <literal-expression value="17" start-index="57" stop-index="58"/>
                    </right>
                    <operator>ISDISTINCTFROM</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_with_contains_function">
        <projections start-index="7" stop-index="16">
            <column-projection name="product_id" start-index="7" stop-index="16"/>
        </projections>
        <from start-index="23" stop-index="30">
            <simple-table name="products" start-index="23" stop-index="30"/>
        </from>
        <where start-index="32" stop-index="157">
            <expr>
                <binary-operation-expression start-index="38" stop-index="157">
                    <left>
                        <function text="CONTAINS(product_description, '&quot;Snap Happy 100EZ&quot; OR FORMSOF(THESAURUS,&quot;Snap Happy&quot;) OR &quot;100EZ&quot;')" function-name="CONTAINS" start-index="38" stop-index="134">
                            <parameter>
                                <column name="product_description" start-index="47" stop-index="65"/>
                            </parameter>
                            <parameter>
                                <literal-expression value="&quot;Snap Happy 100EZ&quot; OR FORMSOF(THESAURUS,&quot;Snap Happy&quot;) OR &quot;100EZ&quot;" start-index="68" stop-index="133"/>
                            </parameter>
                        </function>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="140" stop-index="157">
                            <left>
                                <column name="product_cost" start-index="140" stop-index="151"/>
                            </left>
                            <right>
                                <literal-expression value="200" start-index="155" stop-index="157"/>
                            </right>
                            <operator>&lt;</operator>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>
    
    <select sql-case-id="select_from_database_files">
        <projections start-index="7" stop-index="101">
            <column-projection name="name" start-index="7" stop-index="10" />
            <expression-projection text="size / 128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS INT) / 128.0" alias="AvailableSpaceInMB" start-index="13" stop-index="101">
                <expr>
                    <binary-operation-expression text="size / 128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS INT) / 128.0" start-index="13" stop-index="79">
                        <left>
                            <binary-operation-expression text="size / 128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS INT)" start-index="13" stop-index="71">
                                <left>
                                    <column name="size" start-index="13" stop-index="16" />
                                </left>
                                <right>
                                   <binary-operation-expression text="128.0 - CAST(FILEPROPERTY(name, 'SpaceUsed') AS INT)" start-index="20" stop-index="71">
                                       <left>
                                           <literal-expression value="128.0" start-index="20" stop-index="24" />
                                       </left>
                                       <right>
                                           <function function-name="CAST" text="CAST(FILEPROPERTY(name, 'SpaceUsed') AS INT)" start-index="28" stop-index="71">
                                               <parameter>
                                                   <function function-name="FILEPROPERTY" text="FILEPROPERTY(name, 'SpaceUsed')" start-index="33" stop-index="63">
                                                       <parameter>
                                                           <column name="name" start-index="46" stop-index="49" />
                                                       </parameter>
                                                       <parameter>
                                                           <literal-expression value="SpaceUsed" start-index="52" stop-index="62" />
                                                       </parameter>
                                                   </function>
                                               </parameter>
                                               <parameter>
                                                   <data-type value="INT" start-index="68" stop-index="70" />
                                               </parameter>
                                           </function>
                                       </right>
                                       <operator>-</operator>
                                   </binary-operation-expression>
                                </right>
                                <operator>/</operator>
                            </binary-operation-expression>
                        </left>
                        <right>
                            <literal-expression value="128.0" start-index="75" stop-index="79" />
                        </right>
                        <operator>/</operator>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="database_files" start-index="108" stop-index="125">
                <owner name="sys" start-index="108" stop-index="110" />
            </simple-table>
        </from>
    </select>
    
    <select sql-case-id="select_trim_2">
        <projections start-index="7" stop-index="38">
            <expression-projection text="TRIM( '     test    ')" alias="Result" start-index="7" stop-index="38">
                <expr>
                    <function function-name="TRIM" text="TRIM( '     test    ')" start-index="7" stop-index="28">
                        <parameter>
                            <literal-expression value="     test    " start-index="13" stop-index="27" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
    </select>

    <select sql-case-id="select_with_default_schema">
        <projections start-index="7" stop-index="44">
            <column-projection name="has_backup_checksums" start-index="7" stop-index="26"/>
            <column-projection name="database_name" start-index="29" stop-index="41"/>
            <shorthand-projection start-index="44" stop-index="44"/>
        </projections>
        <from start-index="51" stop-index="65">
            <simple-table name="backupset" start-index="51" stop-index="65">
                <owner name="msdb" start-index="51" stop-index="54"/>
            </simple-table>
        </from>
    </select>

    <select sql-case-id="select_from_dbms_table">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7"/>
        </projections>
        <from>
            <collection-table>
                <column name="display" start-index="20" stop-index="37">
                    <owner name="dbms_xplan" start-index="20" stop-index="29"/>
                </column>
            </collection-table>
        </from>
    </select>
    
    <select sql-case-id="select_from_table_test">
        <projections start-index="7" stop-index="7">
            <shorthand-projection start-index="7" stop-index="7" />
        </projections>
        <from>
            <simple-table name="##test" start-index="14" stop-index="19" />
        </from>
    </select>
    
    <select sql-case-id="select_from_table_openrowset">
        <projections start-index="7" stop-index="45">
            <top-projection start-index="7" stop-index="13">
                <top-value value="100" start-index="11" stop-index="13" />
            </top-projection>
            <expression-projection text="CAST(_id as VARBINARY(1000))" alias="id" start-index="15" stop-index="45">
                <expr>
                    <function function-name="CAST" text="CAST(_id as VARBINARY(1000))" start-index="18" stop-index="45">
                        <parameter>
                            <column name="_id" start-index="23" stop-index="25" />
                        </parameter>
                        <parameter>
                            <data-type value="VARBINARY" start-index="30" stop-index="44" />
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <from start-index="52" stop-index="130">
            <function-table start-index="52" stop-index="130">
                <table-function function-name="OPENROWSET" text="OPENROWSET('CosmosDB', 'Your-account;Database=your-database;Key=your-key',HTAP)">
                    <parameter>
                        <literal-expression value="CosmosDB" start-index="63" stop-index="72" />
                    </parameter>
                    <parameter>
                        <literal-expression value="Your-account;Database=your-database;Key=your-key" start-index="75" stop-index="124" />
                    </parameter>
                    <parameter>
                        <literal-expression value="HTAP" start-index="126" stop-index="129" />
                    </parameter>
                </table-function>
            </function-table>
        </from>
    </select>

    <select sql-case-id="select_from_with_contains_function">
        <projections start-index="7" stop-index="24">
            <column-projection name="candidate_name" start-index="7" stop-index="20"/>
            <column-projection name="SSN" start-index="22" stop-index="24"/>
        </projections>
        <from>
            <simple-table name="candidates" start-index="31" stop-index="40"/>
        </from>
        <where start-index="42" stop-index="120">
            <expr>
                <binary-operation-expression start-index="48" stop-index="120">
                    <left>
                        <function function-name="CONTAINS" text="CONTAINS(candidate_resume, '&quot;SQL Server&quot;')" start-index="48" stop-index="89">
                            <parameter>
                                <column name="candidate_resume" start-index="57" stop-index="72"/>
                            </parameter>
                            <parameter>
                                <literal-expression value="&quot;SQL Server&quot;" start-index="75" stop-index="88"/>
                            </parameter>
                        </function>
                    </left>
                    <right>
                        <binary-operation-expression start-index="95" stop-index="120">
                            <left>
                                <column name="candidate_division" start-index="95" stop-index="112"/>
                            </left>
                            <right>
                                <literal-expression value="DBA" start-index="116" stop-index="120"/>
                            </right>
                            <operator>=</operator>
                        </binary-operation-expression>
                    </right>
                    <operator>AND</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_escape_quotes_from_sys_table">
        <projections start-index="7" stop-index="62">
            <expression-projection start-index="7" stop-index="62" text="'DECLARE @serverName NVARCHAR(512) = N''' + value + ''''">
                <expr>
                    <binary-operation-expression start-index="7" stop-index="62">
                        <left>
                            <binary-operation-expression start-index="7" stop-index="55">
                                <left>
                                    <literal-expression value="DECLARE @serverName NVARCHAR(512) = N''" start-index="7" stop-index="47"/>
                                </left>
                                <operator>+</operator>
                                <right>
                                    <column name="value" start-index="51" stop-index="55"/>
                                </right>
                            </binary-operation-expression>
                        </left>
                        <operator>+</operator>
                        <right>
                            <literal-expression value="''" start-index="59" stop-index="62"/>
                        </right>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="dm_hadr_fabric_config_parameters" start-index="69" stop-index="104">
                <owner name="sys" start-index="69" stop-index="71"/>
            </simple-table>
        </from>
        <where start-index="106" stop-index="143">
            <expr>
                <binary-operation-expression start-index="112" stop-index="143">
                    <left>
                        <column name="parameter_name" start-index="112" stop-index="125"/>
                    </left>
                    <operator>=</operator>
                    <right>
                        <literal-expression value="DnsRecordName" start-index="129" stop-index="143"/>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_from_physical_stats_function">
        <projections start-index="7" stop-index="66">
            <column-projection name="page_count" start-index="7" stop-index="16"/>
            <column-projection name="compressed_page_count" start-index="19" stop-index="39"/>
            <column-projection name="forwarded_record_count" start-index="42" stop-index="63"/>
            <shorthand-projection start-index="66" stop-index="66"/>
        </projections>
        <from>
            <function-table start-index="73" stop-index="151">
                <table-function text="sys.dm_db_index_physical_stats(db_id(), object_id('t3'), NULL, NULL, 'SAMPLED')" function-name="sys.dm_db_index_physical_stats">
                    <parameter>
                        <function function-name="db_id" text="db_id()" start-index="104" stop-index="110"/>
                    </parameter>
                    <parameter>
                        <function function-name="object_id" text="object_id('t3')" start-index="113" stop-index="127">
                            <parameter>
                                <literal-expression value="t3" start-index="123" stop-index="126"/>
                            </parameter>
                        </function>
                    </parameter>
                    <parameter>
                        <literal-expression start-index="130" stop-index="133"/>
                    </parameter>
                    <parameter>
                        <literal-expression start-index="136" stop-index="139"/>
                    </parameter>
                    <parameter>
                        <literal-expression start-index="142" stop-index="150"/>
                    </parameter>
                </table-function>
            </function-table>
        </from>
    </select>

    <select sql-case-id="select_from_msdb_default_schema">
        <projections start-index="7" stop-index="40">
            <expression-projection text="backup_size/compressed_backup_size" start-index="7" stop-index="40">
                <expr>
                    <binary-operation-expression start-index="7" stop-index="40">
                        <left>
                            <column name="backup_size" start-index="7" stop-index="17"/>
                        </left>
                        <operator>/</operator>
                        <right>
                            <column name="compressed_backup_size" start-index="19" stop-index="40"/>
                        </right>
                    </binary-operation-expression>
                </expr>
            </expression-projection>
        </projections>
        <from>
            <simple-table name="backupset" start-index="47" stop-index="61">
                <owner name="msdb" start-index="47" stop-index="50"/>
            </simple-table>
        </from>
    </select>
    
    <select sql-case-id="select_from_database_files_2">
        <projections start-index="7" stop-index="61">
            <column-projection name="file_id" start-index="7" stop-index="13" />
            <column-projection name="name" start-index="16" stop-index="19" />
            <column-projection name="type_desc" start-index="22" stop-index="30" />
            <column-projection name="physical_name" start-index="33" stop-index="45" />
            <column-projection name="size" start-index="48" stop-index="51" />
            <column-projection name="max_size" start-index="54" stop-index="61" />
        </projections>
        <from start-index="68" stop-index="85">
            <simple-table name="database_files" start-index="68" stop-index="85">
                <owner name="sys" start-index="68" stop-index="70" />
            </simple-table>
        </from>
    </select>
    
    <select sql-case-id="select_dm_exec_requests">
        <from start-index="461" stop-index="556">
            <join-table join-type="CROSS">
                <left>
                    <simple-table name="dm_exec_requests" alias="req" start-index="461" stop-index="493" start-delimiter="[" end-delimiter="]">
                        <owner name="sys" start-index="461" stop-index="465" start-delimiter="[" end-delimiter="]" />
                    </simple-table>
                </left>
                <right>
                    <function-table table-alias="ST">
                        <table-function function-name="[sys].dm_exec_sql_text" text="[sys].dm_exec_sql_text([req].[sql_handle])" start-index="507" stop-index="548">
                            <parameter>
                                <column name="sql_handle" start-index="530" stop-index="547">
                                    <owner name="req" start-index="530"  stop-index="534" />
                                </column>
                            </parameter>
                        </table-function>
                    </function-table>
                </right>
            </join-table>
        </from>
        <projections start-index="7" stop-index="454">
            <column-projection name="session_id" start-index="7" stop-index="24" start-delimiter="[" end-delimiter="]">
                <owner name="req" start-index="7" stop-index="11" start-delimiter="[" end-delimiter="]" />
            </column-projection>
            <column-projection name="start_time" start-index="26" stop-index="43" start-delimiter="[" end-delimiter="]">
                <owner name="req" start-index="26" stop-index="30" start-delimiter="[" end-delimiter="]" />
            </column-projection>
            <column-projection name="cpu_time" alias="cpu_time_ms" start-index="45" stop-index="77" start-delimiter="[" end-delimiter="]">
                <owner name="req" start-index="45" stop-index="49" start-delimiter="[" end-delimiter="]" />
            </column-projection>
            <expression-projection text="OBJECT_NAME([ST].[objectid], [ST].[dbid])" alias="ObjectName" start-index="79" stop-index="135">
                <expr>
                    <function function-name="OBJECT_NAME" text="OBJECT_NAME([ST].[objectid], [ST].[dbid])" start-index="79" stop-index="119">
                        <parameter>
                            <column name="objectid" start-index="91" stop-index="105" start-delimiter="[" end-delimiter="]">
                                <owner name="ST" start-index="91" stop-index="94" start-delimiter="[" end-delimiter="]" />
                            </column>
                        </parameter>
                        <parameter>
                            <column name="dbid" start-index="108" stop-index="118" start-delimiter="[" end-delimiter="]">
                                <owner name="ST" start-index="108" stop-index="111" start-delimiter="[" end-delimiter="]" />
                            </column>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
            <expression-projection text="SUBSTRING(REPLACE(REPLACE(SUBSTRING([ST].[text],
    ([req].[statement_start_offset] / 2) + 1, ((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1 ), CHAR(10), ' ' ), CHAR(13), ' ' ), 1, 512 )" alias="statement_text" start-index="137" stop-index="454">
                <expr>
                    <function function-name="SUBSTRING" text="SUBSTRING(REPLACE(REPLACE(SUBSTRING([ST].[text],
    ([req].[statement_start_offset] / 2) + 1, ((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1 ), CHAR(10), ' ' ), CHAR(13), ' ' ), 1, 512 )" start-index="137" stop-index="430">
                        <parameter>
                            <function function-name="REPLACE" text="REPLACE(REPLACE(SUBSTRING([ST].[text],
    ([req].[statement_start_offset] / 2) + 1, ((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1 ), CHAR(10), ' ' ), CHAR(13), ' ' )" start-index="147" stop-index="420">
                                <parameter>
                                    <function function-name="REPLACE" text="REPLACE(SUBSTRING([ST].[text],
    ([req].[statement_start_offset] / 2) + 1, ((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1 ), CHAR(10), ' ' )" start-index="155" stop-index="403">
                                        <parameter>
                                            <function function-name="SUBSTRING" text="SUBSTRING([ST].[text],
    ([req].[statement_start_offset] / 2) + 1, ((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1 )" start-index="163" stop-index="386">
                                                <parameter>
                                                    <column name="text" start-index="173" stop-index="183" start-delimiter="[" end-delimiter="]">
                                                        <owner name="ST" start-index="173" stop-index="176" start-delimiter="[" end-delimiter="]" />
                                                    </column>
                                                </parameter>
                                                <parameter>
                                                    <binary-operation-expression text="([req].[statement_start_offset] / 2) + 1" start-index="190" stop-index="229">
                                                        <left>
                                                            <binary-operation-expression text="[req].[statement_start_offset] / 2" start-index="191" stop-index="224">
                                                                <left>
                                                                    <column name="statement_start_offset" start-index="191" stop-index="220" start-delimiter="[" end-delimiter="]">
                                                                        <owner name="req" start-index="191" stop-index="195" start-delimiter="[" end-delimiter="]" />
                                                                    </column>
                                                                </left>
                                                                <right>
                                                                    <literal-expression value="2" start-index="224" stop-index="224" />
                                                                </right>
                                                                <operator>/</operator>
                                                            </binary-operation-expression>
                                                        </left>
                                                        <operator>+</operator>
                                                        <right>
                                                            <literal-expression value="1" start-index="229" stop-index="229" />
                                                        </right>
                                                    </binary-operation-expression>
                                                </parameter>
                                                <parameter>
                                                    <binary-operation-expression text="((CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2) + 1" start-index="232" stop-index="384">
                                                        <left>
                                                            <binary-operation-expression text="(CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]) / 2" start-index="233" stop-index="379">
                                                                <left>
                                                                    <binary-operation-expression text="CASE [req].[statement_end_offset] WHEN -1 THEN DATALENGTH([ST].[text]) ELSE [req].[statement_end_offset] END - [req].[statement_start_offset]" start-index="234" stop-index="374">
                                                                        <left>
                                                                            <common-expression text="CASE[req].[statement_end_offset]WHEN-1THENDATALENGTH([ST].[text])ELSE[req].[statement_end_offset]END" start-index="234" stop-index="341" />
                                                                        </left>
                                                                        <right>
                                                                            <column name="statement_start_offset" start-index="345" stop-index="374" start-delimiter="[" end-delimiter="]">
                                                                                <owner name="req" start-index="345" stop-index="349" start-delimiter="[" end-delimiter="]" />
                                                                            </column>
                                                                        </right>
                                                                        <operator>-</operator>
                                                                    </binary-operation-expression>
                                                                </left>
                                                                <right>
                                                                    <literal-expression value="2" start-index="379" stop-index="379" />
                                                                </right>
                                                                <operator>/</operator>
                                                            </binary-operation-expression>
                                                        </left>
                                                        <operator>+</operator>
                                                        <right>
                                                            <literal-expression value="1" start-index="384" stop-index="384" />
                                                        </right>
                                                    </binary-operation-expression>
                                                </parameter>
                                            </function>
                                        </parameter>
                                        <parameter>
                                            <function function-name="CHAR" text="CHAR(10)" start-index="389" stop-index="396" />
                                        </parameter>
                                        <parameter>
                                            <literal-expression value=" " start-index="399" stop-index="401" />
                                        </parameter>
                                    </function>
                                </parameter>
                                <parameter>
                                    <function function-name="CHAR" text="CHAR(13)" start-index="406" stop-index="413" />
                                </parameter>
                                <parameter>
                                    <literal-expression value=" " start-index="416" stop-index="418" />
                                </parameter>
                            </function>
                        </parameter>
                        <parameter>
                            <literal-expression value="1" start-index="423" stop-index="423"/>
                        </parameter>
                        <parameter>
                            <literal-expression value="512" start-index="426" stop-index="428"/>
                        </parameter>
                    </function>
                </expr>
            </expression-projection>
        </projections>
        <order-by>
            <column-item name="cpu_time" start-index="567" stop-index="582" order-direction="DESC" start-delimiter="[" end-delimiter="]">
                <owner name="req" start-index="567" stop-index="571" start-delimiter="[" end-delimiter="]" />
            </column-item>
        </order-by>
    </select>
    
    <select sql-case-id="select_mdx">
        <projections start-index="7" stop-index="153">
            <expression-projection start-index="7" stop-index="94" text="{[Measures].[Internet Sales Count], [Measures].[Internet Sales-Sales Amount]} ON COLUMNS">
                <expr>
                    <common-expression text="{[Measures].[Internet Sales Count], [Measures].[Internet Sales-Sales Amount]} ON COLUMNS" start-index="7" stop-index="94" />
                </expr>
            </expression-projection>
            <expression-projection text="{[Product].[Product Line].[Product Line].MEMBERS} ON ROWS" start-index="97" stop-index="153">
                <expr>
                    <common-expression text="{[Product].[Product Line].[Product Line].MEMBERS} ON ROWS" start-index="97" stop-index="153" />
                </expr>
            </expression-projection>
        </projections>
        <from start-index="160" stop-index="187">
            <simple-table name="Analysis Services Tutorial" start-index="160" stop-index="187" start-delimiter="[" end-delimiter="]" />
        </from>
        <where start-index="189" stop-index="249">
            <expr>
                <column name="Australia" start-index="195" stop-index="249" start-delimiter="[" end-delimiter="]">
                    <owner name="Sales Territory Country" start-index="213" stop-index="237" start-delimiter="[" end-delimiter="]">
                        <owner name="Sales Territory" start-index="195" stop-index="211" start-delimiter="[" end-delimiter="]" />
                    </owner>
                </column>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_brackets_case_when_alias">
        <projections start-index="7" stop-index="176">
            <column-projection name="name" start-index="7" stop-index="25" alias="column_name"/>
            <column-projection name="column_id" start-index="27" stop-index="35"/>
            <expression-projection text="TYPE_NAME(user_type_id)" start-index="37" stop-index="72" alias="type_name">
                <function text="TYPE_NAME(user_type_id)" function-name="TYPE_NAME" start-index="37" stop-index="59">
                    <parameter>
                        <column name="user_type_id" start-index="47" stop-index="58"/>
                    </parameter>
                </function>
            </expression-projection>
            <column-projection name="max_length" start-index="75" stop-index="84"/>
            <expression-projection text="CASEWHENmax_length=-1ANDTYPE_NAME(user_type_id)&lt;&gt;'xml'THEN1ELSE0END" start-index="86" stop-index="176" alias="(max)" start-delimiter="[" end-delimiter="]">
                <expr>
                    <common-expression text="CASEWHENmax_length=-1ANDTYPE_NAME(user_type_id)&lt;&gt;'xml'THEN1ELSE0END" start-index="86" stop-index="165"/>
                </expr>
            </expression-projection>
        </projections>
        <from start-index="183" stop-index="193">
            <simple-table name="columns" start-index="183" stop-index="193">
                <owner name="sys" start-index="183" stop-index="185"/>
            </simple-table>
        </from>
        <where start-index="195" stop-index="400">
            <expr>
                <binary-operation-expression start-index="201" stop-index="400">
                    <operator>AND</operator>
                    <left>
                        <binary-operation-expression start-index="201" stop-index="247">
                            <left>
                                <column name="object_id" start-index="201" stop-index="209"/>
                            </left>
                            <right>
                                <function text="OBJECT_ID('&lt;schema_name.table_name&gt;')" function-name="OBJECT_ID" start-index="211" stop-index="247">
                                    <parameter>
                                        <literal-expression value="&lt;schema_name.table_name&gt;" start-index="221" stop-index="246"/>
                                    </parameter>
                                </function>
                            </right>
                            <operator>=</operator>
                        </binary-operation-expression>
                    </left>
                    <right>
                        <binary-operation-expression start-index="255" stop-index="399">
                            <operator>OR</operator>
                            <left>
                                <in-expression start-index="255" stop-index="312">
                                    <left>
                                        <function text="TYPE_NAME(user_type_id)" start-index="255" stop-index="277" function-name="TYPE_NAME">
                                            <parameter>
                                                <column name="user_type_id" start-index="265" stop-index="276"/>
                                            </parameter>
                                        </function>
                                    </left>
                                    <right>
                                        <list-expression start-index="282" stop-index="312">
                                            <items>
                                                <literal-expression value="xml" start-index="283" stop-index="287"/>
                                            </items>
                                            <items>
                                                <literal-expression value="text" start-index="289" stop-index="294"/>
                                            </items>
                                            <items>
                                                <literal-expression value="ntext" start-index="297" stop-index="303"/>
                                            </items>
                                            <items>
                                                <literal-expression value="image" start-index="305" stop-index="311"/>
                                            </items>
                                        </list-expression>
                                    </right>
                                </in-expression>
                            </left>
                            <right>
                                <binary-operation-expression start-index="318" stop-index="398">
                                    <operator>AND</operator>
                                    <left>
                                        <in-expression start-index="318" stop-index="378">
                                            <left>
                                                <function text="TYPE_NAME(user_type_id)" start-index="318" stop-index="340" function-name="TYPE_NAME">
                                                    <parameter>
                                                        <column name="user_type_id" start-index="328" stop-index="339"/>
                                                    </parameter>
                                                </function>
                                            </left>
                                            <right>
                                                <list-expression start-index="345" stop-index="378">
                                                    <items>
                                                        <literal-expression value="varchar" start-index="346" stop-index="354"/>
                                                    </items>
                                                    <items>
                                                        <literal-expression value="nvarchar" start-index="356" stop-index="365"/>
                                                    </items>
                                                    <items>
                                                        <literal-expression value="varbinary" start-index="367" stop-index="377"/>
                                                    </items>
                                                </list-expression>
                                            </right>
                                        </in-expression>
                                    </left>
                                    <right>
                                        <binary-operation-expression start-index="384" stop-index="398">
                                            <operator>=</operator>
                                            <left>
                                                <column name="max_length" start-index="384" stop-index="393"/>
                                            </left>
                                            <right>
                                                <literal-expression value="-1" start-index="397" stop-index="398"/>
                                            </right>
                                        </binary-operation-expression>
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_from_tmp_table_with_alias">
        <projections start-index="7" stop-index="18">
            <column-projection name="x" start-index="7" stop-index="18" alias="Test2Col"/>
        </projections>
        <from start-index="25" stop-index="26">
            <simple-table name="#t" start-index="25" stop-index="26"/>
        </from>
    </select>

    <select sql-case-id="select_with_person_simple_match_where">
        <projections start-index="7" stop-index="32">
            <column-projection name="name" start-index="7" stop-index="32" alias="FriendName">
                <owner name="Person2" start-index="7" stop-index="13"/>
            </column-projection>
        </projections>
        <from start-index="39" stop-index="76">
            <join-table join-type="COMMA">
                <left>
                    <join-table join-type="COMMA">
                        <left>
                            <simple-table name="Person" start-index="39" stop-index="52" alias="Person1"/>
                        </left>
                        <right>
                            <simple-table name="friend" start-index="55" stop-index="60"/>
                        </right>
                    </join-table>
                </left>
                <right>
                    <simple-table name="Person" start-index="63" stop-index="76" alias="Person2"/>
                </right>
            </join-table>
        </from>
        <where start-index="78" stop-index="142">
            <expr>
                <binary-operation-expression start-index="84" stop-index="142">
                    <left>
                        <common-expression text="MATCH(Person1-(friend)->Person2)" start-index="84" stop-index="115"/>
                    </left>
                    <operator>AND</operator>
                    <right>
                        <binary-operation-expression start-index="121" stop-index="142">
                            <left>
                                <column name="name" start-index="121" stop-index="132">
                                    <owner name="Person1" start-index="121" stop-index="127"/>
                                </column>
                            </left>
                            <right>
                                <literal-expression value="Alice" start-index="136" stop-index="142"/>
                            </right>
                            <operator>=</operator>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_person_simple_cascade_match_where">
        <projections start-index="7" stop-index="32">
            <column-projection name="name" start-index="7" stop-index="32" alias="FriendName">
                <owner name="Person3" start-index="7" stop-index="13"/>
            </column-projection>
        </projections>
        <from start-index="39" stop-index="108">
            <join-table join-type="COMMA">
                <left>
                    <join-table join-type="COMMA">
                        <left>
                            <join-table join-type="COMMA">
                                <left>
                                    <join-table join-type="COMMA">
                                        <left>
                                            <simple-table name="Person" start-index="39" stop-index="52" alias="Person1"/>
                                        </left>
                                        <right>
                                            <simple-table name="friend" start-index="55" stop-index="60"/>
                                        </right>
                                    </join-table>
                                </left>
                                <right>
                                    <simple-table name="Person" start-index="63" stop-index="76" alias="Person2"/>
                                </right>
                            </join-table>
                        </left>
                        <right>
                            <simple-table name="friend" start-index="79" stop-index="92" alias="friend2"/>
                        </right>
                    </join-table>
                </left>
                <right>
                    <simple-table name="Person" start-index="95" stop-index="108" alias="Person3"/>
                </right>
            </join-table>
        </from>
        <where start-index="110" stop-index="193">
            <expr>
                <binary-operation-expression start-index="116" stop-index="193">
                    <left>
                        <common-expression text="MATCH(Person1-(friend)->Person2-(friend2)->Person3)" start-index="116" stop-index="166"/>
                    </left>
                    <right>
                        <binary-operation-expression start-index="172" stop-index="193">
                            <left>
                                <column name="name" start-index="172" stop-index="183">
                                    <owner name="Person1" start-index="172" stop-index="178"/>
                                </column>
                            </left>
                            <operator>=</operator>
                            <right>
                                <literal-expression value="Alice" start-index="187" stop-index="193"/>
                            </right>
                        </binary-operation-expression>
                    </right>
                    <operator>AND</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_multi_simple_match_where">
        <projections start-index="7" stop-index="54">
            <column-projection name="name" start-index="7" stop-index="29" alias="Friend1">
                <owner name="Person1" start-index="7" stop-index="13"/>
            </column-projection>
            <column-projection name="name" start-index="32" stop-index="54" alias="Friend2">
                <owner name="Person2" start-index="32" stop-index="38"/>
            </column-projection>
        </projections>
        <from start-index="61" stop-index="138">
            <join-table join-type="COMMA">
                <left>
                    <join-table join-type="COMMA">
                        <left>
                            <join-table join-type="COMMA">
                                <left>
                                    <join-table join-type="COMMA">
                                        <left>
                                            <simple-table name="Person" start-index="61" stop-index="74" alias="Person1"/>
                                        </left>
                                        <right>
                                            <simple-table name="friend" start-index="77" stop-index="90" alias="friend1"/>
                                        </right>
                                    </join-table>
                                </left>
                                <right>
                                    <simple-table name="Person" start-index="93" stop-index="106" alias="Person2"/>
                                </right>
                            </join-table>
                        </left>
                        <right>
                            <simple-table name="friend" start-index="109" stop-index="122" alias="friend2"/>
                        </right>
                    </join-table>
                </left>
                <right>
                    <simple-table name="Person" start-index="125" stop-index="138" alias="Person0"/>
                </right>
            </join-table>
        </from>
        <where start-index="140" stop-index="209">
            <expr>
                <common-expression text="MATCH(Person1-(friend1)->Person0 AND Person2-(friend2)->Person0)" start-index="146" stop-index="209"/>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_from_subquery_with_graph_agg_function_and_arbitrary_match">
        <projections start-index="7" stop-index="25">
            <column-projection name="PersonName" start-index="7" stop-index="16"/>
            <column-projection name="Friends" start-index="19" stop-index="25"/>
        </projections>
        <from start-index="32" stop-index="356">
            <subquery-table alias="Q" start-index="32" stop-index="361">
                <subquery start-index="32" stop-index="356">
                    <select>
                        <projections start-index="40" stop-index="198">
                            <column-projection name="name" start-index="40" stop-index="65" alias="PersonName">
                                <owner name="Person1" start-index="40" stop-index="46"/>
                            </column-projection>
                            <expression-projection text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" start-index="68" stop-index="134" alias="Friends">
                                <function text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" function-name="STRING_AGG" start-index="68" stop-index="123">
                                    <parameter>
                                        <column name="name" start-index="79" stop-index="90">
                                            <owner name="Person2" start-index="79" stop-index="85"/>
                                        </column>
                                    </parameter>
                                    <parameter>
                                        <literal-expression value="->" start-index="93" stop-index="96"/>
                                    </parameter>
                                </function>
                            </expression-projection>
                            <expression-projection text="LAST_VALUE(Person2.name) WITHIN GROUP (GRAPH PATH)" start-index="137" stop-index="198" alias="LastNode">
                                <function text="LAST_VALUE(Person2.name) WITHIN GROUP (GRAPH PATH)" function-name="LAST_VALUE" start-index="137" stop-index="186">
                                    <parameter>
                                        <column name="name" start-index="148" stop-index="159">
                                            <owner name="Person2" start-index="148" stop-index="154"/>
                                        </column>
                                    </parameter>
                                </function>
                            </expression-projection>
                        </projections>
                        <from start-index="205" stop-index="275">
                            <join-table join-type="COMMA">
                                <left>
                                    <join-table join-type="COMMA">
                                        <left>
                                            <simple-table name="Person" start-index="205" stop-index="221" alias="Person1"/>
                                        </left>
                                        <right>
                                            <simple-table name="friendOf" start-index="224" stop-index="246" alias="fo"/>
                                        </right>
                                    </join-table>
                                </left>
                                <right>
                                    <simple-table name="Person" start-index="249" stop-index="275" alias="Person2"/>
                                </right>
                            </join-table>
                        </from>
                        <where start-index="277" stop-index="355">
                            <expr>
                                <binary-operation-expression start-index="283" stop-index="355">
                                    <operator>AND</operator>
                                    <left>
                                        <common-expression text="MATCH(SHORTEST_PATH(Person1(-(fo)->Person2)+))" start-index="283" stop-index="328"/>
                                    </left>
                                    <right>
                                        <binary-operation-expression start-index="334" stop-index="355">
                                            <operator>=</operator>
                                            <left>
                                               <column name="name" start-index="334" stop-index="345">
                                                   <owner name="Person1" start-index="334" stop-index="340"/>
                                               </column>
                                            </left>
                                            <right>
                                                <literal-expression value="Jacob" start-index="349" stop-index="355"/>
                                            </right>
                                        </binary-operation-expression>
                                    </right>
                                </binary-operation-expression>
                            </expr>
                        </where>
                    </select>
                </subquery>
            </subquery-table>
        </from>
        <where start-index="363" stop-index="388">
            <expr>
                <binary-operation-expression start-index="369" stop-index="388">
                    <left>
                        <column name="LastNode" start-index="369" stop-index="378">
                            <owner name="Q" start-index="369" stop-index="369"/>
                        </column>
                    </left>
                    <right>
                        <literal-expression value="Alice" start-index="382" stop-index="388"/>
                    </right>
                    <operator>=</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_from_arbitrary_match_al_pattern_where">
        <projections start-index="7" stop-index="101">
            <column-projection name="name" start-index="7" stop-index="32" alias="PersonName">
                <owner name="Person1" start-index="7" stop-index="13"/>
            </column-projection>
            <expression-projection text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" start-index="35" stop-index="101" alias="Friends">
                <function text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" function-name="STRING_AGG" start-index="35" stop-index="90">
                    <parameter>
                        <column name="name" start-index="46" stop-index="57">
                            <owner name="Person2" start-index="46" stop-index="52"/>
                        </column>
                    </parameter>
                    <parameter>
                        <literal-expression value="->" start-index="60" stop-index="63"/>
                    </parameter>
                </function>
            </expression-projection>
        </projections>
        <from start-index="107" stop-index="178">
            <join-table join-type="COMMA">
                <left>
                    <join-table join-type="COMMA">
                        <left>
                            <simple-table name="Person" start-index="108" stop-index="124" alias="Person1"/>
                        </left>
                        <right>
                            <simple-table name="friendOf" start-index="127" stop-index="149" alias="fo"/>
                        </right>
                    </join-table>
                </left>
                <right>
                    <simple-table name="Person" start-index="152" stop-index="178" alias="Person2"/>
                </right>
            </join-table>
        </from>
        <where start-index="180" stop-index="262">
            <expr>
                <binary-operation-expression start-index="186" stop-index="262">
                    <left>
                        <common-expression text="MATCH(SHORTEST_PATH(Person1(-(fo)->Person2){1,3}))" start-index="186" stop-index="235"/>
                    </left>
                    <right>
                        <binary-operation-expression start-index="241" stop-index="262">
                            <left>
                                <column name="name" start-index="241" stop-index="252">
                                    <owner name="Person1" start-index="241" stop-index="247"/>
                                </column>
                            </left>
                            <right>
                                <literal-expression value="Jacob" start-index="256" stop-index="262"/>
                            </right>
                            <operator>=</operator>
                        </binary-operation-expression>
                    </right>
                    <operator>AND</operator>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_with_multi_arbitrary_match">
        <projections start-index="7" stop-index="118">
            <column-projection name="name" start-index="7" stop-index="32" alias="PersonName">
                <owner name="Person1" start-index="7" stop-index="13"/>
            </column-projection>
            <expression-projection text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" start-index="35" stop-index="101" alias="Friends">
                <function text="STRING_AGG(Person2.name, '->') WITHIN GROUP (GRAPH PATH)" function-name="STRING_AGG" start-index="35" stop-index="90">
                    <parameter>
                        <column name="name" start-index="46" stop-index="57">
                            <owner name="Person2" start-index="46" stop-index="52"/>
                        </column>
                    </parameter>
                    <parameter>
                        <literal-expression value="->" start-index="60" stop-index="63"/>
                    </parameter>
                </function>
            </expression-projection>
            <column-projection name="name" start-index="104" stop-index="118">
                <owner name="Restaurant" start-index="104" stop-index="113"/>
            </column-projection>
        </projections>
        <from start-index="125" stop-index="214">
            <join-table join-type="COMMA">
                <left>
                    <join-table join-type="COMMA">
                        <left>
                            <join-table join-type="COMMA">
                                <left>
                                    <join-table join-type="COMMA">
                                        <left>
                                            <simple-table name="Person" start-index="125" stop-index="141" alias="Person1"/>
                                        </left>
                                        <right>
                                            <simple-table name="friendOf" start-index="144" stop-index="166" alias="fo"/>
                                        </right>
                                    </join-table>
                                </left>
                                <right>
                                    <simple-table name="Person" start-index="169" stop-index="195" alias="Person2"/>
                                </right>
                            </join-table>
                        </left>
                        <right>
                            <simple-table name="likes" start-index="198" stop-index="202"/>
                        </right>
                    </join-table>
                </left>
                <right>
                    <simple-table name="Restaurant" start-index="205" stop-index="214"/>
                </right>
            </join-table>
        </from>
        <where start-index="216" stop-index="383">
            <expr>
                <binary-operation-expression start-index="222" stop-index="383">
                    <operator>AND</operator>
                    <left>
                        <binary-operation-expression start-index="222" stop-index="342">
                            <operator>AND</operator>
                            <left>
                                <common-expression text="MATCH(SHORTEST_PATH(Person1(-(fo)->Person2){1,3}) AND LAST_NODE(Person2)-(likes)->Restaurant )" start-index="222" stop-index="315"/>
                            </left>
                            <right>
                                <binary-operation-expression start-index="321" stop-index="342">
                                    <operator>=</operator>
                                    <left>
                                        <column name="name" start-index="321" stop-index="332">
                                            <owner name="Person1" start-index="321" stop-index="327"/>
                                        </column>
                                    </left>
                                    <right>
                                        <literal-expression value="Jacob" start-index="336" stop-index="342"/>
                                    </right>
                                </binary-operation-expression>
                            </right>
                        </binary-operation-expression>
                    </left>
                    <right>
                        <binary-operation-expression start-index="348" stop-index="383">
                            <operator>=</operator>
                            <left>
                                <column name="name" start-index="348" stop-index="362">
                                    <owner name="Restaurant" start-index="348" stop-index="357"/>
                                </column>
                            </left>
                            <right>
                                <literal-expression value="Ginger and Spice" start-index="366" stop-index="383"/>
                            </right>
                        </binary-operation-expression>
                    </right>
                </binary-operation-expression>
            </expr>
        </where>
    </select>

    <select sql-case-id="select_hour_from_table">
        <projections start-index="7" stop-index="10">
            <column-projection name="hour" start-index="7" stop-index="10"/>
        </projections>
        <from start-index="17" stop-index="22">
            <simple-table name="table1" start-index="17" stop-index="22"/>
        </from>
    </select>

    <select sql-case-id="select_minute_from_table">
        <projections start-index="7" stop-index="12">
            <column-projection name="minute" start-index="7" stop-index="12"/>
        </projections>
        <from start-index="19" stop-index="24">
            <simple-table name="table1" start-index="19" stop-index="24"/>
        </from>
    </select>

    <select sql-case-id="select_with_collation_keyword">
        <projections start-index="7" stop-index="59">
            <column-projection name="pg_get_expr" start-index="7" stop-index="32" alias="CONSTRAINT"/>
            <column-projection name="indcollation" start-index="35" stop-index="59" alias="COLLATION"/>
        </projections>
        <from start-index="66" stop-index="73">
            <simple-table name="pg_index" start-index="66" stop-index="73"/>
        </from>
    </select>
</sql-parser-test-cases>
