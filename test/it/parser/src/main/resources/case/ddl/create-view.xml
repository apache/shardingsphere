<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sql-parser-test-cases>
    <create-view sql-case-id="create_view_with_udf" view-definition="SELECT DB29023216.TESTFUNC()">
        <view name="V_T1_C" start-index="12" stop-index="17" />
        <select>
            <projections start-index="29" stop-index="49">
                <expression-projection text="DB29023216.TESTFUNC()" start-index="29" stop-index="49">
                    <expr>
                        <function function-name="DB29023216.TESTFUNC()" text="DB29023216.TESTFUNC()" start-index="29" stop-index="49" />
                    </expr>
                </expression-projection>
            </projections>
        </select>
    </create-view>
    <create-view sql-case-id="create_view_with_udf_nested_fun" view-definition="SELECT DB29023216.TESTFUNC(NOW())">
        <view name="V_T1_C" start-index="12" stop-index="17" />
        <select>
            <projections start-index="29" stop-index="54">
                <expression-projection text="DB29023216.TESTFUNC(NOW())" start-index="29" stop-index="54">
                    <expr>
                        <function function-name="DB29023216.TESTFUNC(NOW())" text="DB29023216.TESTFUNC(NOW())" start-index="29" stop-index="54">
                            <parameter>
                                <function function-name="NOW" text="NOW()" start-index="49" stop-index="53" />
                            </parameter>
                        </function>
                    </expr>
                </expression-projection>
            </projections>
        </select>
    </create-view>
    <create-view sql-case-id="create_view_with_udf_arg" view-definition="SELECT DB29023216.TESTFUNC(1,2,3,4)">
        <view name="V_T1_C" start-index="12" stop-index="17" />
        <select>
            <projections start-index="29" stop-index="56">
                <expression-projection text="DB29023216.TESTFUNC(1,2,3,4)" start-index="29" stop-index="56">
                    <expr>
                        <function function-name="DB29023216.TESTFUNC(1,2,3,4)" text="DB29023216.TESTFUNC(1,2,3,4)" start-index="29" stop-index="56">
                            <parameter>
                                <literal-expression start-index="49" stop-index="49" value="1" />
                            </parameter>
                            <parameter>
                                <literal-expression start-index="51" stop-index="51" value="2" />
                            </parameter>
                            <parameter>
                                <literal-expression start-index="53" stop-index="53" value="3" />
                            </parameter>
                            <parameter>
                                <literal-expression start-index="55" stop-index="55" value="4" />
                            </parameter>
                        </function>
                    </expr>
                </expression-projection>
            </projections>
        </select>
    </create-view>
    <create-view sql-case-id="create_view" view-definition="SELECT * FROM films WHERE kind = 'Comedy'">
        <view name="comedies" start-index="12" stop-index="19" />
        <select>
            <projections start-index="31" stop-index="31">
                <shorthand-projection start-index="31" stop-index="31" />
            </projections>
            <from>
                <simple-table name="films" start-index="38" stop-index="42" />
            </from>
            <where start-index="44" stop-index="64">
                <expr>
                    <binary-operation-expression start-index="50" stop-index="64">
                        <left>
                            <column name="kind" start-index="50" stop-index="53" />
                        </left>
                        <right>
                            <literal-expression value="Comedy" start-index="57" stop-index="64" />
                        </right>
                        <operator>=</operator>
                    </binary-operation-expression>
                </expr>
            </where>
        </select>
    </create-view>
    
    <create-view sql-case-id="create_view_with_check_option" view-definition="SELECT * FROM comedies WHERE classification = 'U'">
        <view name="universal_comedies" start-index="12" stop-index="29" />
        <select>
            <projections start-index="41" stop-index="41">
                <shorthand-projection start-index="41" stop-index="41" />
            </projections>
            <from>
                <simple-table name="comedies" start-index="48" stop-index="55" />
            </from>
            <where start-index="57" stop-index="82">
                <expr>
                    <binary-operation-expression start-index="63" stop-index="82">
                        <left>
                            <column name="classification" start-index="63" stop-index="76" />
                        </left>
                        <right>
                            <literal-expression value="U" start-index="80" stop-index="82" />
                        </right>
                        <operator>=</operator>
                    </binary-operation-expression>
                </expr>
            </where>
        </select>
    </create-view>
    
    <create-view sql-case-id="create_view_with_recursive" view-definition="VALUES (1) UNION ALL SELECT n+1 FROM nums_1_100 WHERE n = 100">
        <view name="nums_1_100" start-index="22" stop-index="38">
            <owner name="public" start-index="22" stop-index="27" />
        </view>
        <select>
            <!-- FIXME support VALUES (1) projection parse -->
            <projections start-index="-1" stop-index="-1" />
            <combine combine-type="UNION_ALL" start-index="58" stop-index="107">
                <left>
                    <projections start-index="-1" stop-index="-1" />
                </left>
                <right>
                    <projections start-index="75" stop-index="77">
                        <expression-projection text="n+1" start-index="75" stop-index="77" />
                    </projections>
                    <from>
                        <simple-table name="nums_1_100" start-index="84" stop-index="93" />
                    </from>
                    <where start-index="95" stop-index="107">
                        <expr>
                            <binary-operation-expression start-index="101" stop-index="107">
                                <left>
                                    <column name="n" start-index="101" stop-index="101" />
                                </left>
                                <right>
                                    <literal-expression value="100" start-index="105" stop-index="107" />
                                </right>
                                <operator>=</operator>
                            </binary-operation-expression>
                        </expr>
                    </where>
                </right>
            </combine>
        </select>
    </create-view>
    
    <create-view sql-case-id="create_view_with_option" view-definition="SELECT * FROM t_order">
        <view name="order_view" start-index="28" stop-index="37" />
        <select>
            <projections start-index="97" stop-index="97">
                <shorthand-projection start-index="97" stop-index="97" />
            </projections>
            <from>
                <simple-table name="t_order" start-index="104" stop-index="110" />
            </from>
        </select>
    </create-view>

    <create-view sql-case-id="create_or_replace_view_with_select" view-definition="select p.name planet, p.class, m.name moon, m.radius from planets p, moons m where p.name = m.planet_name(+) and m.name(+) not like 'S/%'">
        <view name="named_moons" start-index="23" stop-index="33" />
        <select>
            <projections start-index="45" stop-index="89">
                <column-projection name="name" alias="planet" start-index="45" stop-index="57">
                    <owner name="p" start-index="45" stop-index="45" />
                </column-projection>
                <column-projection name="class" start-index="60" stop-index="66">
                    <owner name="p" start-index="60" stop-index="60" />
                </column-projection>
                <column-projection name="name" alias="moon" start-index="69" stop-index="79">
                    <owner name="m" start-index="69" stop-index="69" />
                </column-projection>
                <column-projection name="radius" start-index="82" stop-index="89">
                    <owner name="m" start-index="82" stop-index="82" />
                </column-projection>
            </projections>
            <from>
                <join-table join-type="COMMA">
                    <left>
                        <simple-table name="planets" alias="p" start-index="96" stop-index="104" />
                    </left>
                    <right>
                        <simple-table name="moons" alias="m" start-index="107" stop-index="113" />
                    </right>
                </join-table>
            </from>
            <where start-index="115" stop-index="174">
                <expr>
                    <binary-operation-expression start-index="121" stop-index="174">
                        <left>
                            <binary-operation-expression start-index="121" stop-index="145">
                                <left>
                                    <column name="name" start-index="121" stop-index="126">
                                        <owner name="p" start-index="121" stop-index="121" />
                                    </column>
                                </left>
                                <right>
                                    <outer-join-expression>
                                        <column name="planet_name" start-index="130" stop-index="142">
                                            <owner name="m" start-index="130" stop-index="130" />
                                        </column>
                                        <join-operator>(+)</join-operator>
                                    </outer-join-expression>
                                </right>
                                <operator>=</operator>
                            </binary-operation-expression>
                        </left>
                        <right>
                            <binary-operation-expression start-index="151" stop-index="174">
                                <left>
                                    <outer-join-expression>
                                        <column name="name" start-index="151" stop-index="156">
                                            <owner name="m" start-index="151" stop-index="151" />
                                        </column>
                                        <join-operator>(+)</join-operator>
                                    </outer-join-expression>
                                </left>
                                <right>
                                    <list-expression start-index="170" stop-index="174">
                                        <items>
                                            <literal-expression value="S/%" start-index="170" stop-index="174" />
                                        </items>
                                    </list-expression>
                                </right>
                                <operator>NOT LIKE</operator>
                            </binary-operation-expression>
                        </right>
                        <operator>and</operator>
                    </binary-operation-expression>
                </expr>
            </where>
        </select>
    </create-view>
    
    <create-view sql-case-id="create_view_as_simple_select" view-definition="SELECT * FROM laurel.emp">
        <view name="employee" start-index="12" stop-index="26">
            <owner name="laurel" start-index="12" stop-index="17" />
        </view>
        <select>
            <projections start-index="38" stop-index="38">
                <shorthand-projection start-index="38" stop-index="38" />
            </projections>
            <from>
                <simple-table name="emp" start-index="45" stop-index="54">
                    <owner name="laurel" start-index="45" stop-index="50" />
                </simple-table>
            </from>
        </select>
    </create-view>
    
    <create-view sql-case-id="create_view_as_where_where" view-definition="SELECT employee_id, last_name, department_id FROM employees, departments WHERE employees.department_id = departments.department_id">
        <view name="employees_departments" start-index="12" stop-index="32" />
        <select>
            <projections start-index="44" stop-index="80">
                <column-projection name="employee_id" start-index="44" stop-index="54" />
                <column-projection name="last_name" start-index="57" stop-index="65" />
                <column-projection name="department_id" start-index="68" stop-index="80" />
            </projections>
            <from>
                <join-table join-type="COMMA">
                    <left>
                        <simple-table name="employees" start-index="87" stop-index="95" />
                    </left>
                    <right>
                        <simple-table name="departments" start-index="98" stop-index="108" />
                    </right>
                </join-table>
            </from>
            <where start-index="110" stop-index="166">
                <expr>
                    <binary-operation-expression start-index="116" stop-index="166">
                        <left>
                            <column name="department_id" start-index="116" stop-index="138">
                                <owner name="employees" start-index="116" stop-index="124" />
                            </column>
                        </left>
                        <right>
                            <column name="department_id" start-index="142" stop-index="166">
                                <owner name="departments" start-index="142" stop-index="152" />
                            </column>
                        </right>
                        <operator>=</operator>
                    </binary-operation-expression>
                </expr>
            </where>
        </select>
    </create-view>
</sql-parser-test-cases>
