<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<sql-cases>
    <sql-case id="create_trigger" value="CREATE TRIGGER reminder1
        ON Sales.Customer
        AFTER INSERT, UPDATE
        AS INSERT INTO SalesPersonQuotaHistory VALUES(t1, 100)" db-types="SQLServer" />
    <sql-case id="create_trigger_with_database_scoped" value="CREATE TRIGGER ddl_trig_database
        ON ALL SERVER
        AFTER INSERT
        AS
            SELECT EVENTDATA()" db-types="SQLServer" />

    <sql-case id="create_trigger_with_create_view" value="CREATE TRIGGER tr1 BEFORE INSERT ON t1 FOR EACH ROW BEGIN create view v1 as select 1; END" db-types="MySQL" />
    <sql-case id="create_trigger_with_dml_event_clause" value="CREATE TRIGGER scott.emp_permit_changes BEFORE DELETE OR INSERT OR UPDATE ON scott.emp BEGIN IF (IS_SERVERERROR (1017)) THEN NULL; ELSE NULL; END IF; END;" db-types="Oracle" />
    <sql-case id="create_trigger_with_body" value="CREATE TRIGGER log_errors
        AFTER SERVERERROR ON DATABASE
        BEGIN
        IF (IS_SERVERERROR (1017)) THEN
          NULL;
        ELSE
          NULL;
        END IF;
        END;" db-types="Oracle" />
    <sql-case id="create_trigger_with_execute_immediate_statement" value="CREATE TRIGGER adg_logon_sync_trigger
        AFTER LOGON ON user.schema
            begin
                if (SYS_CONTEXT('USERENV', 'DATABASE_ROLE')  IN ('PHYSICAL STANDBY')) then
                  execute immediate 'alter session sync with primary';
            end if;
        end;" db-types="Oracle" />
    <sql-case id="create_trigger_with_assignment_statement" value="CREATE TRIGGER Contacts_BI
            BEFORE INSERT ON Contacts FOR EACH ROW
        BEGIN
            :NEW.ID := Contacts_Seq.NEXTVAL;
        END;" db-types="Oracle" />
</sql-cases>
