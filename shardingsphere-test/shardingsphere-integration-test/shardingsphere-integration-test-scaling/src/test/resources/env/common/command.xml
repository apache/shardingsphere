<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<command>
    <create-database>
        CREATE DATABASE sharding_db
    </create-database>
    
    <use-database>
        USE sharding_db
    </use-database>
    
    <add-resource>
        ADD RESOURCE ds_%s (URL="jdbc:mysql://%s/%s?serverTimezone=UTC&amp;useSSL=false&amp;rewriteBatchedStatements=true",USER=root,PASSWORD=root)
    </add-resource>
    
    <create-sharding-algorithm>
        CREATE SHARDING ALGORITHM database_inline (
        TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 2}")));
        CREATE SHARDING ALGORITHM t_order_inline (
        TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_${order_id % 2}")));
        CREATE SHARDING ALGORITHM t_order_item_inline (
        TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}")))
    </create-sharding-algorithm>
    
    <create-sharding-table>
        CREATE SHARDING TABLE RULE t_order (
        DATANODES("ds_${0..1}.t_order_${0..1}"),
        DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
        TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
        KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
        ), t_order_item (
        DATANODES("ds_${0..1}.t_order_item_${0..1}"),
        DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
        TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
        KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake)))
    </create-sharding-table>
    
    <create-sharding-binding>
        CREATE SHARDING BINDING TABLE RULES (t_order,t_order_item)
    </create-sharding-binding>
    
    <create-sharding-scaling-rule>
        CREATE SHARDING SCALING RULE scaling_manual (DATA_CONSISTENCY_CHECKER(TYPE(NAME=CRC32_MATCH)))
    </create-sharding-scaling-rule>
    
    <alter-sharding-algorithm>
        ALTER SHARDING ALGORITHM database_inline (
        TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}")));
    </alter-sharding-algorithm>
    
    <alter-sharding-table-rule>
        ALTER SHARDING TABLE RULE t_order (
        DATANODES("ds_${2..4}.t_order_${0..1}"),
        DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
        TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
        KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
        ), t_order_item (
        DATANODES("ds_${2..4}.t_order_item_${0..1}"),
        DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
        TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
        KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake)));
    </alter-sharding-table-rule>
    
    <preview-select-order>
        PREVIEW SELECT COUNT(1) FROM t_order;
    </preview-select-order>
    
    <show-scaling-list>
        SHOW SCALING LIST
    </show-scaling-list>
    
    <show-scaling-status>
        SHOW SCALING STATUS %s
    </show-scaling-status>
    
    <stop-scaling-source-writing>
        STOP SCALING SOURCE WRITING %s;
    </stop-scaling-source-writing>
    
    <check-scaling-data-match>
        CHECK SCALING %s BY TYPE (NAME=CRC32_MATCH);
    </check-scaling-data-match>
    
    <apply-scaling>
        APPLY SCALING %s;
    </apply-scaling>
</command>
