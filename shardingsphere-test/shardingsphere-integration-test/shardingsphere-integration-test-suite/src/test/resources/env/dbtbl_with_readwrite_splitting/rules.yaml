#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

rules:
- !SHARDING
  tables:
    t_order:
      actualDataNodes: pr_ds_${0..9}.t_order_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: standard_test
    t_order_item:
      actualDataNodes: pr_ds_${0..9}.t_order_item_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: standard_test
      keyGenerateStrategy:
        column: item_id
        keyGeneratorName: constant
    t_order_details:
      actualDataNodes: pr_ds_${0..9}.t_order_details_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: order_id
          shardingAlgorithmName: standard_test
  bindingTables:
    - t_order,t_order_item,t_order_details
  broadcastTables:
    - t_broadcast_table
    - t_broadcast_table_for_ddl
  
  shardingAlgorithms:
    standard_test:
      type: STANDARD_TEST
  
  keyGenerators:
    constant:
      type: Constant
      
- !READWRITE_SPLITTING
  dataSources:
    pr_ds_0:
      writeDataSourceName: write_ds_0
      readDataSourceNames:
        - read_ds_0
      loadBalancerName: roundRobin
    pr_ds_1:
      writeDataSourceName: write_ds_1
      readDataSourceNames:
        - read_ds_1
      loadBalancerName: roundRobin
    pr_ds_2:
      writeDataSourceName: write_ds_2
      readDataSourceNames:
        - read_ds_2
      loadBalancerName: roundRobin
    pr_ds_3:
      writeDataSourceName: write_ds_3
      readDataSourceNames:
        - read_ds_3
      loadBalancerName: roundRobin
    pr_ds_4:
      writeDataSourceName: write_ds_4
      readDataSourceNames:
        - read_ds_4
      loadBalancerName: roundRobin
    pr_ds_5:
      writeDataSourceName: write_ds_5
      readDataSourceNames:
        - read_ds_5
      loadBalancerName: roundRobin
    pr_ds_6:
      writeDataSourceName: write_ds_6
      readDataSourceNames:
        - read_ds_6
      loadBalancerName: roundRobin
    pr_ds_7:
      writeDataSourceName: write_ds_7
      readDataSourceNames:
        - read_ds_7
      loadBalancerName: roundRobin
    pr_ds_8:
      writeDataSourceName: write_ds_8
      readDataSourceNames:
        - read_ds_8
      loadBalancerName: roundRobin
    pr_ds_9:
      writeDataSourceName: write_ds_9
      readDataSourceNames:
        - read_ds_9
      loadBalancerName: roundRobin
  loadBalancers:
    roundRobin:
      type: ROUND_ROBIN
