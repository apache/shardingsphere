#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

rules:
- !SHARDING
  tables:
    t_user_item:
      actualDataNodes: readwrite_ds_${0..9}.t_user_item_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: item_id
          shardingAlgorithmName: standard_test
      keyGenerateStrategy:
        column: item_id
        keyGeneratorName: constant
    t_user:
      actualDataNodes: readwrite_ds_${0..9}.t_user_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: address_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
      keyGenerateStrategy:
        column: user_id
        keyGeneratorName: constant
    t_user_details:
      actualDataNodes: readwrite_ds_${0..9}.t_user_details_${0..9}
      databaseStrategy:
        standard:
          shardingColumn: address_id
          shardingAlgorithmName: standard_test
      tableStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: standard_test
    t_order_item_federate_sharding:
      actualDataNodes: readwrite_ds_1.t_order_item_federate_sharding_${0..1}
      tableStrategy:
        standard:
          shardingColumn: item_id
          shardingAlgorithmName: table_inline_item_id
    t_order_federate_sharding:
      actualDataNodes: readwrite_ds_1.t_order_federate_sharding_${0..1}
      tableStrategy:
        standard:
          shardingColumn: order_id_sharding
          shardingAlgorithmName: table_inline_order_id
    t_user_encrypt_federate_sharding:
      actualDataNodes: readwrite_ds_1.t_user_encrypt_federate_sharding_${0..1}
      tableStrategy:
        standard:
          shardingColumn: user_id
          shardingAlgorithmName: table_inline_user_id
  bindingTables:
    - t_user,t_user_details

  shardingAlgorithms:
    standard_test:
      type: STANDARD_TEST
    table_inline_item_id:
      type: INLINE
      props:
        algorithm-expression: t_order_item_federate_sharding_${item_id % 2}
    table_inline_order_id:
      type: INLINE
      props:
        algorithm-expression: t_order_federate_sharding_${order_id_sharding % 2}
    table_inline_user_id:
      type: INLINE
      props:
        algorithm-expression: t_user_encrypt_federate_sharding_${user_id % 2}
        allow-range-query-with-inline-sharding: true

  keyGenerators:
    constant:
      type: Constant

- !READWRITE_SPLITTING
  dataSources:
    readwrite_ds_0:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_0
        read-data-source-names: encrypt_read_ds_0
      loadBalancerName: roundRobin
    readwrite_ds_1:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_1
        read-data-source-names: encrypt_read_ds_1
      loadBalancerName: roundRobin
    readwrite_ds_2:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_2
        read-data-source-names: encrypt_read_ds_2
      loadBalancerName: roundRobin
    readwrite_ds_3:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_3
        read-data-source-names: encrypt_read_ds_3
      loadBalancerName: roundRobin
    readwrite_ds_4:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_4
        read-data-source-names: encrypt_read_ds_4
      loadBalancerName: roundRobin
    readwrite_ds_5:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_5
        read-data-source-names: encrypt_read_ds_5
      loadBalancerName: roundRobin
    readwrite_ds_6:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_6
        read-data-source-names: encrypt_read_ds_6
      loadBalancerName: roundRobin
    readwrite_ds_7:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_7
        read-data-source-names: encrypt_read_ds_7
      loadBalancerName: roundRobin
    readwrite_ds_8:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_8
        read-data-source-names: encrypt_read_ds_8
      loadBalancerName: roundRobin
    readwrite_ds_9:
      type: Static
      props:
        write-data-source-name: encrypt_write_ds_9
        read-data-source-names: encrypt_read_ds_9
      loadBalancerName: roundRobin
  loadBalancers:
    roundRobin:
      type: ROUND_ROBIN

- !ENCRYPT
  encryptors:
    aes_encryptor:
      type: AES
      props:
        aes-key-value: 123456abc
  tables:
    t_user:
      columns:
        pwd:
          plainColumn: pwd_plain
          cipherColumn: pwd_cipher
          encryptorName: aes_encryptor
    t_user_details:
      columns:
        number:
          plainColumn: number_plain
          cipherColumn: number_cipher
          encryptorName: aes_encryptor
        number_new:
          plainColumn: number_new_plain
          cipherColumn: number_new_cipher
          encryptorName: aes_encryptor
    t_user_encrypt_federate:
      columns:
        pwd:
          plainColumn: plain_pwd
          cipherColumn: cipher_pwd
          encryptorName: aes_encryptor
    t_user_encrypt_federate_sharding:
      columns:
        pwd:
          plainColumn: plain_pwd
          cipherColumn: cipher_pwd
          encryptorName: aes_encryptor

props:
  sql-federation-enabled: true
