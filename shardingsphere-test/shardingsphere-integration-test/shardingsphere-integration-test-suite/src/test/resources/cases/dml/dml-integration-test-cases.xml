<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<integration-test-cases>
   <test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?)" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
       <assertion parameters="1:int, 1:int, insert:String" expected-data-file="insert_for_order_1.xml" />
       <assertion parameters="2:int, 2:int, insert:String" expected-data-file="insert_for_order_2.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item (item_id, order_id, user_id, status, creation_date) VALUES (?, ?, ?, 'insert', now())" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="1:int, 1:int, 1:int" expected-data-file="insert_with_now_function.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (1, 1, 'insert'), (2, 2, 'insert2')" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="insert_multiple_values_for_order_1_2.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE status = VALUES(status)" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1000:int, 10:int, update:String" expected-data-file="insert_on_duplicate_key_update.xml" />
    </test-case>
    
    <!-- TODO fixme -->
    <!--<test-case sql="INSERT INTO t_order (t_order.order_id, t_order.user_id, t_order.status) VALUES (?, ?, ?)" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">-->
        <!--<assertion parameters="1:int, 1:int, insert:String" expected-data-file="insert_for_order_1.xml" />-->
        <!--<assertion parameters="2:int, 2:int, insert:String" expected-data-file="insert_for_order_2.xml" />-->
    <!--</test-case>-->
    
    <test-case sql="INSERT INTO t_order VALUES (?, ?, ?)" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1:int, 1:int, insert:String" expected-data-file="insert_for_order_1.xml" />
        <assertion parameters="2:int, 2:int, insert:String" expected-data-file="insert_for_order_2.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order SET order_id = ?, user_id = ?, status = ?" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1:int, 1:int, insert:String" expected-data-file="insert_for_order_1.xml" />
        <assertion parameters="2:int, 2:int, insert:String" expected-data-file="insert_for_order_2.xml" />
    </test-case>
    
    <!-- TODO fixme -->
    <!--<test-case sql="INSERT INTO t_order SET t_order.order_id = ?, t_order.user_id = ?, t_order.status = ?" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">-->
        <!--<assertion parameters="1:int, 1:int, insert:String" expected-data-file="insert_for_order_1.xml" />-->
        <!--<assertion parameters="2:int, 2:int, insert:String" expected-data-file="insert_for_order_2.xml" />-->
    <!--</test-case>-->
    
    <test-case sql="INSERT INTO t_order SET order_id = ?, user_id = ?, status = 'insert'" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1:int, 1:int" expected-data-file="insert_for_order_1.xml" />
        <assertion parameters="2:int, 2:int" expected-data-file="insert_for_order_2.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item(item_id, order_id, user_id, status, creation_date) values (?, ?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="1:int, 1:int, 1:int" expected-data-file="insert_with_generate_key_column.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item values(?, ?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="1:int, 1:int, 1:int" expected-data-file="insert_with_generate_key_column.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item SET item_id = ?, order_id = ?, user_id = ?, status = 'insert', creation_date='2017-08-08'" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="1:int, 1:int, 1:int" expected-data-file="insert_with_generate_key_column.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item values(?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting">
        <assertion sharding-rule-type="dbtbl_with_readwrite_splitting" parameters="1:int, 1:int" expected-data-file="insert_without_generate_key_column.xml" />
        <!-- TODO add gen column on create table -->
        <!--<assertion parameters="1:int, 1:int" expected-data-file="insert_with_generate_key_column.xml" />-->
    </test-case>
    
    <test-case sql="INSERT INTO t_order_item(order_id, user_id, status, creation_date) values (?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting">
        <assertion parameters="1:int, 1:int" expected-data-file="insert_without_generate_key_column.xml" />
    </test-case>

    <test-case sql="INSERT INTO t_order_item SET order_id = ?, user_id = ?, status = 'insert', creation_date='2017-08-08'" db-types="MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting">
        <assertion parameters="1:int, 1:int" expected-data-file="insert_without_generate_key_column.xml" />
    </test-case>
    
    <test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?), (?, ?, ?)" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1:int, 1:int, insert:String, 2:int, 2:int, insert:String" expected-data-file="batch_insert_for_order.xml" />
    </test-case>

    <test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (?, 1, 'insert'), (?, ?, ?)" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1:int, 2:int, 2:int, insert:String" expected-data-file="batch_insert_for_order.xml" />
    </test-case>

    <!--<test-case sql="INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, SUBSTR(?, 1)), (?, ?, SUBSTR(?, 1))" db-types="H2,MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">-->
        <!--<assertion parameters="1:int, 1:int, insert:String, 2:int, 2:int, insert:String" expected-data-file="batch_insert_for_order.xml" />-->
    <!--</test-case>-->
    
    <test-case sql="INSERT INTO t_order_item(item_id, order_id, user_id, status, creation_date) values (?, ?, ?, 'insert', '2017-08-08'), (?, ?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="1:int, 1:int, 1:int, 2:int, 2:int, 2:int" expected-data-file="batch_insert_with_generate_key_column.xml" />
    </test-case>
    
    <!--<test-case sql="INSERT INTO t_order_item(order_id, user_id, status, creation_date) values (?, ?, 'insert', '2017-08-08'), (?, ?, 'insert', '2017-08-08')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting">-->
        <!--<assertion sharding-rule-type="dbtbl_with_readwrite_splitting" parameters="1:int, 1:int, 2:int, 2:int" expected-data-file="batch_insert_without_generate_key_column.xml" />-->
        <!--&lt;!&ndash; TODO add gen column on create table &ndash;&gt;-->
        <!--&lt;!&ndash;<assertion parameters="1:int, 1:int, 2:int, 2:int" expected-data-file="batch_insert_without_generate_key_column.xml" />&ndash;&gt;-->
    <!--</test-case>-->
    
    <test-case sql="INSERT INTO t_broadcast_table(id, status) values (?, 'insert'),(?, 'insert')" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion parameters="2:int, 3:int" expected-data-file="batch_insert_into_broadcast_table.xml" />
    </test-case>

    <!--fixme! issue #9769-->
<!--    <test-case sql="INSERT INTO t_single_table(single_id, id, status) values (?, ?, 'insert'),(?, ?, 'insert')" db-types="MySQL,Oracle,SQLServer" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,encrypt,dbtbl_with_readwrite_splitting_and_encrypt">-->
<!--        <assertion parameters="5:int, 5000:int, 6:int, 6000:int" expected-data-file="batch_insert_into_single_table.xml" />-->
<!--    </test-case>-->

    <test-case sql="INSERT INTO t_user(user_id, address_id, pwd, status) values (?, ?, 'a100', 'init'),(?, ?, 'b101', 'init')" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion parameters="100:int, 100000:int, 101:int, 101000:int" expected-data-file="batch_insert_into_user_table.xml" />
    </test-case>

    <test-case sql="INSERT INTO t_user(user_id, address_id, pwd, status) values (100, 100000, 'a100', 'init'),(101, 101000, 'b101', 'init')" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion expected-data-file="batch_insert_into_user_table.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = ? WHERE order_id = ? AND user_id = ?" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order AS o SET o.status = ? WHERE o.order_id = ? AND o.user_id = ?" db-types="MySQL,H2" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order o SET o.status = 'finished'" db-types="MySQL,H2" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update_without_condition.xml" />
    </test-case>
    
    <test-case sql="UPDATE /*+ index(field1) */ ONLY t_order SET status=? WHERE order_id = ? AND user_id = ? RETURN * LOG ERRORS INTO TABLE_LOG" db-types="Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="update:String, 1000:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = 'update' WHERE order_id = 1000 AND user_id = 10" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = 'update' WHERE (order_id = ? OR order_id = ?) AND user_id = ?" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1000:int, 0:int, 10:int" expected-data-file="update.xml" />
    </test-case>
    
    <test-case sql="UPDATE t_order SET status = status where user_id = user_id AND order_id = 1000" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="update_with_column_equal_column.xml" />
    </test-case>
    
    <!-- TODO FIXED ME PostgreSQL return 0 -->
    <test-case sql="UPDATE t_broadcast_table b SET b.status = 'finished'" db-types="H2,MySQL" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting">
        <assertion expected-data-file="update_broadcast_table.xml" />
    </test-case>

    <!--fixme! issue #9769-->
<!--    <test-case sql="UPDATE t_single_table s SET s.status = 'finished'" db-types="MySQL,Oracle,SQLServer" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,encrypt,dbtbl_with_readwrite_splitting_and_encrypt">-->
<!--        <assertion expected-data-file="update_single_table.xml" />-->
<!--    </test-case>-->

    <test-case sql="UPDATE t_user u SET u.pwd = 'abc' WHERE user_id = 10" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion expected-data-file="update_user_table.xml" />
    </test-case>

    <test-case sql="UPDATE t_user u SET u.status = 'update' WHERE u.pwd = 'a10'" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion expected-data-file="update_user_table_by_pwd.xml" />
    </test-case>
    
    <test-case sql="DELETE FROM t_order WHERE order_id = ? AND user_id = ? AND status= ?" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="1000:int, 10:int, init:String" expected-data-file="delete_with_sharding_value.xml" />
    </test-case>
    
    <test-case sql="DELETE FROM t_order WHERE status= ?" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion parameters="init:String" expected-data-file="delete_without_sharding_value.xml" />
    </test-case>

    <test-case sql="DELETE FROM t_user WHERE user_id = 10" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion expected-data-file="delete_user_table.xml" />
    </test-case>

    <test-case sql="DELETE FROM t_user WHERE pwd = 'a10'" scenario-types="encrypt,dbtbl_with_readwrite_splitting_and_encrypt">
        <assertion expected-data-file="delete_user_table.xml" />
    </test-case>

    <!--fixme! issue #9769-->
<!--    <test-case sql="DELETE FROM t_single_table WHERE single_id = 1" db-types="MySQL,Oracle,SQLServer" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,encrypt,dbtbl_with_readwrite_splitting_and_encrypt">-->
<!--        <assertion expected-data-file="delete_single_table_by_id.xml" />-->
<!--    </test-case>-->
    
    <test-case sql="DELETE /*+ index(status) */ ONLY t_order WHERE status=1 RETURN * LOG ERRORS INTO TABLE_LOG" db-types="Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="delete_with_special_comments_return_without_sharding_value.xml" />
    </test-case>
    
    <test-case sql="DELETE /*+ index(status) */ ONLY (t_order) WHERE status=1 RETURNING *" db-types="Oracle" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">
        <assertion expected-data-file="delete_with_special_comments_returning_without_sharding_value.xml" />
    </test-case>
    
    <!-- Can't support delete multiple tables-->
    <!--<test-case sql="DELETE o FROM t_order AS o WHERE status=?" db-types="MySQL,Oracle,SQLServer" scenario-types="db,tbl,dbtbl_with_readwrite_splitting,readwrite_splitting,sharding_governance">-->
        <!--<assertion parameters="init:String" expected-data-file="delete_with_alias.xml" />-->
    <!--</test-case>-->
</integration-test-cases>
