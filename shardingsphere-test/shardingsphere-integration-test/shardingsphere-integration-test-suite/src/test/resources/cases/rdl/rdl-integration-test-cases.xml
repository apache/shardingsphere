<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<integration-test-cases>
    <!--FIXME! IP CANNOT CONNECT-->
    <test-case sql="SHOW SCHEMA RESOURCES" db-types="PostgreSQL">
        <assertion expected-data-file="alter_resource.xml">
            <initial-sql sql="ALTER RESOURCE rdl_test_0 (URL=&quot;jdbc:mysql://mysql.empty_rules.host:3306/rdl_test_0?serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=utf-8&quot;, USER=root, PASSWORD=root,
            PROPERTIES(&quot;maxPoolSize&quot;=10,&quot;maxPoolSize&quot;=10,&quot;connectionTimeoutMilliseconds&quot;=3000,&quot;idleTimeoutMilliseconds&quot;=6000,&quot;maxLifetimeMilliseconds&quot;=180000));"/>
            <destroy-sql sql="ALTER RESOURCE rdl_test_0 (URL=&quot;jdbc:mysql://mysql.empty_rules.host:3306/rdl_test_0?serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=utf-8&quot;, USER=root, PASSWORD=root,
            PROPERTIES(&quot;maxPoolSize&quot;=2,&quot;maxPoolSize&quot;=2,&quot;connectionTimeoutMilliseconds&quot;=30000,&quot;idleTimeoutMilliseconds&quot;=60000,&quot;maxLifetimeMilliseconds&quot;=1800000));" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SCHEMA RESOURCES">
        <assertion expected-data-file="drop_resource.xml">
            <initial-sql sql="DROP RESOURCE rdl_test_0;"/>
            <destroy-sql sql="ADD RESOURCE rdl_test_0 (URL=&quot;jdbc:mysql://mysql.empty_rules.host:3306/rdl_test_0?serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=utf-8&quot;, USER=root, PASSWORD=root,
                PROPERTIES(&quot;maxPoolSize&quot;=2,&quot;maxPoolSize&quot;=2,&quot;connectionTimeoutMilliseconds&quot;=30000,&quot;idleTimeoutMilliseconds&quot;=60000,&quot;maxLifetimeMilliseconds&quot;=1800000));" />
        </assertion>
    </test-case>
    
    <!--FIXME! IP CANNOT CONNECT-->
    <test-case sql="SHOW SCHEMA RESOURCES" db-types="PostgreSQL">
        <assertion expected-data-file="add_resource.xml">
            <initial-sql sql="ADD RESOURCE
                rdl_test_1 (HOST=&quot;mysql.empty_rules.host&quot;, PORT=3306, DB=rdl_test_1, USER=root, PASSWORD=root,
                PROPERTIES(&quot;maxPoolSize&quot;=2,&quot;maxPoolSize&quot;=2,&quot;connectionTimeoutMilliseconds&quot;=30000,&quot;idleTimeoutMilliseconds&quot;=60000,&quot;maxLifetimeMilliseconds&quot;=1800000)),
                rdl_test_2 (URL=&quot;jdbc:mysql://mysql.empty_rules.host:3306/rdl_test_2?serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=utf-8&quot;, USER=root, PASSWORD=root,
                PROPERTIES(&quot;maxPoolSize&quot;=2,&quot;maxPoolSize&quot;=2,&quot;connectionTimeoutMilliseconds&quot;=30000,&quot;idleTimeoutMilliseconds&quot;=60000,&quot;maxLifetimeMilliseconds&quot;=1800000));"/>
            <destroy-sql sql="DROP RESOURCE rdl_test_1, rdl_test_2;" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING TABLE RULE t_user">
        <assertion expected-data-file="create_sharding_rules.xml">
            <initial-sql sql="CREATE SHARDING TABLE RULE t_user (
                RESOURCES(&quot;encrypt_write_ds_${0..9}&quot;),
                SHARDING_COLUMN=user_id, TYPE(NAME=MOD, PROPERTIES(&quot;sharding-count&quot;=40)))))"/>
            <destroy-sql sql="DROP SHARDING TABLE RULE t_user" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING TABLE RULE t_user_item">
        <assertion expected-data-file="drop_sharding_rules.xml">
            <initial-sql sql="DROP SHARDING TABLE RULE t_user_item"/>
            <destroy-sql sql="CREATE SHARDING TABLE RULE t_user_item (
                RESOURCES(&quot;encrypt_write_ds_${0..9}&quot;),
                SHARDING_COLUMN=user_id, TYPE(NAME=MOD, PROPERTIES(&quot;sharding-count&quot;=40)))))" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING BINDING TABLE RULES">
        <assertion expected-data-file="create_binding_rules.xml">
            <initial-sql sql="CREATE SHARDING TABLE RULE t_user (
                RESOURCES(&quot;encrypt_write_ds_${0..9}&quot;),
                SHARDING_COLUMN=user_id, TYPE(NAME=MOD, PROPERTIES(&quot;sharding-count&quot;=40)))));
                CREATE SHARDING BINDING TABLE RULES (t_user,t_user_item)"/>
            <destroy-sql sql="DROP SHARDING BINDING TABLE RULES;DROP SHARDING TABLE RULE t_user" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING BINDING TABLE RULES">
        <assertion expected-data-file="alter_binding_rules.xml">
            <initial-sql sql="CREATE SHARDING TABLE RULE t_user (
                RESOURCES(&quot;encrypt_write_ds_${0..9}&quot;),
                SHARDING_COLUMN=user_id, TYPE(NAME=MOD, PROPERTIES(&quot;sharding-count&quot;=40)))));
                ALTER SHARDING BINDING TABLE RULES (t_user,t_user_item);"/>
            <destroy-sql sql="DROP SHARDING BINDING TABLE RULES;DROP SHARDING TABLE RULE t_user" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING BINDING TABLE RULES">
        <assertion expected-data-file="drop_binding_rules.xml">
            <initial-sql sql="CREATE SHARDING TABLE RULE t_user (
                RESOURCES(&quot;encrypt_write_ds_${0..9}&quot;),
                SHARDING_COLUMN=user_id, TYPE(NAME=MOD, PROPERTIES(&quot;sharding-count&quot;=40)))));
                CREATE SHARDING BINDING TABLE RULES (t_user,t_user_item);
                DROP SHARDING BINDING TABLE RULES;DROP SHARDING TABLE RULE t_user"/>
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING BROADCAST TABLE RULES">
        <assertion expected-data-file="create_broadcast_rules.xml">
            <initial-sql sql="CREATE SHARDING BROADCAST TABLE RULES (t_broadcast_table)"/>
            <destroy-sql sql="DROP SHARDING BROADCAST TABLE RULES" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW SHARDING BROADCAST TABLE RULES">
        <assertion expected-data-file="drop_broadcast_rules.xml">
            <initial-sql sql="CREATE SHARDING BROADCAST TABLE RULES (t_broadcast_table);
            DROP SHARDING BROADCAST TABLE RULES"/>
        </assertion>
    </test-case>
    
    <test-case sql="SHOW ENCRYPT TABLE RULE t_user">
        <assertion expected-data-file="create_encrypt_rule.xml">
            <initial-sql sql="CREATE ENCRYPT RULE t_user (COLUMNS ((
                NAME=pwd, PLAIN=pwd_plain, CIPHER=pwd_cipher, TYPE(NAME=AES,
                PROPERTIES(&quot;aes-key-value&quot;='123456abc')))))"/>
            <destroy-sql sql="DROP ENCRYPT RULE t_user" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW ENCRYPT TABLE RULE t_user">
        <assertion expected-data-file="alter_encrypt_rule.xml">
            <initial-sql sql="CREATE ENCRYPT RULE t_user (COLUMNS ((
                NAME=pwd, PLAIN=pwd_plain, CIPHER=pwd_cipher, TYPE(NAME=AES, PROPERTIES(&quot;aes-key-value&quot;='123456abc')))));
                ALTER ENCRYPT RULE t_user (COLUMNS ((NAME=pwd, PLAIN=pwd_plain, CIPHER=pwd_cipher, TYPE(NAME=AES,
                PROPERTIES(&quot;aes-key-value&quot;='123abc')))))"/>
            <destroy-sql sql="DROP ENCRYPT RULE t_user" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW ENCRYPT RULES">
        <assertion expected-data-file="drop_encrypt_rule.xml">
            <initial-sql sql="CREATE ENCRYPT RULE t_user (COLUMNS ((
                NAME=pwd, PLAIN=pwd_plain, CIPHER=pwd_cipher, TYPE(NAME=AES,
                PROPERTIES(&quot;aes-key-value&quot;='123456abc')))));
                DROP ENCRYPT RULE t_user"/>
        </assertion>
    </test-case>
    
    <test-case sql="SHOW READWRITE_SPLITTING RULES">
        <assertion expected-data-file="create_readwrite_splitting_rules.xml">
            <initial-sql sql="CREATE READWRITE_SPLITTING RULE pr_ds_1 (WRITE_RESOURCE=encrypt_write_ds_1,
            READ_RESOURCES(encrypt_read_ds_1), TYPE(NAME=ROUND_ROBIN))"/>
            <destroy-sql sql="DROP READWRITE_SPLITTING RULE pr_ds_1" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW READWRITE_SPLITTING RULES">
        <assertion expected-data-file="alter_readwrite_splitting_rules.xml">
            <initial-sql sql="CREATE READWRITE_SPLITTING RULE pr_ds_1 (WRITE_RESOURCE=encrypt_write_ds_1,
            READ_RESOURCES(encrypt_read_ds_1), TYPE(NAME=ROUND_ROBIN));
            ALTER READWRITE_SPLITTING RULE pr_ds_1 (WRITE_RESOURCE=encrypt_write_ds_1,
            READ_RESOURCES(encrypt_read_ds_1, encrypt_read_ds_2), TYPE(NAME=RANDOM,PROPERTIES(read_weight='2:1')))"/>
            <destroy-sql sql="DROP READWRITE_SPLITTING RULE pr_ds_1" />
        </assertion>
    </test-case>
    
    <test-case sql="SHOW READWRITE_SPLITTING RULES">
        <assertion expected-data-file="drop_readwrite_splitting_rules.xml">
            <initial-sql sql="DROP READWRITE_SPLITTING RULE pr_ds_0"/>
        </assertion>
    </test-case>
    
    <!--TODO add db discovery tests-->
</integration-test-cases>
