<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<integration-test-cases>
    <test-case sql="CREATE USER 'user_dev_new'@'localhost'" db-types="MySQL" />
    <test-case sql="CREATE USER user_dev_new" db-types="PostgreSQL" />
    <test-case sql="CREATE USER 'user_dev_new'@'localhost' identified by 'passwd_dev'" db-types="MySQL"/>
    <test-case sql="CREATE USER user_dev_new identified by passwd_dev" db-types="Oracle" />
    <test-case sql="CREATE USER user_dev_new FOR LOGIN login_dev" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev_new PASSWORD 'passwd_dev'" db-types="PostgreSQL"/>
    <test-case sql="CREATE LOGIN login_dev_new WITH PASSWORD = 'passwd_dev'" db-types="SQLServer"/>
    <test-case sql="CREATE ROLE role_dev" db-types="MySQL,Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="CREATE ROLE role_dev_new identified by dev_passwd" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev_new PASSWORD 'passwd_dev'" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE ALL RESET client_min_messages" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE ALL SET client_min_messages = DEBUG" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER ALL RESET client_min_messages" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER ALL SET client_min_messages = DEBUG" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="ALTER USER user_dev identified by passwd_dev" db-types="Oracle"/>
    <test-case sql="ALTER USER 'user_dev'@'localhost' identified by 'passwd_dev'" db-types="MySQL"/>
    <test-case sql="ALTER USER user_dev account lock" db-types="Oracle"/>
    <test-case sql="ALTER LOGIN login_dev WITH NAME = login_dev_new" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login_dev WITH PASSWORD = 'passwd_dev'" db-types="SQLServer"/>
    <test-case sql="ALTER USER user_dev WITH NAME = user_dev_new" db-types="SQLServer"/>
    <test-case sql="ALTER USER default_user RENAME TO user_dev_new" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER user_dev WITH PASSWORD = 'passwd_dev'" db-types="SQLServer"/>
    <test-case sql="ALTER USER default_user WITH PASSWORD 'passwd_dev'" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE role_dev_bak DROP MEMBER member1" db-types="SQLServer"/>
    <test-case sql="ALTER ROLE role_dev IDENTIFIED EXTERNALLY"  db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev IDENTIFIED EXTERNALLY" db-types="Oracle"/>
    <test-case sql="ALTER ROLE role_dev IDENTIFIED GLOBALLY"  db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev IDENTIFIED GLOBALLY AS 'CN=user_dev'" db-types="Oracle"/>
    <test-case sql="ALTER LOGIN login1 ADD CREDENTIAL credential" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 ENABLE" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1_bak WITH NAME = login1" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 WITH DEFAULT_DATABASE = database" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 WITH PASSWORD = 0x01000CF35567C60BFB41EBDE4CF700A985A13D773D6B45B90900 HASHED" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 WITH PASSWORD = 'password'" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 WITH PASSWORD = 'password' OLD_PASSWORD = 'password'" db-types="SQLServer"/>
    <test-case sql="ALTER LOGIN login1 WITH PASSWORD = 'password' UNLOCK" db-types="SQLServer"/>
    <test-case sql="ALTER ROLE role_dev NOT IDENTIFIED"  db-types="Oracle"/>
    <test-case sql="ALTER ROLE role_dev_bak WITH NAME = role_dev" db-types="SQLServer"/>
    <test-case sql="ALTER ROLE default_role RESET ALL" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE default_role RESET client_min_messages" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE default_role SET client_min_messages = DEBUG" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE default_role SET client_min_messages FROM CURRENT" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE role_dev NOT IDENTIFIED CONTAINER = ALL"  db-types="Oracle"/>
    <test-case sql="ALTER ROLE default_role WITH SUPERUSER" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE default_role WITH CREATEDB CREATEROLE" db-types="PostgreSQL"/>
    <test-case sql="ALTER ROLE role_dev IDENTIFIED BY password"  db-types="Oracle"/>
    <test-case sql="ALTER ROLE default_role WITH ENCRYPTED PASSWORD 'password'" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER user_dev PASSWORD EXPIRE ACCOUNT LOCK" db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev GRANT CONNECT THROUGH user2" db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev GRANT CONNECT THROUGH user2 WITH ROLE role_dev" db-types="Oracle"/>
    <test-case sql="ALTER USER IF EXISTS user_dev" db-types="MySQL"/>
    <test-case sql="ALTER USER user_dev IDENTIFIED BY password ACCOUNT LOCK" db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev GRANT CONNECT THROUGH user2 REVOKE CONNECT THROUGH user3" db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev_bak WITH NAME = user_dev" db-types="SQLServer"/>
    <test-case sql="ALTER USER default_user RESET ALL" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER default_user RESET client_min_messages" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER user_dev REVOKE CONNECT THROUGH user2" db-types="Oracle"/>
    <test-case sql="ALTER USER default_user SET client_min_messages = DEBUG" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER default_user SET client_min_messages FROM CURRENT" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER user_dev WITH DEFAULT_SCHEMA = schema" db-types="SQLServer"/>
    <test-case sql="ALTER USER user_dev WITH LOGIN = login1" db-types="SQLServer"/>
    <test-case sql="ALTER USER user_dev WITH PASSWORD = 'password'" db-types="SQLServer"/>
    <test-case sql="ALTER USER user_dev CONTAINER = ALL" db-types="Oracle"/>
    <test-case sql="ALTER USER default_user WITH SUPERUSER" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER default_user WITH CREATEDB CREATEROLE" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER default_user WITH ENCRYPTED PASSWORD 'password'" db-types="PostgreSQL"/>
    <test-case sql="ALTER USER user_dev QUOTA 1M ON tablespace1" db-types="Oracle"/>
    <test-case sql="ALTER USER user_dev DEFAULT TABLESPACE tablespace1" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev IDENTIFIED EXTERNALLY" db-types="Oracle"/>
    <test-case sql="CREATE USER user_dev IDENTIFIED EXTERNALLY" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev IDENTIFIED GLOBALLY" db-types="Oracle"/>
    <test-case sql="CREATE USER user_dev IDENTIFIED GLOBALLY" db-types="Oracle"/>
    <test-case sql="CREATE LOGIN login1 WITH PASSWORD = 'password', CREDENTIAL = credential" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 FROM ASYMMETRIC KEY asym_key" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 FROM CERTIFICATE certificate" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 WITH PASSWORD = 'password', DEFAULT_DATABASE = database" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 WITH PASSWORD = 'password' MUST_CHANGE, CHECK_EXPIRATION = ON" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 WITH PASSWORD = 0x01000CF35567C60BFB41EBDE4CF700A985A13D773D6B45B90900 HASHED" db-types="SQLServer"/>
    <test-case sql="CREATE LOGIN login1 WITH PASSWORD = 'password'" db-types="SQLServer"/>
    <test-case sql="CREATE ROLE role_dev NOT IDENTIFIED" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev AUTHORIZATION authorization" db-types="SQLServer"/>
    <test-case sql="CREATE ROLE IF NOT EXISTS role_dev" db-types="MySQL"/>
    <test-case sql="CREATE ROLE role_dev CONTAINER = ALL" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev WITH SUPERUSER" db-types="PostgreSQL"/>
    <test-case sql="CREATE ROLE role_dev WITH CREATEDB CREATEROLE" db-types="PostgreSQL"/>
    <test-case sql="CREATE ROLE role_dev IDENTIFIED BY password" db-types="Oracle"/>
    <test-case sql="CREATE ROLE role_dev WITH ROLE role2" db-types="PostgreSQL"/>
    <test-case sql="CREATE ROLE role_dev WITH ROLE role2, role3" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER IF NOT EXISTS user_dev DEFAULT ROLE default_role" db-types="MySQL"/>
    <test-case sql="CREATE USER user_dev" db-types="PostgreSQL,SQLServer"/>
    <test-case sql="CREATE USER user_dev FROM ASYMMETRIC KEY asym_key" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev FROM CERTIFICATE certificate" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev FROM LOGIN login1" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev WITHOUT LOGIN" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev WITH SUPERUSER" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER user_dev WITH CREATEDB CREATEROLE" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER user_dev WITH ENCRYPTED PASSWORD 'password'" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER user_dev IDENTIFIED BY password QUOTA 1M ON tablespace1" db-types="Oracle"/>
    <test-case sql="CREATE USER user_dev WITH ROLE role2" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER user_dev WITH ROLE role2, role3" db-types="PostgreSQL"/>
    <test-case sql="CREATE USER user_dev WITH DEFAULT_SCHEMA = schema" db-types="SQLServer"/>
    <test-case sql="CREATE USER user_dev IDENTIFIED BY password DEFAULT TABLESPACE tablespace1" db-types="Oracle"/>
    <test-case sql="DENY UPDATE ON t_order TO user_dev CASCADEK" db-types="SQLServer"/>
    <test-case sql="DENY ALL PRIVILEGES ON t_order TO user_dev" db-types="SQLServer"/>
    <test-case sql="DENY INSERT, SELECT, UPDATE, DELETE ON t_order TO user_dev" db-types="SQLServer"/>
    <test-case sql="DENY SELECT ON t_order TO user_dev" db-types="SQLServer"/>
    <test-case sql="DENY SELECT (order_id) ON t_order TO user_dev" db-types="SQLServer"/>
    <test-case sql="DENY SELECT (order_id) ON t_order TO user_dev, user2" db-types="SQLServer"/>
    <test-case sql="DROP ROLE IF EXISTS default_role" db-types="MySQL,PostgreSQL,SQLServer"/>
    <test-case sql="DROP USER default_user" db-types="Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="DROP USER user_dev@localhost" db-types="MySQL,Oracle"/>
    <test-case sql="DROP USER user_dev CASCADE" db-types="Oracle"/>
    <test-case sql="DROP ROLE default_role" db-types="MySQL,Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="DROP LOGIN login1" db-types="SQLServer"/>
    <test-case sql="RENAME USER 'user_dev'@'localhost' TO 'user_dev'@'127.0.0.1'" db-types="MySQL"/>
    <test-case sql="GRANT select, update, insert, delete on t_order to default_user" db-types="Oracle,SQLServer"/>
    <test-case sql="GRANT select, update, insert, delete on t_order to default_user with GRANT option" db-types="Oracle,SQLServer"/>
    <test-case sql="GRANT role2 to role3" db-types="Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="GRANT ADVISOR, ALTER DATABASE to user_dev with admin option" db-types="Oracle"/>
    <test-case sql="GRANT ALL ON sharding_db.* TO 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="GRANT ALL ON t_order TO 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="GRANT ALL ON sharding_db.t_order TO 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="GRANT select, update ON t_order TO 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE select, update on t_order from default_user" db-types="Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="REVOKE default_role from default_user" db-types="Oracle,PostgreSQL,SQLServer"/>
    <test-case sql="REVOKE ADVISOR, ALTER DATABASE from user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE select, insert ON * FROM 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE select, insert ON t_order FROM 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE select, insert ON primary_ds.t_order FROM 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES ON *.* FROM user_dev" db-types="MySQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES (order_id) ON TABLE t_order FROM role2" db-types="PostgreSQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES (order_id) ON TABLE t_order FROM role2, role3" db-types="PostgreSQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES ON db_0.t_order FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE ALL PRIVILEGES ON SCHEMA public FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES ON SCHEMA public FROM default_role, role2" db-types="PostgreSQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES ON TABLE t_order FROM default_role, role2" db-types="PostgreSQL"/>
    <test-case sql="REVOKE ALL PRIVILEGES FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE CREATE ON SCHEMA public FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE INSERT, SELECT, UPDATE, DELETE ON *.* FROM user_dev" db-types="MySQL"/>
    <test-case sql="REVOKE INSERT, SELECT, UPDATE, DELETE ON t_order FROM user_dev" db-types="SQLServer"/>
    <test-case sql="REVOKE EXECUTE ON ALL FUNCTIONS IN SCHEMA public FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE SELECT ON db_0.t_order FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE SELECT (order_id) ON db_0.t_order FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE SELECT ON db_0.t_order FROM user_dev, user2" db-types="Oracle"/>
    <test-case sql="REVOKE INSERT, SELECT, UPDATE, DELETE ON db_0.t_order FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE role_dev FROM FUNCTION db_0.function1" db-types="Oracle"/>
    <test-case sql="REVOKE default_role, role2 FROM role3, role4" db-types="PostgreSQL"/>
    <test-case sql="REVOKE role_dev, role2 FROM FUNCTION db_0.function1, FUNCTION db_0.function2" db-types="Oracle"/>
    <test-case sql="REVOKE SELECT ON *.* FROM user_dev" db-types="MySQL"/>
    <test-case sql="REVOKE SELECT (order_id) ON TABLE t_order FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE SELECT ON  *.* FROM 'user_dev'@'localhost'" db-types="MySQL"/>
    <test-case sql="REVOKE SELECT ON ALL SEQUENCES IN SCHEMA public FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE SELECT ON ALL TABLES IN SCHEMA public FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE SELECT (order_id) ON t_order FROM user_dev, user2" db-types="SQLServer"/>
    <test-case sql="REVOKE CREATE SESSION FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE CREATE SESSION FROM user_dev, user2" db-types="Oracle"/>
    <test-case sql="REVOKE CREATE ANY MATERIALIZED VIEW, ALTER ANY MATERIALIZED VIEW, DROP ANY MATERIALIZED VIEW FROM user_dev" db-types="Oracle"/>
    <test-case sql="REVOKE SELECT ON TABLE t_order FROM default_role" db-types="PostgreSQL"/>
    <test-case sql="REVOKE SELECT ON t_order FROM user_dev" db-types="SQLServer"/>
    <test-case sql="SET ROLE ALL EXCEPT role_dev" db-types="MySQL"/>
    <test-case sql="SET ROLE ALL EXCEPT role_dev, role2" db-types="MySQL"/>
</integration-test-cases>
