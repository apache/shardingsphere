#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Nightly - IT Example Generator

on:
  schedule:
    - cron: '0 19 */1 * *'  # once a day. UTC time
    
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dcheckstyle.skip=true -Dspotless.apply.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true

jobs:
  build-cache:
    if: github.repository == 'apache/shardingsphere'
    name: Build Cache
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: shardingsphere-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            shardingsphere-maven-third-party-cache-
            shardingsphere-maven-third-party-
      - name: Build with Maven
        run: ./mvnw -B -T1C -ntp clean install -DskipITs -DskipTests
  generate-and-test-examples:
    if: github.repository == 'apache/shardingsphere'
    name: Example-${{ matrix.feature }}-${{ matrix.framework }}-${{ matrix.mode }}-${{ matrix.transaction }}
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: build-cache
    strategy:
      fail-fast: false
      matrix:
        feature: [ sharding, readwrite-splitting, encrypt, shadow ]
        framework: [ jdbc, spring-boot-starter-jdbc, spring-boot-starter-jpa, spring-boot-starter-mybatis, spring-namespace-jdbc, spring-namespace-jpa, spring-namespace-mybatis ]
        mode: [ standalone ]
        transaction: [ local, xa-atomikos, xa-bitronix, xa-narayana ]
        product: [ jdbc ]
        exclude: 
          - feature: shadow
            framework: spring-boot-starter-jpa
          - feature: shadow
            framework: spring-namespace-jpa
    services:
      mysql:
        image: mysql:8.0.22
        env:
          MYSQL_ROOT_PASSWORD: 123456
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: shardingsphere-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            shardingsphere-maven-third-party-cache-
            shardingsphere-maven-third-party-
      - name: Maven resolve ranges
        run: ./mvnw versions:resolve-ranges -ntp -Dincludes='org.springframework:*,org.springframework.boot:*'
      - name: Prepare environments
        run: sh .github/workflows/resources/sql/nightly-generator-init.sh
      - name: Generate examples
        run: ./mvnw -B clean install -f examples/shardingsphere-example-generator/pom.xml -Pexample-generator -Dproducts=${{ matrix.product }} -Dmodes=${{ matrix.mode }} -Dtransactions=${{ matrix.transaction }} -Dfeatures=${{ matrix.feature }} -Dframeworks=${{ matrix.framework }}
      - name: Test examples
        run : ./mvnw -B test -f examples/shardingsphere-example-generator/target/generated-sources/shardingsphere-jdbc-sample/${{ matrix.feature }}--${{ matrix.framework }}--${{ matrix.mode }}--${{ matrix.transaction }}/pom.xml -Pexample-generator -Dexec.cleanupDaemonThreads=false 
