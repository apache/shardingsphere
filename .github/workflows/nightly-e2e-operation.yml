#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Nightly - E2E Operation

on:
  schedule:
    - cron: '0 20 */1 * *' # UTC time
  workflow_dispatch:

concurrency:
  group: nightly-e2e-operation-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dspotless.apply.skip=true -Dfailsafe.skipAfterFailureCount=1 -Dio.netty.leakDetectionLevel=advanced

jobs:
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml

  e2e-operation-job:
    if: ${{ needs.global-environment.outputs.GLOBAL_IS_NIGHTLY_JOB_EXECUTABLE == 'true' }}
    name: E2E - ${{ matrix.operation }} on ${{ matrix.image.version }} with JDK ${{ matrix.java-version }}
    needs: global-environment
    runs-on: ${{ needs.global-environment.outputs.GLOBAL_RUNS_ON }}
    timeout-minutes: 150
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        java-version: [ 11, 21 ]
        operation: [ transaction, pipeline, showprocesslist ]
        image: [
          { type: "it.docker.mysql.version", version: "mysql:5.7" },
          { type: "it.docker.mysql.version", version: "mysql:8.0" },
          { type: "it.docker.mariadb.version", version: "mariadb:11" },
          { type: "it.docker.postgresql.version", version: "postgres:11-alpine" },
          { type: "it.docker.postgresql.version", version: "postgres:12-alpine" },
          { type: "it.docker.postgresql.version", version: "postgres:13-alpine" },
          { type: "it.docker.postgresql.version", version: "postgres:14-alpine" },
          { type: "it.docker.opengauss.version", version: "enmotech/opengauss:2.1.0" },
          { type: "it.docker.opengauss.version", version: "enmotech/opengauss:3.0.0" }
        ]
        exclude:
          - operation: transaction
            image: { type: "it.docker.mariadb.version", version: "mariadb:11" }
          - operation: showprocesslist
            image: { type: "it.docker.mariadb.version", version: "mariadb:11" }
          - operation: showprocesslist
            image: { type: "it.docker.postgresql.version", version: "postgres:10-alpine,postgres:11-alpine,postgres:12-alpine,postgres:13-alpine,postgres:14-alpine" }
          - operation: showprocesslist
            image: { type: "it.docker.opengauss.version", version: "enmotech/opengauss:2.1.0,enmotech/opengauss:3.0.0" }
    steps:
      - uses: actions/checkout@v4
      - name: Retrieve Maven Caches
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-${{ github.sha }}
          restore-keys: |
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-e2e-cache-
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
      - name: Setup JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - name: Build ${{ matrix.operation }} E2E Image
        run: ./mvnw -B clean install -am -pl test/e2e/operation/${{ matrix.operation }} -Pit.env.docker -DskipTests
      - name: Run ${{ matrix.operation }} on ${{ matrix.image.version }}
        run: ./mvnw -nsu -B install -f test/e2e/operation/${{ matrix.operation }}/pom.xml -D${{ matrix.operation }}.it.env.type=docker -D${{ matrix.operation }}.${{ matrix.image.type }}=${{ matrix.image.version }}
