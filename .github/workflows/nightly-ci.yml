#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Nightly - CI

on:
  schedule:
    - cron: '0 18 */1 * *'  # once a day. UTC time
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  global-environment:
    name: Import Global Environment
    uses: ./.github/workflows/required-reusable.yml

  ci:
    if: github.repository == 'apache/shardingsphere'
    name: CI - JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    needs: global-environment
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ 11, 17, 21, 22 ]
    steps:
      - name: Support Long Paths in Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.longpaths true
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
      - name: Build Project with Maven
        run: ./mvnw clean install -B -ntp -T1C
      - name: Build Examples with Maven
        run: ./mvnw clean package -B -f examples/pom.xml -T1C
  
  ci-jdk8:
    if: github.repository == 'apache/shardingsphere'
    name: CI - JDK 8 on ${{ matrix.os }}
    needs: global-environment
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Support Long Paths in Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.longpaths true
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
      - name: Build prod with Maven
        run: ./mvnw clean install -DskipTests -B -ntp -T1C
      - name: Setup JDK 8 for Test
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 8
      - name: Run Tests with JDK 8
        run: ./mvnw test -B -ntp -fae -T1C

  ci-native-test:
    if: github.repository == 'apache/shardingsphere'
    name: NativeTest CI - GraalVM CE on ${{ matrix.os }}
    needs: global-environment
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21.0.2'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-cache-
            ${{ needs.global-environment.outputs.GLOBAL_CACHE_PREFIX }}-maven-third-party-
      - name: Run nativeTest with GraalVM CE
        run: ./mvnw -PnativeTestInShardingSphere -T1C -e clean test
