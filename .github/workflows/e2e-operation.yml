#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: E2E - Operation

on:
  push:
    branches: [ master, dev ]
  pull_request:
  schedule:
    - cron: '0 22 */1 * *'  # once a day. UTC time
  workflow_dispatch:

concurrency:
  group: e2e-pipeline-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Dspotless.apply.skip=true -Djacoco.skip=true -Dfailsafe.skipAfterFailureCount=1 -Dio.netty.leakDetectionLevel=advanced
  REPOSITORY_NAME: shardingsphere

jobs:
  detect-changed-files:
    name: Detect Changed Files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      ignored: ${{ steps.filter.outputs.ignores }}
      detected_functions: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - name: Detect Changed Files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ github.token }}
          filters: .github/workflows/resources/filter/filters.yml
  
  e2e-operation-job:
    needs: detect-changed-files
    name: E2E - ${{ matrix.function }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        function: [ transaction, pipeline, showprocesslist ]
    env:
      postgresql_version: postgres:12-alpine
      mysql_version: mysql:5.7
      opengauss_version: enmotech/opengauss:2.1.0
    timeout-minutes: 40
    steps:
      - name: Detect ${{ matrix.function }} Execution Condition
        env:
          detected_functions: ${{ needs.detect-changed-files.outputs.detected_functions }}
          current_function: ${{ matrix.function }}
        run: |
          echo "skip_current_step=false" >> $GITHUB_ENV
          if [[ ${detected_functions} == '["ignore"]' ]]; then
            echo "${current_function} is ignored by ignore filter"
            echo "skip_current_step=true" >> $GITHUB_ENV
          fi
          
          if [[ ${detected_functions} == *""$current_function""* ]]; then
            echo "${current_function} is detected by changed filter"
            else
              echo "${current_function} is ignored by filter"
              echo "skip_current_step=true" >> $GITHUB_ENV
          fi
      - name: Checkout Project
        if: (env.skip_current_step == 'false')
        uses: actions/checkout@v3
      - name: Retrieve Maven Caches
        if: (env.skip_current_step == 'false')
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ env.REPOSITORY_NAME }}-maven-third-party-e2e-cache-${{ github.sha }}
          restore-keys: |
            ${{ env.REPOSITORY_NAME }}-maven-third-party-e2e-cache-
            ${{ env.REPOSITORY_NAME }}-maven-third-party-
      - name: Setup JDK 11
        if: (env.skip_current_step == 'false')
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Build ${{ matrix.function }} E2E Image
        if: (env.skip_current_step == 'false')
        run: ./mvnw -B clean install -am -pl test/e2e/operation/${{ matrix.function }} -Pit.env.docker -DskipTests
      - name: Setup JDK 8 for Test
        if: (env.skip_current_step == 'false')
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
      - name: Run MySQL ${{ matrix.function }} E2E Test
        if: (env.skip_current_step == 'false')
        run: ./mvnw -nsu -B install -f test/e2e/operation/${{ matrix.function }}/pom.xml -D${{ matrix.function }}.it.env.type=docker -D${{ matrix.function }}.it.docker.mysql.version=${{ env.mysql_version }} -Dit.scenarios=cluster_jdbc_proxy -Dit.run.modes=Standalone,Cluster
      - name: Run PostgreSQL ${{ matrix.function }} E2E Test
        if: (env.skip_current_step == 'false' && matrix.function != 'showprocesslist')
        run: ./mvnw -nsu -B install -f test/e2e/operation/${{ matrix.function }}/pom.xml -D${{ matrix.function }}.it.env.type=docker -D${{ matrix.function }}.it.docker.postgresql.version=${{ env.postgresql_version }}
      - name: Run openGauss ${{ matrix.function }} E2E Test
        if: (env.skip_current_step == 'false' && matrix.function != 'showprocesslist')
        run: ./mvnw -nsu -B install -f test/e2e/operation/${{ matrix.function }}/pom.xml -D${{ matrix.function }}.it.env.type=docker -D${{ matrix.function }}.it.docker.opengauss.version=${{ env.opengauss_version }}
