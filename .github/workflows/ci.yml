#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Continuous Integration

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: [rerun-ci]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:
  check-license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check License Header
        uses: apache/skywalking-eyes@main
        
  windows:
    runs-on: windows-latest
    steps:
      - name: Cache Maven Repos
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Support longpaths
        run: git config --system core.longpaths true
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build with Maven
        shell: cmd
        run: |
          .\mvnw -B clean cobertura:cobertura -D"maven.javadoc.skip"=true install < nul
          echo "mvnw exited"
      - name: Build examples with Maven
        run: ./mvnw -B -f examples/pom.xml clean package -DskipTests
  
  unix:
    name: CI Tests - JDK ${{ matrix.java.version }} - on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        java:
          - {
            version: 8,
            maven_args: "cobertura:cobertura -Dmaven.javadoc.skip=true"
          }
          - {
            version: 11,
            maven_args: "-Dmaven.javadoc.skip=true"
          }
          - {
            version: 17,
            maven_args: "-Dmaven.javadoc.skip=true"
          }
    steps:
      - name: Cache Maven Repos
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java.version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java.version }}
      - name: Build with Maven
        run: echo y | ./mvnw -B clean install ${{ matrix.java.maven_args }}
      - name: Build examples with Maven
        run: echo y | ./mvnw -B -f examples/pom.xml clean package -DskipTests
