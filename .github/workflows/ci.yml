#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: CI

on:
  push:
    branches: [ master, dev ]
    paths:
      - '.github/workflows/ci.yml'
      - '**/pom.xml'
      - 'src/resources/**'
      - '**/src/main/**'
      - '**/src/test/**'
      - '!distribution/**'
      - '!test/integration-*/**'
      - 'test/integration-driver-test/**'
      - '!*.md'
  pull_request:
    branches: [ master ]
    paths:
      - '.github/workflows/ci.yml'
      - '**/pom.xml'
      - 'src/resources/**'
      - '**/src/main/**'
      - '**/src/test/**'
      - '!distribution/**'
      - '!test/integration-*/**'
      - 'test/integration-driver-test/**'
      - '!*.md'
  repository_dispatch:
    types: [ci-completed]

concurrency:
  group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dcheckstyle.skip=true -Dspotless.apply.skip=true -Dmaven.javadoc.skip=true -Djacoco.skip=true

jobs:
  ci:
    name: CI - JDK ${{ matrix.java-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        java-version: [ 8, 19 ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: shardingsphere-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Maven resolve ranges
        run: ./mvnw versions:resolve-ranges -ntp -Dincludes='org.springframework:*,org.springframework.boot:*'
      - name: Build prod with Maven
        run: ./mvnw -T1C -B -ntp clean install
      - name: Build examples with Maven
        run: ./mvnw -T1C -B -f examples/pom.xml clean package -DskipTests

  test-coverage:
    if: github.repository == 'apache/shardingsphere'
    name: Test coverage report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven Repos
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven- 
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8
      - name: Test with Maven
        run: ./mvnw -T1C -B -ntp clean install cobertura:cobertura -Djacoco.skip=false
      - name: Upload to Codecov
        run: bash <(curl -s https://codecov.io/bash)
