#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Nightly - SQL parser loading from external cases

on:
  schedule:
    - cron: '0 18 */1 * *'  # once a day. UTC time
  workflow_dispatch:

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dcheckstyle.skip=true -Dspotless.apply.skip=true -Dmaven.javadoc.skip=true -Djacoco.skip=true
  RUNS_ON: ubuntu-latest
  REPOSITORY: apache/shardingsphere
  REPOSITORY_NAME: shardingsphere

jobs:
  database-parse:
    if: github.repository == 'apache/shardingsphere'
    name: CI - JDK ${{ matrix.java-version }} for ${{ matrix.database }}
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        java-version: [ 11 ]
        database: [ mysql, postgresql ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ env.REPOSITORY_NAME }}-maven-third-party-cache-${{ github.sha }}
          restore-keys: |
            ${{ env.REPOSITORY_NAME }}-maven-third-party-cache-
            ${{ env.REPOSITORY_NAME }}-maven-third-party-
      - name: Build prod with Maven
        run: ./mvnw -T1C -B -ntp clean install
      - name: Run SQL parser
        run: ./mvnw -nsu -B install -f parser/sql/dialect/${{ matrix.database }}/pom.xml -Dsql.parser.external.it.enabled=true
      - uses: actions/upload-artifact@v3
        with:
          name: sql-report
          path: /tmp/*.csv
